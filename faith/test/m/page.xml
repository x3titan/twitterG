<page>
  <controls count="108">
    <control type="DivRoot" pathname="/divRoot">
      <backgroundColor>FAFCFF</backgroundColor>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <height>796</height>
      <left>0</left>
      <onControlLoad>document.body.style.webkitTapHighlightColor = "rgba(0,0,0,0)";</onControlLoad>
      <onPageCreate><![CDATA[ee.setText = function (panel, text) {
        if (panel.label) {
            panel.label.rows[0].cells[0].innerHTML = text;
        } else {
            addText(panel, text, "center", "middle", "宋体", 9, "#000000", "normal");
        }
        //if (panel._input) panel._inputHint = text;
    }



ee.setOnClick = function (div, func) {
        div.eeOnClick = func;
        if ("ontouchstart" in window) {
            eb.addEvent(div, "touchstart", function (event) {
                div.eeMouseDownX = event.changedTouches[0].screenX;
                div.eeMouseDownY = event.changedTouches[0].screenY;
                div.i_clickCanceled = false;
                div.eeTouchStartTime = new Date();
            }, false);
            eb.addEvent(div, "touchend", function (event) {
                var d = Math.pow(Math.abs(event.changedTouches[0].screenX - div.eeMouseDownX),2);
                d += Math.pow(Math.abs(event.changedTouches[0].screenY - div.eeMouseDownY),2);
                d = Math.sqrt(d);
                if ((d < 20) &amp;&amp; ((new Date()).getTime() - div.eeTouchStartTime.getTime() < 600) &amp;&amp; (!div.i_clickCanceled)) {
                    if (div.eeOnClick) {
                        if (div.eeOnClick(div, event) == false) {
                            var d = div.parentNode;
                            while (d) {
                                if (d.eeOnClickCancel) {
                                    d.eeOnClickCancel(d, event);
                                }
                                d = d.parentNode;
                            }
                            window.event? window.event.cancelBubble = true : event.stopPropagation();
                            event.returnValue = false;
                            return false;
                        }
                    }
                }
            }, false);
            eb.addEvent(div, "touchmove", function (event) {
                var d = Math.pow(Math.abs(event.changedTouches[0].screenX - div.eeMouseDownX),2);
                d += Math.pow(Math.abs(event.changedTouches[0].screenY - div.eeMouseDownY),2);
                d = Math.sqrt(d);
                if ((d>20) &amp;&amp; (!div.i_clickCanceled)) {
                    div.i_clickCanceled = true;
                    if (div.eeOnClickCancel) {
                        div.eeOnClickCancel(div, event);
                    }
                }
            }, false);
        } else {
            eb.addEvent(div, "click", function (event) {
                if (div.eeOnClick) {
                    if (div.eeOnClick(div, event) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }
            }, false);
        }
    }

ee.setOnMouseEnter = function (div, func) {
        div.eeOnMouseEnter = func;
        if (!("ontouchstart" in window)) {
            eb.addEvent(div, "mouseenter", function (e) {
                div.eeOnMouseEnter(div, e);
            }, false);
            eb.addEvent(div, "mouseover", function (e) {
                div.eeOnMouseEnter(div, e);
            }, false);
        }
    }
ee.setOnMouseLeave = function (div, func) {
        div.eeOnMouseLeave = func;
        if (!("ontouchstart" in window)) {
            eb.addEvent(div, "mouseleave", function (e) {
                div.eeOnMouseLeave(div, e);
            }, false);
            eb.addEvent(div, "mouseout", function (e) {
                div.eeOnMouseLeave(div, e);
            }, false);
        }
    }


eb.initMouseEvent = function (div) {
        if ("ontouchstart" in window) {
            if (div.eeMouseDown) {
                eb.addEvent(div, "touchstart", function (event) {
                    if (div.eeMouseDown(div, event, event.changedTouches[0].clientX, event.changedTouches[0].clientY) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }, false);
            }
            if (div.eeMouseUp) {
                eb.addEvent(div, "touchend", function (event) {
                    if (div.eeMouseUp(div, event, event.changedTouches[0].clientX, event.changedTouches[0].clientY) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }, false);
            }
            if (div.eeMouseMove) {
                eb.addEvent(div, "touchmove", function (event) {
                    if (div.eeMouseMove(div, event, event.changedTouches[0].clientX, event.changedTouches[0].clientY) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }, false);
            }
        } else {
            if (div.eeMouseDown) {
                eb.addEvent(div, "mousedown", function (event) {
                    if (div.eeMouseDown(div, event, event.x, event.y) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }, false);
            }
            if (div.eeMouseUp) {
                eb.addEvent(div, "mouseup", function (event) {
                    if (div.eeMouseUp(div, event, event.x, event.y) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }, false);
            }
            if (div.eeMouseMove) {
                eb.addEvent(div, "mousemove", function (event) {
                    if (div.eeMouseMove(div, event, event.x, event.y) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }, false);
            }
        }
    }

function createPanel(parent, name, bgColor, left, top, width, height) {
    var result = eb.createDiv(parent);
    result.id = name;
    eb.setDivRect(result, left, top, width, height);
    if (bgColor.length == 6) {
        result.style.backgroundColor = "#" + bgColor;
    } else if (bgColor.length>0) {
        result.style.backgroundColor = bgColor;
    }
    //if (name.length > 3) {
    //    eval("parent." + name.substr(3, name.length) + "=result");
    //}
    if (parent.eeChildren == undefined) {
        parent.eeChildren = new Array();
    }
    parent.eeChildren.push(result);
    result.eeChildren = new Array();
    return result;
}]]></onPageCreate>
      <pageHead><![CDATA[<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no" />

<style>
body {
  touch-action: pan-y;
}

.aniAll3 {
    transition: all 0.3s;
}

</style>]]></pageHead>
      <top>0</top>
      <width>1087</width>
    </control>
    <control type="Panel" pathname="/divRoot/panel112">
      <autoScroll>true</autoScroll>
      <backgroundColor>FFFFFF</backgroundColor>
      <backgroundImg>dark1.png</backgroundImg>
      <backgroundImgMode>stretch</backgroundImgMode>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <ee_LocalName>popBlack</ee_LocalName>
      <height>796</height>
      <heightRatio>1</heightRatio>
      <layerName>主界面黑背景弹窗合辑</layerName>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <onClick>if (!ee.isInternalNode(sender, event.target)) {
    return;
}
if (sender.a7 &amp;&amp; (sender.a7.style.visibility != "hidden")) return;
sender.close();
</onClick>
      <onCreate><![CDATA[sender.style.position = "fixed";
sender.style.zIndex=100;
sender.v_canScroll = false;

sender.addEventListener("mousewheel", function(e) {
    if (!sender.v_canScroll) {
        window.event? window.event.cancelBubble = true : e.stopPropagation();
        e.returnValue = false;
        return false;
    }
    sender.v_canScroll = false;
});

sender.close = function() {
    for (var i=0; i<sender.eeChildren.length; i++) {
        if (sender.eeChildren[i].style.visibility != "hidden") {
            if (sender.eeChildren[i].close) {
                sender.eeChildren[i].close();
                ee.setVisible(this, false);
            } else {
                ee.showAni(sender.eeChildren[i], 1);
            }
        }
    }
}

if ("ontouchstart" in window) {
    if (g5.isIos) {
        //1.touch down drag page bug
        //2.touch down context menu
        //eb.addEvent(sender, "touchstart", function (event) {
        //    event.preventDefault();
        //    window.event? window.event.cancelBubble = true : event.stopPropagation();
        //    return false;
        //}, false);
        eb.addEvent(sender, "touchend", function (event) {
            event.preventDefault();
            window.event? window.event.cancelBubble = true : event.stopPropagation();
            return false;
        }, false);
        eb.addEvent(sender, "touchmove", function (event) {
            event.preventDefault();
            window.event? window.event.cancelBubble = true : event.stopPropagation();
            return false;
        }, false);
    }
}
]]></onCreate>
      <sizeRatio>0.732290708371665</sizeRatio>
      <top>0</top>
      <width>1087</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel142">
      <ani2Alpha>disappear:渐变消失</ani2Alpha>
      <aniAlpha>appear:渐变出现</aniAlpha>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <ee_LocalName>a2</ee_LocalName>
      <height>796</height>
      <heightRatio>1</heightRatio>
      <layerName>图片展示</layerName>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <onAni2End>sender.close();
</onAni2End>
      <onClick>return;
if (!ee.isInternalNode(sender, event.target)) {
    return;
}
sender.parentNode.close();</onClick>
      <onCreate><![CDATA[sender.c_photoRoot = ee.getControl("panel145");
sender.c_photo = ee.getControl("panel75");
sender.c_video = ee.getControl("panel76");
sender.c_button1 = ee.getControl("panel8");
sender.c_button2 = ee.getControl("panel52");
sender.c_mobileBg = ee.getControl("panel607");
sender.c_BtnConfirm = ee.getControl("panel613");
sender.c_iosCover = ee.getControl("panel619");

sender.show = function(photos, photo) {
    ee.setVisible(this.c_mobileBg, g5.isMobile);
    ee.setVisible(this.c_button1, true);
    ee.setVisible(this.c_button2, true);
    ee.setVisible(this.c_BtnConfirm, false);
    if (g5.isMobile) {
        this.setHammer();
        
        eb.setOuter(sender.c_photoRoot,0,0,0,0);
        sender.c_button1.dockX = "disabled";
        sender.c_button1.dockY = "bottom";
        sender.c_button2.dockX = "disabled";
        sender.c_button2.dockY = "bottom";
        var w = eb.getClientSize().w;
        w = parseInt(w - 100*2)/3;
        ee.setRect(sender.c_button1, w,null,100,50);
        ee.setRect(sender.c_button2, w+100+w,null,100,50);
        sender.c_button1.style.borderRadius = "25px 0px 0px 25px";
        sender.c_button2.style.borderRadius = "0px 25px 25px 0px";
        sender.c_button1.style.backgroundColor = "";
        sender.c_button2.style.backgroundColor = "";
        eb.processDock();
        var r = eb.getDivRectSetting(sender.c_photoRoot);
        ee.setRect(sender.c_photo, 0,0,r.w, r.h);
        ee.setRect(sender.c_iosCover, 0,0,r.w, r.h);
    }
    sender.v_photos = photos;
    sender.v_index = -1;
    for (var i = 0; i < photos.length; i++) {
        if (photos[i]==photo) {
            sender.v_index = i;
            break;
        }    
    }
    if (sender.v_index<0) return;
    sender.refresh();    
    document.addEventListener("keydown", this.onKeyDown);
    ee.setVisible(this, true);
    ee.setVisible(this.parentNode, true);
}

sender.showConfirm = function(photo, onConfirm) {
    ee.setVisible(this.c_mobileBg, g5.isMobile);
    ee.setVisible(this.c_button1, false);
    ee.setVisible(this.c_button2, false);
    ee.setVisible(this.c_BtnConfirm, true);
    this.f_onConfirm = onConfirm;
    if (g5.isMobile) {
        this.setHammer();
        
        eb.setOuter(sender.c_photoRoot,0,0,0,0);
        sender.c_button1.dockX = "disabled";
        sender.c_button1.dockY = "bottom";
        sender.c_button2.dockX = "disabled";
        sender.c_button2.dockY = "bottom";
        var w = eb.getClientSize().w;
        w = parseInt(w - 100*2)/3;
        ee.setRect(sender.c_button1, w,null,100,50);
        ee.setRect(sender.c_button2, w+100+w,null,100,50);
        sender.c_button1.style.borderRadius = "25px 0px 0px 25px";
        sender.c_button2.style.borderRadius = "0px 25px 25px 0px";
        sender.c_button1.style.backgroundColor = "";
        sender.c_button2.style.backgroundColor = "";
        eb.processDock();
        var r = eb.getDivRectSetting(sender.c_photoRoot);
        ee.setRect(sender.c_photo, 0,0,r.w, r.h);
        ee.setRect(sender.c_iosCover, 0,0,r.w, r.h);
    }
    this.v_photos = new Array();
    this.v_photos.push(photo);
    this.v_index = 0;
    sender.refresh();    
    document.addEventListener("keydown", this.onKeyDown);
    ee.setVisible(this, true);
    ee.setVisible(this.parentNode, true);
}

sender.setHammer = function() {
    if (!g5.isMobile) return;
    sender.c_photo.dockX = "disabled";
    sender.c_photo.dockY = "disabled";
    sender.v_touchEnd = true;
    sender.v_r = eb.getDivRectSetting(sender);
    sender.v_startP = new Point(0,0);
    if (sender.hammer) sender.hammer.destroy();
    sender.hammer = new Hammer(sender.c_photoRoot);
    
    /*
    ee.getControl("panel75").addEventListener("touchstart", function(ev) {
        console.log("touchStart Received");
    });
    ee.getControl("panel75").addEventListener("touchend", function() {
        console.log("touchEnd Received");
    });
    ee.getControl("panel75").addEventListener("touchmove", function() {
        console.log("touchmove Received");
    });
    */
    
    sender.hammer.get("pinch").set({ enable: true });
    sender.hammer.get("pan").set({ direction: Hammer.DIRECTION_ALL });
    sender.hammer.on("pan", function(ev) {
        if (sender.v_touchEnd) {
            sender.v_r = eb.getDivRectSetting(sender.c_photo);
            sender.v_startP.x = ev.deltaX;
            sender.v_startP.y = ev.deltaY;
            sender.v_touchEnd = false;
        }
        if (ev.eventType == 4) {
            sender.v_touchEnd = true;
        }
        var r0 = eb.getDivRectSetting(sender.c_photoRoot);
        var r = new Rect();
        r.x = sender.v_r.x + ev.deltaX - sender.v_startP.x;
        r.y = sender.v_r.y + ev.deltaY - sender.v_startP.y;
        r.w = sender.v_r.w;
        r.h = sender.v_r.h;
        r.x = Math.min(0, r.x);
        r.y = Math.min(0, r.y);
        if (r.x+r.w<r0.w) r.x = r0.w-r.w;
        if (r.y+r.h<r0.h) r.y = r0.h-r.h;
        ee.setRect(sender.c_photo, r.x,r.y, null, null);
        if (sender.c_iosCover.style.visibility == "visible") {
            ee.setRect(sender.c_iosCover, r.x,r.y, null, null);
        }
    });
    
    sender.hammer.on("pinchstart", function(ev) {
        sender.v_r = eb.getDivRectSetting(sender.c_photo);
        sender.v_scale = ev.scale;
        sender.v_ri = new Rect();
        sender.v_ri.w = sender.c_photo.img.width;
        sender.v_ri.h = sender.c_photo.img.height;
    });
    sender.hammer.on("pinchmove",  function(ev) {
        var r0 = eb.getDivRectSetting(sender.c_photoRoot);
        var r = new Rect();
        var sc = Math.min(ev.scale/sender.v_scale, Math.max(r0.w*2/sender.v_ri.w, r0.h*2/sender.v_ri.h));
        r.w = parseInt(sender.v_r.w * sc);
        r.h = parseInt(sender.v_r.h * sc);
        r.w = Math.max(r.w, r0.w);
        r.h = Math.max(r.h, r0.h);
        r.x = parseInt((sender.v_r.x + sender.v_r.w/2) - r.w/2 + ev.deltaX);
        r.y = parseInt((sender.v_r.y + sender.v_r.h/2) - r.h/2 + ev.deltaY);
        r.x = Math.min(0, r.x);
        r.y = Math.min(0, r.y);
        if (r.x+r.w<r0.w) r.x = r0.w-r.w;
        if (r.y+r.h<r0.h) r.y = r0.h-r.h;
        ee.setRect(sender.c_photo, r.x,r.y,r.w,r.h);
        ee.setVisible(sender.c_iosCover, false);
        //if (sender.c_iosCover.style.visibility == "visible") {
        //    ee.setRect(sender.c_iosCover, r.x,r.y,r.w,r.h);
        //}
    });
    sender.hammer.on("pinchend",  function(ev) {
        sender.v_touchEnd = true;
    });
    sender.hammer.on("swipeleft",  function(ev) {
        var r0 = eb.getDivRectSetting(sender.c_photoRoot);
        var r1 = eb.getDivRectSetting(sender.c_photo);
        if (r0.w!=r1.w) return;
        sender.clickRight();
    });
    sender.hammer.on("swiperight",  function(ev) {
        var r0 = eb.getDivRectSetting(sender.c_photoRoot);
        var r1 = eb.getDivRectSetting(sender.c_photo);
        if (r0.w!=r1.w) return;
        //g5.writeLog(ev.type);
        sender.clickLeft();
    });
    /*
    var c = document.getElementById("divRoot");
    c.style.overflow = "hidden";
    var c = document.getElementById("ee_divRoot");
    c.style.overflow = "hidden";
    var c = ee.getControl("panel134");
    c.style.overflow = "hidden";    
    */
}

sender.onKeyDown = function(event) {
    event = event || window.event;
    if (event.keyCode == 37) {
        ee.getControl("panel8").click();
    } else if (event.keyCode == 39) {
        ee.getControl("panel52").click();
    } else if (event.keyCode == 27) {
        sender.parentNode.click();
    }
}

sender.refresh = function() {
    if (this.v_index<0) return;
    if (this.v_index>=this.v_photos.length) return;
    var v_photo = this.v_photos[this.v_index];
    var rect = eb.getDivRect(this.c_photo);
    this.c_video.innerHTML = "";
    ee.setVisible(this.c_video, false);
    if (v_photo.substr(0,4) == "?YTB") {
        ee.setVisible(this.c_photo, false);
        this.c_video.innerHTML =
            "<iframe width='" + rect.w + "' height='" + rect.h + "' src='https://www.youtube.com/embed/" +
            v_photo.substr(4, v_photo.length) + 
            "' frameborder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>";
        ee.setVisible(this.c_video, true);
        ee.setVisible(this.c_iosCover, false);
    } else {
        this.c_photo.imgUrl = g5.getUserTitleBgUrl(v_photo)[1];
        ee.setImage(this.c_photo, this.c_photo.imgUrl,"fill","","");
        ee.setVisible(this.c_photo, true);
        ee.setVisible(this.c_iosCover, g5.isIos);
        if (g5.isIos) ee.setImage(this.c_iosCover, this.c_photo.imgUrl,"fill","","");
    }
}

sender.clear = function() {
    ee.setImage(this.c_photo,"","fill","","");
    this.c_video.innerHTML = "";
    ee.setVisible(this.c_photo, false);
    ee.setVisible(this.c_video, false);
}

sender.close = function() {
    ee.setVisible(this.parentNode, false);
    ee.setVisible(this, false);
    document.removeEventListener("keydown", this.onKeyDown);
    this.clear();
}

sender.clickLeft = function() {
    if (sender.v_photos.length<=1) return;
    this.c_photoRoot.className = "aniAll3";
    this.c_photoRoot.id = "";
    this.c_photo.id = "";
    this.c_video.id= "";
    var r = eb.getDivRectSetting(this);
    var delCon = this.c_photoRoot;
    ee.setRect(delCon,r.w,null,null,null);
    setTimeout(function() {
        ee.removeControl(delCon);
    }, 500);
    
    this.c_photoRoot = createPanel(this, "panel145", "",-r.w,0,r.w,r.h);
    ee.setOnClick(this.c_photoRoot, function(senderP, event) {
        senderP.parentNode.parentNode.close();
    }); 
    ee.changeParent(this.c_photoRoot,this,1);
    this.c_photoRoot.className = "aniAll3";
    this.c_photo = createPanel(this.c_photoRoot, "panel75", "",0,0,r.w,r.h);    
    this.c_video = createPanel(this.c_photoRoot, "panel76", "",0,0,r.w,r.h);
    this.setHammer();    
    if (this.v_index==0) {
        this.v_index = this.v_photos.length-1;
    } else {
        this.v_index--;
    }
    this.refresh();
    eb.setDivRect(this.c_photoRoot,0,null,null,null);
}

sender.clickRight = function() {
    if (sender.v_photos.length<=1) return;
    this.c_photoRoot.className = "aniAll3";
    this.c_photoRoot.id = "";
    this.c_photo.id = "";
    this.c_video.id= "";
    var r = eb.getDivRectSetting(this);
    var delCon = this.c_photoRoot;
    ee.setRect(delCon,-r.w,null,null,null);
    setTimeout(function() {
        ee.removeControl(delCon);
    }, 500);

    this.c_photoRoot = createPanel(this, "panel145", "",r.w,0,r.w,r.h);
    ee.setOnClick(this.c_photoRoot, function(senderP, event) {
        senderP.parentNode.parentNode.close();
    }); 
    ee.changeParent(this.c_photoRoot,this,1);
    this.c_photoRoot.className = "aniAll3";
    this.c_photo = createPanel(this.c_photoRoot, "panel75", "",0,0,r.w,r.h);    
    this.c_video = createPanel(this.c_photoRoot, "panel76", "",0,0,r.w,r.h);    
    this.setHammer(); 
    if (this.v_index >= this.v_photos.length-1) {
        this.v_index = 0;
    } else {
        this.v_index++;
    }
    this.refresh();
    eb.setDivRect(this.c_photoRoot,0,null,null,null);
}
]]></onCreate>
      <sizeRatio>0.732290708371665</sizeRatio>
      <top>0</top>
      <width>1087</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel142/panel607">
      <backgroundColor>403534</backgroundColor>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <height>796</height>
      <heightRatio>1</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <note>c_mobileBg</note>
      <sizeRatio>0.732290708371665</sizeRatio>
      <top>0</top>
      <width>1087</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel142/panel145">
      <backgroundImgMode>fill</backgroundImgMode>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <height>696</height>
      <heightRatio>0.874371859296482</heightRatio>
      <layerVisible>false</layerVisible>
      <left>80</left>
      <leftRatio>0.0735970561177553</leftRatio>
      <note>c_photoRoot</note>
      <onClick>sender.parentNode.parentNode.close();</onClick>
      <outerBottom>50</outerBottom>
      <outerLeft>80</outerLeft>
      <outerRight>80</outerRight>
      <outerTop>50</outerTop>
      <sizeRatio>0.750809061488673</sizeRatio>
      <top>50</top>
      <topRatio>0.0628140703517588</topRatio>
      <width>927</width>
      <widthRatio>0.852805887764489</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel142/panel145/panel75">
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <height>696</height>
      <heightRatio>1</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <note>c_photo</note>
      <sizeRatio>0.750809061488673</sizeRatio>
      <top>0</top>
      <width>927</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel142/panel145/panel76">
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <height>696</height>
      <heightRatio>1</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <note>c_video</note>
      <sizeRatio>0.750809061488673</sizeRatio>
      <top>0</top>
      <width>927</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel142/panel147">
      <height>49</height>
      <heightRatio>0.0615577889447236</heightRatio>
      <layerVisible>false</layerVisible>
      <left>10</left>
      <leftRatio>0.00919963201471941</leftRatio>
      <sizeRatio>0.844827586206897</sizeRatio>
      <top>10</top>
      <topRatio>0.0125628140703518</topRatio>
      <width>58</width>
      <widthRatio>0.0533578656853726</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel142/panel147/panel146">
      <backgroundImg>i087_01.png</backgroundImg>
      <backgroundImgMode>fill</backgroundImgMode>
      <cursor>pointer</cursor>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <height>39</height>
      <heightRatio>0.795918367346939</heightRatio>
      <layerVisible>false</layerVisible>
      <left>5</left>
      <leftRatio>0.0862068965517241</leftRatio>
      <onClick>sender.parentNode.parentNode.close();</onClick>
      <outerBottom>5</outerBottom>
      <outerLeft>5</outerLeft>
      <outerRight>5</outerRight>
      <outerTop>5</outerTop>
      <sizeRatio>0.8125</sizeRatio>
      <top>5</top>
      <topRatio>0.102040816326531</topRatio>
      <width>48</width>
      <widthRatio>0.827586206896552</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel142/panel619">
      <cursor>pointer</cursor>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <fontBold>true</fontBold>
      <fontColor>1E90FF</fontColor>
      <fontSize>14</fontSize>
      <height>796</height>
      <heightRatio>1</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <note>c_iosCover</note>
      <onCreate>eb.setAlpha(sender, 1);
sender.addEventListener("touchstart", function(ev) {
    var newEv = new TouchEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
    //ev.preventDefault();
});

sender.addEventListener("touchmove", function(ev) {
    var newEv = new TouchEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("touchend", function(ev) {
    var newEv = new TouchEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("touchcanceled", function(ev) {
    var newEv = new TouchEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("touchenter", function(ev) {
    console.log("touchenter");
    var newEv = new TouchEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("touchleave", function(ev) {
    console.log("touchleave");
    var newEv = new TouchEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("pointerdown", function(ev) {
    var newEv = new PointerEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("pointerup", function(ev) {
    var newEv = new PointerEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("pointermove", function(ev) {
    var newEv = new PointerEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});



</onCreate>
      <sizeRatio>0.732290708371665</sizeRatio>
      <top>0</top>
      <width>1087</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel142/panel8">
      <backgroundImgMode>fill</backgroundImgMode>
      <cursor>pointer</cursor>
      <dockX>left</dockX>
      <dockY>center</dockY>
      <fontBold>true</fontBold>
      <fontColor>1E90FF</fontColor>
      <fontSize>14</fontSize>
      <height>176</height>
      <heightRatio>0.221105527638191</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <onCreate><![CDATA[sender.style.borderRadius = "0px 25px 25px 0px";
sender.baseColor = "rgba(0,0,0,0.2)";
sender.style.backgroundColor = sender.baseColor;
ee.setText(sender,"<svg viewBox=\"0 0 800 800\" style=\"display:inline;height:1.9em;width:1.9em;margin:0px 0px 0px 0px;fill:#ffffff;vertical-align:middle;\">"+g5.iconLeft+"</svg>");
ee.setOnMouseEnter(sender, function(sender,event) { 
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = "rgba(0,0,0,0.5)";
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = sender.baseColor;
});
sender.eeMouseDown = function(sender,event,x,y) {
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = "rgba(0,0,0,0.8)";
}
sender.eeMouseUp = function(sender,event,x,y) {
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = "rgba(0,0,0,0.5)";
}
ee.setOnClick(sender, function(sender, event) {
    sender.parentNode.clickLeft();
    window.event? window.event.cancelBubble = true : event.stopPropagation();
});
eb.initMouseEvent(sender);

]]></onCreate>
      <sizeRatio>3.2</sizeRatio>
      <text><![CDATA[<]]></text>
      <top>310</top>
      <topRatio>0.389447236180905</topRatio>
      <width>55</width>
      <widthRatio>0.0505979760809568</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel142/panel52">
      <backgroundImgMode>fill</backgroundImgMode>
      <cursor>pointer</cursor>
      <dockX>right</dockX>
      <dockY>center</dockY>
      <fontBold>true</fontBold>
      <fontColor>1E90FF</fontColor>
      <fontSize>14</fontSize>
      <height>176</height>
      <heightRatio>0.221105527638191</heightRatio>
      <layerVisible>false</layerVisible>
      <left>1032</left>
      <leftRatio>0.949402023919043</leftRatio>
      <onCreate><![CDATA[sender.style.borderRadius = "25px 0px 0px 25px";
sender.baseColor = "rgba(0,0,0,0.2)";
sender.style.backgroundColor = sender.baseColor;
ee.setText(sender,"<svg viewBox=\"0 0 800 800\" style=\"display:inline;height:1.9em;width:1.9em;margin:0px 0px 0px 0px;fill:#ffffff;vertical-align:middle;\">"+g5.iconRight+"</svg>");
ee.setOnMouseEnter(sender, function(sender,event) { 
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = "rgba(0,0,0,0.5)";
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = sender.baseColor;
});
sender.eeMouseDown = function(sender,event,x,y) {
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = "rgba(0,0,0,0.8)";
    window.event? window.event.cancelBubble = true : event.stopPropagation();
}
sender.eeMouseUp = function(sender,event,x,y) {
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = "rgba(0,0,0,0.5)";
    window.event? window.event.cancelBubble = true : event.stopPropagation();
}
ee.setOnClick(sender, function(sender, event) {
    sender.parentNode.clickRight();
    window.event? window.event.cancelBubble = true : event.stopPropagation();
});
eb.initMouseEvent(sender);

]]></onCreate>
      <sizeRatio>3.2</sizeRatio>
      <text><![CDATA[>]]></text>
      <top>310</top>
      <topRatio>0.389447236180905</topRatio>
      <width>55</width>
      <widthRatio>0.0505979760809568</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel142/panel613">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <dockX>center</dockX>
      <dockY>bottom</dockY>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <height>40</height>
      <heightRatio>0.050251256281407</heightRatio>
      <layerVisible>false</layerVisible>
      <left>463</left>
      <leftRatio>0.425942962281509</leftRatio>
      <note>c_BtnConfirm</note>
      <onClick>sender.parentNode.f_onConfirm();
sender.parentNode.parentNode.close();
window.event? window.event.cancelBubble = true : event.stopPropagation();
</onClick>
      <onCreate>sender.BStyle = function(color1,color2,color3,text1,text2,text3,tColor1,tColor2,tColor3,bdColor) {
    this.color1 = color1;
    this.color2 = color2
    this.color3 = color3;
    this.text1 = text1;
    this.text2 = text2;
    this.text3 = text3;
    this.tColor1 = tColor1;
    this.tColor2 = tColor2;
    this.tColor3 = tColor3;
    this.bdColor = bdColor;
}
sender.v_style = [
    new sender.BStyle("#20b020","#20c020","#30a030","发送","发送","发送","#ffffff","#ffffff","#ffffff","")
];

sender.init = function(index) {
    this.v_index = index;
    this.style.backgroundColor = this.v_style[index].color1;
    ee.setText(this, this.v_style[index].text1);
    ee.setTextColor(this, this.v_style[index].tColor1);
    if (this.v_style[index].bdColor=="") {
        this.style.borderWidth = "0px";
    } else {
        this.style.boxSizing="border-box";
        this.style.borderWidth = "1px";
        this.style.borderColor = this.v_style[index].bdColor;
        this.style.borderStyle = "solid";
    }
    this.style.borderRadius = parseInt(eb.getDivRect(this).h/2) + "px";
}

ee.setOnMouseEnter(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    ee.setText(sender, s.text2);
    ee.setTextColor(sender, s.tColor2);
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    ee.setText(sender, s.text1);
    ee.setTextColor(sender, s.tColor1);
});
sender.eeMouseDown = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color3;
    setTimeout(function() {
        ee.setText(sender, s.text3);
    }, 1000); 
    ee.setTextColor(sender, s.tColor3);
}
sender.eeMouseUp = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    setTimeout(function() {
        ee.setText(sender, s.text2);
    }, 1000); 
    ee.setTextColor(sender, s.tColor2);
}
eb.initMouseEvent(sender);

sender.init(0);







</onCreate>
      <outerBottom>30</outerBottom>
      <sizeRatio>0.25</sizeRatio>
      <text>发送</text>
      <top>726</top>
      <topRatio>0.912060301507538</topRatio>
      <width>160</width>
      <widthRatio>0.147194112235511</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel257">
      <ani2Alpha>disappear:渐变消失</ani2Alpha>
      <ani2Size>pointDisappear:收缩消失成点</ani2Size>
      <aniAlpha>appear:渐变出现</aniAlpha>
      <backgroundColor>FFFFFF</backgroundColor>
      <backgroundImgMode>fill</backgroundImgMode>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>center</dockX>
      <dockY>center</dockY>
      <ee_LocalName>a6</ee_LocalName>
      <height>255</height>
      <heightRatio>0.32035175879397</heightRatio>
      <layerName>通用确认窗口</layerName>
      <layerVisible>false</layerVisible>
      <left>358</left>
      <leftRatio>0.329346826126955</leftRatio>
      <onAni2End>ee.setVisible(ee.getControl("panel112"), false);
</onAni2End>
      <onClick>        window.event? window.event.cancelBubble = true : event.stopPropagation();
</onClick>
      <onCreate>sender.style.boxSizing="border-box";
sender.style.borderWidth = "1px";
sender.style.borderColor = "#a0a0a0";
sender.style.borderStyle = "solid";
sender.style.borderRadius = "10px";
sender.style.boxShadow = "5px 5px 15px #808080";

sender.show = function(title,text,bStyle1,bStyle2,onComplete,onButton1) {
    ee.setText(this.c_title,title);
    ee.setText(this.c_text,text);
    this.c_btnCancel.v_style = bStyle1;
    this.c_btnCancel.init(0);
    this.c_btnOK.v_style = bStyle2;
    this.c_btnOK.init(0);
    this.onComplete = onComplete;
    this.onButton1 = onButton1;
    ee.setVisible(this.parentNode, true);
    ee.setVisible(this, true);
    document.addEventListener("keydown", this.onKeyDown);
}

sender.close = function() {
    ee.setVisible(this, false);
    ee.setVisible(this.parentNode, false);
    document.removeEventListener("keydown", this.onKeyDown);
}

sender.onKeyDown = function(event) {
    event = event || window.event;
    if (event.keyCode == 13) {
        sender.close();
        if (sender.onComplete) sender.onComplete();
    } else if (event.keyCode == 27) {
        sender.parentNode.close();
        if (!eb.isEmpty(sender.onButton1)) {
            sender.onButton1();
            sender.onButton1 = null;
        }
    }
}

if ("ontouchstart" in window) {
    sender.addEventListener("touchstart", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchend", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchmove", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
}




</onCreate>
      <sizeRatio>0.689189189189189</sizeRatio>
      <top>270</top>
      <topRatio>0.339195979899498</topRatio>
      <width>370</width>
      <widthRatio>0.340386384544618</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel257/panel258">
      <ee_LocalName>c_text</ee_LocalName>
      <fontColor>657786</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <height>116</height>
      <heightRatio>0.454901960784314</heightRatio>
      <layerVisible>false</layerVisible>
      <left>26</left>
      <leftRatio>0.0702702702702703</leftRatio>
      <sizeRatio>0.361370716510903</sizeRatio>
      <text>此操作不可撤消，并且将从你的个人资料、关注你的任何账号的时间线以及 GET搜索结果中移除。</text>
      <top>58</top>
      <topRatio>0.227450980392157</topRatio>
      <width>321</width>
      <widthRatio>0.867567567567568</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel257/panel259">
      <dockX>center</dockX>
      <ee_LocalName>c_title</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>202326</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>14</fontSize>
      <height>39</height>
      <heightRatio>0.152941176470588</heightRatio>
      <layerVisible>false</layerVisible>
      <left>57</left>
      <leftRatio>0.154054054054054</leftRatio>
      <onCreate>sender.label.style.tableLayout = "fixed";
sender.label.rows[0].cells[0].style.overflow = "hidden";
sender.label.rows[0].cells[0].style.textOverflow = "ellipsis";
sender.label.rows[0].cells[0].style.whiteSpace = "nowrap";
</onCreate>
      <sizeRatio>0.152941176470588</sizeRatio>
      <text>删除发言</text>
      <top>18</top>
      <topRatio>0.0705882352941176</topRatio>
      <width>255</width>
      <widthRatio>0.689189189189189</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel257/panel260">
      <backgroundColor>00C0C0</backgroundColor>
      <cursor>move</cursor>
      <dockX>fill</dockX>
      <dockY>top</dockY>
      <height>65</height>
      <heightRatio>0.254901960784314</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <onCreate><![CDATA[sender.v_down = false;
sender.style.backgroundColor = "rgba(255,255,255,0.01)";
if ("ontouchstart" in window) {
    sender.addEventListener("touchstart", function(event) {
        var sender = event.target;
        sender.v_down = true;
        sender.v_x = event.changedTouches[0].screenX;
        sender.v_y = event.changedTouches[0].screenY;
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchend", function(event) {
        var sender = event.target;
        sender.v_down = false;
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchmove", function(event) {
        var sender = event.target;
        if (sender.v_down) {
            var dx = event.changedTouches[0].screenX - sender.v_x;
            var dy = event.changedTouches[0].screenY - sender.v_y;
            var rect = eb.getDivRect(sender.parentNode);
            var rectP = eb.getDivRect(sender.parentNode.parentNode);
            if (rect.x+dx<0) dx = null;
            if (rect.x+dx+rect.w>=rectP.w) dx = null;
            if (dx!=null) {
                sender.v_x = event.changedTouches[0].screenX;
                dx = rect.x+dx;
            }
            if (rect.y+dy<0) dy = null;
            if (rect.y+dy+rect.h>=rectP.h) dy = null;
            if (dy!=null) {
                sender.v_y = event.changedTouches[0].screenY ;
                dy = rect.y+dy;
            }
            ee.setRect(sender.parentNode, dx, dy, null, null);
        }
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
} else {
    sender.onpointerdown = function(event) {
        var sender = event.target;
        sender.v_down = true;
        sender.v_x = event.clientX;
        sender.v_y = event.clientY;
        sender.setPointerCapture(event.pointerId);
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
    sender.onpointerup = function(event) {
        var sender = event.target;
        sender.v_down = false;
        sender.releasePointerCapture(event.pointerId);
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
    sender.onpointermove = function(event) {
        var sender = event.target;
        if (sender.v_down) {
            var dx = event.clientX - sender.v_x;
            var dy = event.clientY - sender.v_y;
            var rect = eb.getDivRect(sender.parentNode);
            var rectP = eb.getDivRect(sender.parentNode.parentNode);
            if (rect.x+dx<0) dx = null;
            if (rect.x+dx+rect.w>=rectP.w) dx = null;
            if (dx!=null) {
                sender.v_x = event.clientX;
                dx = rect.x+dx;
            }
            if (rect.y+dy<0) dy = null;
            if (rect.y+dy+rect.h>=rectP.h) dy = null;
            if (dy!=null) {
                sender.v_y = event.clientY;
                dy = rect.y+dy;
            }
            ee.setRect(sender.parentNode, dx, dy, null, null);
        }
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
}




]]></onCreate>
      <sizeRatio>0.175675675675676</sizeRatio>
      <top>0</top>
      <width>370</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel257/panel261">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <ee_LocalName>c_btnCancel</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <height>40</height>
      <heightRatio>0.156862745098039</heightRatio>
      <layerVisible>false</layerVisible>
      <left>56</left>
      <leftRatio>0.151351351351351</leftRatio>
      <onClick>sender.parentNode.close();
if (!eb.isEmpty(sender.parentNode.onButton1)) {
    sender.parentNode.onButton1();
    sender.parentNode.onButton1 = null;
}
</onClick>
      <onCreate>var text = ee.getText(sender);
sender.v_style = [
    new g5.BStyle("","#e8f5fe","#d2ecfc",text,text,text,"#1da1f2","#1da1f2","#1da1f2","#1da1f2"),
];

sender.init = function(index) {
    this.v_index = index;
    this.style.backgroundColor = this.v_style[index].color1;
    ee.setText(this, this.v_style[index].text1);
    ee.setTextColor(this, this.v_style[index].tColor1);
    if (this.v_style[index].bdColor=="") {
        this.style.borderWidth = "0px";
    } else {
        this.style.boxSizing="border-box";
        this.style.borderWidth = "1px";
        this.style.borderColor = this.v_style[index].bdColor;
        this.style.borderStyle = "solid";
        eb.setDivRect(this.label.parentNode,-1,-1,null,null);
    }
    this.style.borderRadius = parseInt(eb.getDivRect(this).h/2) + "px";
}

ee.setOnMouseEnter(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    ee.setText(sender, s.text2);
    ee.setTextColor(sender, s.tColor2);
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    ee.setText(sender, s.text1);
    ee.setTextColor(sender, s.tColor1);
});
sender.eeMouseDown = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color3;
    setTimeout(function() {
        ee.setText(sender, s.text3);
    }, 1000); 
    ee.setTextColor(sender, s.tColor3);
}
sender.eeMouseUp = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    setTimeout(function() {
        ee.setText(sender, s.text2);
    }, 1000); 
    ee.setTextColor(sender, s.tColor2);
}
eb.initMouseEvent(sender);

sender.init(0);







</onCreate>
      <sizeRatio>0.317460317460317</sizeRatio>
      <text>取消</text>
      <top>183</top>
      <topRatio>0.717647058823529</topRatio>
      <width>126</width>
      <widthRatio>0.340540540540541</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel257/panel262">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <ee_LocalName>c_btnOK</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <height>40</height>
      <heightRatio>0.156862745098039</heightRatio>
      <layerVisible>false</layerVisible>
      <left>205</left>
      <leftRatio>0.554054054054054</leftRatio>
      <onClick>sender.parentNode.close();
sender.parentNode.onComplete();</onClick>
      <onCreate>var text = ee.getText(sender);
sender.v_style = [
    new g5.BStyle("","#e8f5fe","#d2ecfc",text,text,text,"#1da1f2","#1da1f2","#1da1f2","#1da1f2"),
];

sender.init = function(index) {
    this.v_index = index;
    this.style.backgroundColor = this.v_style[index].color1;
    ee.setText(this, this.v_style[index].text1);
    ee.setTextColor(this, this.v_style[index].tColor1);
    if (this.v_style[index].bdColor=="") {
        this.style.borderWidth = "0px";
    } else {
        this.style.boxSizing="border-box";
        this.style.borderWidth = "1px";
        this.style.borderColor = this.v_style[index].bdColor;
        this.style.borderStyle = "solid";
        eb.setDivRect(this.label.parentNode,-1,-1,null,null);
    }
    this.style.borderRadius = parseInt(eb.getDivRect(this).h/2) + "px";
}

ee.setOnMouseEnter(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    ee.setText(sender, s.text2);
    ee.setTextColor(sender, s.tColor2);
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    ee.setText(sender, s.text1);
    ee.setTextColor(sender, s.tColor1);
});
sender.eeMouseDown = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color3;
    setTimeout(function() {
        ee.setText(sender, s.text3);
    }, 1000); 
    ee.setTextColor(sender, s.tColor3);
}
sender.eeMouseUp = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    setTimeout(function() {
        ee.setText(sender, s.text2);
    }, 1000); 
    ee.setTextColor(sender, s.tColor2);
}
eb.initMouseEvent(sender);

sender.init(0);







</onCreate>
      <sizeRatio>0.317460317460317</sizeRatio>
      <text>确认</text>
      <top>183</top>
      <topRatio>0.717647058823529</topRatio>
      <width>126</width>
      <widthRatio>0.340540540540541</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel257/panel306">
      <cursor>pointer</cursor>
      <dockX>right</dockX>
      <dockY>top</dockY>
      <height>36</height>
      <heightRatio>0.141176470588235</heightRatio>
      <layerVisible>false</layerVisible>
      <left>316</left>
      <leftRatio>0.854054054054054</leftRatio>
      <onClick>sender.parentNode.close();</onClick>
      <onCreate><![CDATA[ee.setText(sender,
    "<svg viewBox=\"0 0 24 24\" style=\"font-size: 13px;height:1.5em;width:1.5em;margin:5px 8px 8px 5px;fill:rgba(80,80,80,1);vertical-align:middle;\">" + g5.icon.close + "</svg>"
);
sender.style.borderRadius = "50%";
ee.setOnMouseEnter(sender, function(sender,event) {
    sender.style.backgroundColor = "#dfeffa";
});    
ee.setOnMouseLeave(sender, function(sender,event) {
    sender.style.backgroundColor = "";
});
]]></onCreate>
      <outerRight>18</outerRight>
      <outerTop>15</outerTop>
      <sizeRatio>1</sizeRatio>
      <top>15</top>
      <topRatio>0.0588235294117647</topRatio>
      <width>36</width>
      <widthRatio>0.0972972972972973</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel344">
      <ani2Alpha>disappear:渐变消失</ani2Alpha>
      <ani2Size>pointDisappear:收缩消失成点</ani2Size>
      <aniAlpha>appear:渐变出现</aniAlpha>
      <backgroundColor>FFFFFF</backgroundColor>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>center</dockX>
      <dockY>center</dockY>
      <ee_LocalName>a7</ee_LocalName>
      <height>211</height>
      <heightRatio>0.265075376884422</heightRatio>
      <layerName>通用提示窗口</layerName>
      <layerVisible>false</layerVisible>
      <left>364</left>
      <leftRatio>0.334866605335787</leftRatio>
      <onAni2End>ee.setVisible(sender.parentNode, false);
</onAni2End>
      <onClick>        window.event? window.event.cancelBubble = true : event.stopPropagation();
</onClick>
      <onCreate>//samples
/*
popBlack.a7.show(
        "提示", "修改您的用户信息完成",
        [new g5.BStyle("#1da1f2","#1a91da","#1781c2","确定","确定","确定","#ffffff","#ffffff","#ffffff","")],
        //[new g5.BStyle("","#e8f5fe","#d2ecfc","确定","确定","确定","#1da1f2","#1da1f2","#1da1f2","#1da1f2")],
        function() {}
    );
*/

//public
sender.style.boxSizing="border-box";
sender.style.borderWidth = "1px";
sender.style.borderColor = "#a0a0a0";
sender.style.borderStyle = "solid";
sender.style.borderRadius = "10px";
sender.style.boxShadow = "5px 5px 15px #808080";
//sender.className = "elementToFadeInAndOut";
   
   
//implementation
sender.show = function(title,text,bStyle,onComplete) {
    ee.setText(this.c_title,title);
    ee.setText(this.c_text,text);
    this.c_btnOk.v_style = bStyle;
    this.c_btnOk.init(0);
    this.onComplete = onComplete;
    ee.setVisible(this.parentNode, true);
    ee.setVisible(this, true);
    document.addEventListener("keydown", this.onKeyDown);
}

sender.close = function() {
    ee.setVisible(this, false);
    ee.setVisible(this.parentNode, false);
    document.removeEventListener("keydown", this.onKeyDown);
}

sender.onKeyDown = function(event) {
    event = event || window.event;
    if (event.keyCode == 13) {
        sender.close();
        sender.onComplete();        
    }
}


if ("ontouchstart" in window) {
    sender.addEventListener("touchstart", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchend", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchmove", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
}</onCreate>
      <sizeRatio>0.587743732590529</sizeRatio>
      <top>292</top>
      <topRatio>0.366834170854271</topRatio>
      <width>359</width>
      <widthRatio>0.330266789328427</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel344/panel345">
      <ee_LocalName>c_text</ee_LocalName>
      <fontColor>657786</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <height>78</height>
      <heightRatio>0.369668246445498</heightRatio>
      <layerVisible>false</layerVisible>
      <left>26</left>
      <leftRatio>0.0724233983286908</leftRatio>
      <sizeRatio>0.252427184466019</sizeRatio>
      <text>此操作不可撤消，并且将从你的个人资料、关注你的任何账号的时间线以及 GET搜索结果中移除。</text>
      <top>54</top>
      <topRatio>0.255924170616114</topRatio>
      <width>309</width>
      <widthRatio>0.860724233983287</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel344/panel346">
      <dockX>center</dockX>
      <ee_LocalName>c_title</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>202326</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>14</fontSize>
      <height>39</height>
      <heightRatio>0.184834123222749</heightRatio>
      <layerVisible>false</layerVisible>
      <left>25</left>
      <leftRatio>0.0696378830083565</leftRatio>
      <sizeRatio>0.12621359223301</sizeRatio>
      <text>删除发言</text>
      <top>18</top>
      <topRatio>0.0853080568720379</topRatio>
      <width>309</width>
      <widthRatio>0.860724233983287</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel344/panel347">
      <backgroundColor>00C0C0</backgroundColor>
      <cursor>move</cursor>
      <dockX>fill</dockX>
      <dockY>top</dockY>
      <height>65</height>
      <heightRatio>0.308056872037915</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <onCreate><![CDATA[sender.v_down = false;
sender.style.backgroundColor = "rgba(255,255,255,0.01)";
if ("ontouchstart" in window) {
    sender.addEventListener("touchstart", function(event) {
        var sender = event.target;
        sender.v_down = true;
        sender.v_x = event.changedTouches[0].screenX;
        sender.v_y = event.changedTouches[0].screenY;
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchend", function(event) {
        var sender = event.target;
        sender.v_down = false;
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchmove", function(event) {
        var sender = event.target;
        if (sender.v_down) {
            var dx = event.changedTouches[0].screenX - sender.v_x;
            var dy = event.changedTouches[0].screenY - sender.v_y;
            var rect = eb.getDivRect(sender.parentNode);
            var rectP = eb.getDivRect(sender.parentNode.parentNode);
            if (rect.x+dx<0) dx = null;
            if (rect.x+dx+rect.w>=rectP.w) dx = null;
            if (dx!=null) {
                sender.v_x = event.changedTouches[0].screenX;
                dx = rect.x+dx;
            }
            if (rect.y+dy<0) dy = null;
            if (rect.y+dy+rect.h>=rectP.h) dy = null;
            if (dy!=null) {
                sender.v_y = event.changedTouches[0].screenY ;
                dy = rect.y+dy;
            }
            ee.setRect(sender.parentNode, dx, dy, null, null);
        }
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
} else {
    sender.onpointerdown = function(event) {
        var sender = event.target;
        sender.v_down = true;
        sender.v_x = event.clientX;
        sender.v_y = event.clientY;
        sender.setPointerCapture(event.pointerId);
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
    sender.onpointerup = function(event) {
        var sender = event.target;
        sender.v_down = false;
        sender.releasePointerCapture(event.pointerId);
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
    sender.onpointermove = function(event) {
        var sender = event.target;
        if (sender.v_down) {
            var dx = event.clientX - sender.v_x;
            var dy = event.clientY - sender.v_y;
            var rect = eb.getDivRect(sender.parentNode);
            var rectP = eb.getDivRect(sender.parentNode.parentNode);
            if (rect.x+dx<0) dx = null;
            if (rect.x+dx+rect.w>=rectP.w) dx = null;
            if (dx!=null) {
                sender.v_x = event.clientX;
                dx = rect.x+dx;
            }
            if (rect.y+dy<0) dy = null;
            if (rect.y+dy+rect.h>=rectP.h) dy = null;
            if (dy!=null) {
                sender.v_y = event.clientY;
                dy = rect.y+dy;
            }
            ee.setRect(sender.parentNode, dx, dy, null, null);
        }
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
}




]]></onCreate>
      <sizeRatio>0.181058495821727</sizeRatio>
      <top>0</top>
      <width>359</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel344/panel349">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <dockX>center</dockX>
      <ee_LocalName>c_btnOk</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <height>40</height>
      <heightRatio>0.18957345971564</heightRatio>
      <layerVisible>false</layerVisible>
      <left>116</left>
      <leftRatio>0.323119777158774</leftRatio>
      <onClick>sender.parentNode.close();
sender.parentNode.onComplete();</onClick>
      <onCreate>var text = ee.getText(sender);
sender.v_style = [
    new g5.BStyle("","#e8f5fe","#d2ecfc",text,text,text,"#1da1f2","#1da1f2","#1da1f2","#1da1f2"),
];

sender.init = function(index) {
    this.v_index = index;
    this.style.backgroundColor = this.v_style[index].color1;
    ee.setText(this, this.v_style[index].text1);
    ee.setTextColor(this, this.v_style[index].tColor1);
    if (this.v_style[index].bdColor=="") {
        this.style.borderWidth = "0px";
    } else {
        this.style.boxSizing="border-box";
        this.style.borderWidth = "1px";
        this.style.borderColor = this.v_style[index].bdColor;
        this.style.borderStyle = "solid";
        eb.setDivRect(this.label.parentNode,-1,-1,null,null);
    }
    this.style.borderRadius = parseInt(eb.getDivRect(this).h/2) + "px";
}

ee.setOnMouseEnter(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    ee.setText(sender, s.text2);
    ee.setTextColor(sender, s.tColor2);
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    ee.setText(sender, s.text1);
    ee.setTextColor(sender, s.tColor1);
});
sender.eeMouseDown = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color3;
    setTimeout(function() {
        ee.setText(sender, s.text3);
    }, 1000); 
    ee.setTextColor(sender, s.tColor3);
}
sender.eeMouseUp = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    setTimeout(function() {
        ee.setText(sender, s.text2);
    }, 1000); 
    ee.setTextColor(sender, s.tColor2);
}
eb.initMouseEvent(sender);

sender.init(0);







</onCreate>
      <sizeRatio>0.317460317460317</sizeRatio>
      <text>确认</text>
      <top>142</top>
      <topRatio>0.672985781990521</topRatio>
      <width>126</width>
      <widthRatio>0.350974930362117</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel344/panel350">
      <cursor>pointer</cursor>
      <dockX>right</dockX>
      <dockY>top</dockY>
      <height>36</height>
      <heightRatio>0.170616113744076</heightRatio>
      <layerVisible>false</layerVisible>
      <left>305</left>
      <leftRatio>0.84958217270195</leftRatio>
      <onClick>sender.parentNode.close();</onClick>
      <onCreate><![CDATA[ee.setText(sender,
    "<svg viewBox=\"0 0 24 24\" style=\"font-size: 13px;height:1.5em;width:1.5em;margin:5px 8px 8px 5px;fill:rgba(80,80,80,1);vertical-align:middle;\">" + g5.icon.close + "</svg>"
);
sender.style.borderRadius = "50%";
ee.setOnMouseEnter(sender, function(sender,event) {
    sender.style.backgroundColor = "#dfeffa";
});    
ee.setOnMouseLeave(sender, function(sender,event) {
    sender.style.backgroundColor = "";
});
]]></onCreate>
      <outerRight>18</outerRight>
      <outerTop>15</outerTop>
      <sizeRatio>1</sizeRatio>
      <top>15</top>
      <topRatio>0.0710900473933649</topRatio>
      <width>36</width>
      <widthRatio>0.100278551532033</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel630">
      <ani2Alpha>disappear:渐变消失</ani2Alpha>
      <ani2Size>pointDisappear:收缩消失成点</ani2Size>
      <aniAlpha>appear:渐变出现</aniAlpha>
      <backgroundColor>FFFFFF</backgroundColor>
      <backgroundImgMode>fill</backgroundImgMode>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>center</dockX>
      <dockY>center</dockY>
      <ee_LocalName>a10</ee_LocalName>
      <height>209</height>
      <heightRatio>0.262562814070352</heightRatio>
      <layerName>通用字符串输入窗口</layerName>
      <layerVisible>false</layerVisible>
      <left>364</left>
      <leftRatio>0.334866605335787</leftRatio>
      <onAni2End>ee.setVisible(ee.getControl("panel112"), false);
</onAni2End>
      <onClick>        window.event? window.event.cancelBubble = true : event.stopPropagation();
</onClick>
      <onCreate>sender.style.boxSizing="border-box";
sender.style.borderWidth = "1px";
sender.style.borderColor = "#a0a0a0";
sender.style.borderStyle = "solid";
sender.style.borderRadius = "10px";
sender.style.boxShadow = "5px 5px 15px #808080";

sender.show = function(title,text,inputHint,defaultValue,bStyle1,bStyle2,onComplete,onButton1) {
    ee.setText(this.c_title,title);
    ee.setText(this.c_p1.c_text,text);
    this.c_btnCancel.v_style = bStyle1;
    this.c_btnCancel.init(0);
    this.c_btnOK.v_style = bStyle2;
    this.c_btnOK.init(0);
    ee.setText(this.c_p1.c_edit, inputHint);
    this.c_p1.c_edit._inputHint = inputHint;
    ee.setEditText(this.c_p1.c_edit, defaultValue);
    this.onComplete = onComplete;
    this.onButton1 = onButton1;
    ee.setVisible(this.parentNode, true);
    ee.setVisible(this, true);
    document.addEventListener("keydown", this.onKeyDown);
}

sender.close = function() {
    ee.setVisible(this, false);
    ee.setVisible(this.parentNode, false);
    document.removeEventListener("keydown", this.onKeyDown);
}

sender.onKeyDown = function(event) {
    event = event || window.event;
    if (event.keyCode == 13) {
        sender.close();
        if (sender.onComplete) sender.onComplete(ee.getEditText(ee.getControl("edit1")));
    } else if (event.keyCode == 27) {
        sender.parentNode.close();
        if (!eb.isEmpty(sender.onButton1)) {
            sender.onButton1();
            sender.onButton1 = null;
        }
    }
}

if ("ontouchstart" in window) {
    sender.addEventListener("touchmove", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
}

</onCreate>
      <sizeRatio>0.583798882681564</sizeRatio>
      <top>293</top>
      <topRatio>0.368090452261307</topRatio>
      <width>358</width>
      <widthRatio>0.329346826126955</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel630/panel632">
      <dockX>center</dockX>
      <ee_LocalName>c_title</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>202326</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>14</fontSize>
      <height>39</height>
      <heightRatio>0.186602870813397</heightRatio>
      <layerVisible>false</layerVisible>
      <left>50</left>
      <leftRatio>0.139664804469274</leftRatio>
      <onCreate>sender.label.style.tableLayout = "fixed";
sender.label.rows[0].cells[0].style.overflow = "hidden";
sender.label.rows[0].cells[0].style.textOverflow = "ellipsis";
sender.label.rows[0].cells[0].style.whiteSpace = "nowrap";
</onCreate>
      <sizeRatio>0.151750972762646</sizeRatio>
      <text>删除发言</text>
      <top>18</top>
      <topRatio>0.0861244019138756</topRatio>
      <width>257</width>
      <widthRatio>0.717877094972067</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel630/panel633">
      <backgroundColor>00C0C0</backgroundColor>
      <cursor>move</cursor>
      <dockX>fill</dockX>
      <dockY>top</dockY>
      <height>65</height>
      <heightRatio>0.311004784688995</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <onCreate><![CDATA[sender.v_down = false;
sender.style.backgroundColor = "rgba(255,255,255,0.01)";
if ("ontouchstart" in window) {
    sender.addEventListener("touchstart", function(event) {
        var sender = event.target;
        sender.v_down = true;
        sender.v_x = event.changedTouches[0].screenX;
        sender.v_y = event.changedTouches[0].screenY;
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchend", function(event) {
        var sender = event.target;
        sender.v_down = false;
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchmove", function(event) {
        var sender = event.target;
        if (sender.v_down) {
            var dx = event.changedTouches[0].screenX - sender.v_x;
            var dy = event.changedTouches[0].screenY - sender.v_y;
            var rect = eb.getDivRect(sender.parentNode);
            var rectP = eb.getDivRect(sender.parentNode.parentNode);
            if (rect.x+dx<0) dx = null;
            if (rect.x+dx+rect.w>=rectP.w) dx = null;
            if (dx!=null) {
                sender.v_x = event.changedTouches[0].screenX;
                dx = rect.x+dx;
            }
            if (rect.y+dy<0) dy = null;
            if (rect.y+dy+rect.h>=rectP.h) dy = null;
            if (dy!=null) {
                sender.v_y = event.changedTouches[0].screenY ;
                dy = rect.y+dy;
            }
            ee.setRect(sender.parentNode, dx, dy, null, null);
        }
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
} else {
    sender.onpointerdown = function(event) {
        var sender = event.target;
        sender.v_down = true;
        sender.v_x = event.clientX;
        sender.v_y = event.clientY;
        sender.setPointerCapture(event.pointerId);
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
    sender.onpointerup = function(event) {
        var sender = event.target;
        sender.v_down = false;
        sender.releasePointerCapture(event.pointerId);
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
    sender.onpointermove = function(event) {
        var sender = event.target;
        if (sender.v_down) {
            var dx = event.clientX - sender.v_x;
            var dy = event.clientY - sender.v_y;
            var rect = eb.getDivRect(sender.parentNode);
            var rectP = eb.getDivRect(sender.parentNode.parentNode);
            if (rect.x+dx<0) dx = null;
            if (rect.x+dx+rect.w>=rectP.w) dx = null;
            if (dx!=null) {
                sender.v_x = event.clientX;
                dx = rect.x+dx;
            }
            if (rect.y+dy<0) dy = null;
            if (rect.y+dy+rect.h>=rectP.h) dy = null;
            if (dy!=null) {
                sender.v_y = event.clientY;
                dy = rect.y+dy;
            }
            ee.setRect(sender.parentNode, dx, dy, null, null);
        }
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
}




]]></onCreate>
      <sizeRatio>0.181564245810056</sizeRatio>
      <top>0</top>
      <width>358</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel630/panel634">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <ee_LocalName>c_btnCancel</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>35</height>
      <heightRatio>0.167464114832536</heightRatio>
      <layerVisible>false</layerVisible>
      <left>46</left>
      <leftRatio>0.128491620111732</leftRatio>
      <onClick>sender.parentNode.parentNode.close();
if (!eb.isEmpty(sender.parentNode.onButton1)) {
    sender.parentNode.onButton1();
    sender.parentNode.onButton1 = null;
}
</onClick>
      <onCreate>var text = ee.getText(sender);
sender.v_style = [
    new g5.BStyle("","#e8f5fe","#d2ecfc",text,text,text,"#1da1f2","#1da1f2","#1da1f2","#1da1f2"),
];

sender.init = function(index) {
    this.v_index = index;
    this.style.backgroundColor = this.v_style[index].color1;
    ee.setText(this, this.v_style[index].text1);
    ee.setTextColor(this, this.v_style[index].tColor1);
    if (this.v_style[index].bdColor=="") {
        this.style.borderWidth = "0px";
    } else {
        this.style.boxSizing="border-box";
        this.style.borderWidth = "1px";
        this.style.borderColor = this.v_style[index].bdColor;
        this.style.borderStyle = "solid";
        eb.setDivRect(this.label.parentNode,-1,-1,null,null);
    }
    this.style.borderRadius = parseInt(eb.getDivRect(this).h/2) + "px";
}

ee.setOnMouseEnter(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    ee.setText(sender, s.text2);
    ee.setTextColor(sender, s.tColor2);
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    ee.setText(sender, s.text1);
    ee.setTextColor(sender, s.tColor1);
});
sender.eeMouseDown = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color3;
    setTimeout(function() {
        ee.setText(sender, s.text3);
    }, 1000); 
    ee.setTextColor(sender, s.tColor3);
}
sender.eeMouseUp = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    setTimeout(function() {
        ee.setText(sender, s.text2);
    }, 1000); 
    ee.setTextColor(sender, s.tColor2);
}
eb.initMouseEvent(sender);

sender.init(0);







</onCreate>
      <sizeRatio>0.277777777777778</sizeRatio>
      <text>取消</text>
      <top>155</top>
      <topRatio>0.741626794258373</topRatio>
      <width>126</width>
      <widthRatio>0.35195530726257</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel630/panel635">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <ee_LocalName>c_btnOK</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>35</height>
      <heightRatio>0.167464114832536</heightRatio>
      <layerVisible>false</layerVisible>
      <left>195</left>
      <leftRatio>0.544692737430168</leftRatio>
      <onClick>sender.parentNode.parentNode.close();
sender.parentNode.onComplete(ee.getEditText(ee.getControl("edit1")));</onClick>
      <onCreate>var text = ee.getText(sender);
sender.v_style = [
    new g5.BStyle("","#e8f5fe","#d2ecfc",text,text,text,"#1da1f2","#1da1f2","#1da1f2","#1da1f2"),
];

sender.init = function(index) {
    this.v_index = index;
    this.style.backgroundColor = this.v_style[index].color1;
    ee.setText(this, this.v_style[index].text1);
    ee.setTextColor(this, this.v_style[index].tColor1);
    if (this.v_style[index].bdColor=="") {
        this.style.borderWidth = "0px";
    } else {
        this.style.boxSizing="border-box";
        this.style.borderWidth = "1px";
        this.style.borderColor = this.v_style[index].bdColor;
        this.style.borderStyle = "solid";
        eb.setDivRect(this.label.parentNode,-1,-1,null,null);
    }
    this.style.borderRadius = parseInt(eb.getDivRect(this).h/2) + "px";
}

ee.setOnMouseEnter(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    ee.setText(sender, s.text2);
    ee.setTextColor(sender, s.tColor2);
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    ee.setText(sender, s.text1);
    ee.setTextColor(sender, s.tColor1);
});
sender.eeMouseDown = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color3;
    setTimeout(function() {
        ee.setText(sender, s.text3);
    }, 1000); 
    ee.setTextColor(sender, s.tColor3);
}
sender.eeMouseUp = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    setTimeout(function() {
        ee.setText(sender, s.text2);
    }, 1000); 
    ee.setTextColor(sender, s.tColor2);
}
eb.initMouseEvent(sender);

sender.init(0);







</onCreate>
      <sizeRatio>0.277777777777778</sizeRatio>
      <text>确认</text>
      <top>155</top>
      <topRatio>0.741626794258373</topRatio>
      <width>126</width>
      <widthRatio>0.35195530726257</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel630/panel636">
      <cursor>pointer</cursor>
      <dockX>right</dockX>
      <dockY>top</dockY>
      <height>36</height>
      <heightRatio>0.172248803827751</heightRatio>
      <layerVisible>false</layerVisible>
      <left>304</left>
      <leftRatio>0.849162011173184</leftRatio>
      <onClick>sender.parentNode.parentNode.close();</onClick>
      <onCreate><![CDATA[ee.setText(sender,
    "<svg viewBox=\"0 0 24 24\" style=\"font-size: 13px;height:1.5em;width:1.5em;margin:5px 8px 8px 5px;fill:rgba(80,80,80,1);vertical-align:middle;\">" + g5.icon.close + "</svg>"
);
sender.style.borderRadius = "50%";
ee.setOnMouseEnter(sender, function(sender,event) {
    sender.style.backgroundColor = "#dfeffa";
});    
ee.setOnMouseLeave(sender, function(sender,event) {
    sender.style.backgroundColor = "";
});
]]></onCreate>
      <outerRight>18</outerRight>
      <outerTop>15</outerTop>
      <sizeRatio>1</sizeRatio>
      <top>15</top>
      <topRatio>0.0717703349282297</topRatio>
      <width>36</width>
      <widthRatio>0.100558659217877</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel630/panel637">
      <backgroundColor>F5F8FA</backgroundColor>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>fill</dockX>
      <ee_LocalName>c_p1</ee_LocalName>
      <height>66</height>
      <heightRatio>0.315789473684211</heightRatio>
      <layerVisible>false</layerVisible>
      <left>10</left>
      <leftRatio>0.0279329608938547</leftRatio>
      <onCreate>sender.style.borderRadius = "4px";
</onCreate>
      <outerLeft>10</outerLeft>
      <outerRight>10</outerRight>
      <outerTop>10</outerTop>
      <sizeRatio>0.195266272189349</sizeRatio>
      <top>75</top>
      <topRatio>0.358851674641148</topRatio>
      <width>338</width>
      <widthRatio>0.94413407821229</widthRatio>
    </control>
    <control type="Edit" pathname="/divRoot/panel112/panel630/panel637/edit1">
      <backgroundSkin>empty</backgroundSkin>
      <dockX>fill</dockX>
      <ee_LocalName>c_edit</ee_LocalName>
      <fontColor>808080</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <hAlign>left</hAlign>
      <height>41</height>
      <heightRatio>0.621212121212121</heightRatio>
      <inputFont>微软雅黑</inputFont>
      <inputFontSize>14</inputFontSize>
      <layerVisible>false</layerVisible>
      <left>15</left>
      <leftRatio>0.0443786982248521</leftRatio>
      <outerLeft>15</outerLeft>
      <outerRight>15</outerRight>
      <sizeRatio>0.133116883116883</sizeRatio>
      <text>输入提示位置</text>
      <top>25</top>
      <topRatio>0.378787878787879</topRatio>
      <width>308</width>
      <widthRatio>0.911242603550296</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel630/panel637/panel641">
      <backgroundColor>657786</backgroundColor>
      <backgroundImgMode>fill</backgroundImgMode>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>fill</dockX>
      <dockY>bottom</dockY>
      <fontColor>808080</fontColor>
      <fontFamily>黑体</fontFamily>
      <fontSizeAuto>25</fontSizeAuto>
      <hAlign>left</hAlign>
      <height>2</height>
      <heightRatio>0.0303030303030303</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <sizeRatio>0.00591715976331361</sizeRatio>
      <top>64</top>
      <topRatio>0.96969696969697</topRatio>
      <width>338</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel112/panel630/panel637/panel631">
      <dockX>fill</dockX>
      <ee_LocalName>c_text</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>657786</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <hAlign>left</hAlign>
      <height>31</height>
      <heightRatio>0.46969696969697</heightRatio>
      <layerVisible>false</layerVisible>
      <left>18</left>
      <leftRatio>0.0532544378698225</leftRatio>
      <outerLeft>18</outerLeft>
      <outerRight>15</outerRight>
      <sizeRatio>0.101639344262295</sizeRatio>
      <text>输入字符串说明</text>
      <top>0</top>
      <width>305</width>
      <widthRatio>0.902366863905325</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel577">
      <__U_editFontColor type="string">000000</__U_editFontColor>
      <__U_editFontFamily type="string">'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</__U_editFontFamily>
      <__U_editFontSize type="string">16pt</__U_editFontSize>
      <__U_editMaxY type="string">300px</__U_editMaxY>
      <__U_onCurPosChange-sender-oldPos-newPos type="string">sender.processUserName();</__U_onCurPosChange-sender-oldPos-newPos>
      <__U_onFocusChange-sender-isFocus type="string" />
      <__U_onHeightChange-sender-oldH-newH type="string" />
      <__U_onInputChange-sender-key-oldText-newText-oldHtml-newHtml type="string"><![CDATA[var text = ee.getEditText(sender.c_edit);

if (newText.split("\n").length-1>20) {
    return false;
}

var cp = sender.getCurPosAbs();
var sTemp = sender.convertHtml(newText);
var ptn = /@([a-zA-Z0-9_\-]{2,20})/gim;
sTemp = sTemp.replace(ptn, "<span style='color:#1da1f2'>@$1</span>");
sender.c_edit.innerHTML = sTemp;
sender.setCurPosAbs(cp);

sender.processUserName();


]]></__U_onInputChange-sender-key-oldText-newText-oldHtml-newHtml>
      <backgroundColor>FFFFFF</backgroundColor>
      <bgColorEnabled>true</bgColorEnabled>
      <ee_LocalName>c_edit</ee_LocalName>
      <height>120</height>
      <heightRatio>0.150753768844221</heightRatio>
      <layerVisible>false</layerVisible>
      <left>263</left>
      <leftRatio>0.241950321987121</leftRatio>
      <note>富文本编辑框</note>
      <onCreate><![CDATA[//public
sender.style.boxSizing="border-box";
sender.style.borderWidth = "1px";
sender.style.borderColor = "#a0a0a0";
sender.style.borderStyle = "solid";
sender.style.borderRadius = "5px";
sender.style.boxShadow = "1px 1px 2px #b0b0b0";

sender.currentText = "";
sender.currentHtml = "";
sender.currentCurPos = 0;
sender.getEditText = function() {
    return this.getPlanText().replace(/\xA0/g, " ");
}
sender.setEditText = function(text, inOnChange) {
    this.c_edit.innerHTML = this.convertHtml(text);
    if (!inOnChange) this.f_onChange();
}

sender.setEditHtm = function(htmlText, inOnChange) {
    this.c_edit.innerHTML = text;
    if (!inOnChange) this.f_onChange();
}

sender.convertHtml = function(text) {
    var textS = text.replace(/ /g, "\xA0").split("\n");
    text = "";
    for (var i=0; i<textS.length; i++) {
        if (textS[i].length<=0) {
            text += "<div><br\></div>";
        } else {
            text += "<div>" + textS[i] + "</div>";
        }
    }
    return text;
}


//protected
sender.c_label = sender.eeChildren[0];
sender.c_edit = sender.eeChildren[1];

//private
var e = sender.c_edit;
e.contentEditable = true;
e.style.border = "none";
e.style.outline = "none";
e.style.height = "";
e.style.minHeight = (eb.getDivRectSetting(sender).h - e.outerTop - e.outerBottom) + "px";
e.style.maxHeight = sender.editMaxY;
e.style.overflowY = "auto";
e.style.fontFamily = sender.editFontFamily;
e.style.fontSize = sender.editFontSize;
e.style.color = "#" + sender.editFontColor;
e.style.wordBreak = "break-all";
e.style.wordWrap = "break-word";
e.style.whiteSpace = "normal";
e.innerHTML = "";
eb.setDivRect(e, e.outerLeft, e.outerTop, eb.getDivRectSetting(sender).w - e.outerLeft - e.outerRight, null);
sender.v_lastH = eb.getDivRectSetting(sender).h;

sender.refreshH = function() {
    if (this.v_lastH!=eb.getDivRect(sender.c_edit).h+e.outerTop+e.outerBottom) {
        var lastH = this.v_lastH;
        this.v_lastH = eb.getDivRect(sender.c_edit).h+e.outerTop+e.outerBottom;
        ee.setRect(this,null,null,null,this.v_lastH);
        sender.onHeightChange(this, lastH, this.v_lastH);
    }
}

sender.onSizeChange = function(sender, rectOld, rectNew) {
    eb.setDivRect(sender.c_edit, sender.c_edit.outerLeft, sender.c_edit.outerTop,
        rectNew.w - sender.c_edit.outerLeft - sender.c_edit.outerRight, null);
}

sender.f_onChange = function() {
    if (sender.v_isIme) {
        ee.setVisible(this.c_label, this.getPlanText().length<=0); 
        return;
    }
    this.refreshH();
    var oldText = this.currentText;
    var oldHtml = this.currentHtml;
    this.currentText = this.getPlanText().replace(/\xA0/g, " ");
    this.currentHtml = this.c_edit.innerHTML;
    ee.setVisible(this.c_label, (!this.c_edit.innerText) || (this.c_edit.innerText.trim().length<=0)); 
    if (this.onInputChange(this, this.lastKey, oldText, this.currentText, oldHtml, this.currentHtml)==false) {
        this.setEditText(oldHtml, true);
        this.currentHtml = oldHtml;
        this.currentText = oldText;
        this.setCurPosAbs(this.currentCurPos);
    }
}

sender.CurPos = function() {
    this.elmIndex = new Array();
    this.curPos = 0;
}
   
sender.getCurPos = function() {
    var curPos = new this.CurPos();
    var sel, range;
    if (window.getSelection) {
        sel = window.getSelection();
        if (sel.rangeCount) {
            range = sel.getRangeAt(0);
            var node = range.commonAncestorContainer;
            while (node.parentNode) {
                var i;
                for (i=0; i<node.parentNode.childNodes.length; i++) {
                    if (node.parentNode.childNodes[i] == node) {
                        curPos.elmIndex.push(i);
                        break;
                    }
                }
                node = node.parentNode;
                if (node == this.c_edit) break;
            }
            curPos.curPos = range.endOffset;
        }
    } else if (document.selection &amp;&amp; document.selection.createRange) {
        console.log("not perform");
        range = document.selection.createRange();
        if (range.parentElement() == this.c_edit) {
            var tempEl = document.createElement("span");
            this.c_edit.insertBefore(tempEl, this.c_edit.firstChild);
            var tempRange = range.duplicate();
            tempRange.moveToElementText(tempEl);
            tempRange.setEndPoint("EndToEnd", range);
            caretPos = tempRange.text.length;
        }
    }
    return curPos;
}

sender.setCurPos = function(curPos) {
    var range = document.createRange()
    var sel = window.getSelection()
    var node = this.c_edit;
    for (var i=curPos.elmIndex.length-1; i>=0; i--) {
        if (!node.childNodes[curPos.elmIndex[i]]) break;
        node = node.childNodes[curPos.elmIndex[i]];
    }
    range.setStart(node, curPos.curPos);
    range.collapse(true)
    sel.removeAllRanges()
    sel.addRange(range)
}

sender.getCurPosAbs = function() {
    var curPos = this.getCurPos();
    var nodeSel = this.c_edit;
    for (var i=curPos.elmIndex.length-1; i>=0; i--) {
        if (!nodeSel.childNodes[curPos.elmIndex[i]]) break;
        nodeSel = nodeSel.childNodes[curPos.elmIndex[i]];
    }
    var pos = 0;
    var addPos = function(node) {
        for (var i=0; i<node.childNodes.length; i++) {
            if (node.childNodes[i] == nodeSel) {
                if (nodeSel.nodeName.toUpperCase() =="DIV") pos++;
                pos += curPos.curPos;
                return true;
            }
            if (node.childNodes[i].nodeName.toUpperCase() == "DIV") {
                if (i>0) pos++;
                if (addPos(node.childNodes[i])) return true;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "BR") {
            } else if (node.childNodes[i].nodeName.toUpperCase() == "SPAN") {
                if (addPos(node.childNodes[i])) return true;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "#TEXT") {
                pos += node.childNodes[i].textContent.length;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "A") {
                pos += node.childNodes[i].textContent.length;
            }
        }
        return false;
    }
    addPos(this.c_edit);
    return pos;
}

sender.setCurPosAbs = function(absPos) {
    var pos = 0;
    var setNode, setPos;
    var addPos = function(node) {
        for (var i=0; i<node.childNodes.length; i++) {
            if (node.childNodes[i].nodeName.toUpperCase() == "DIV") {
                if (i>0) pos++;
                if (pos>=absPos) {
                    if (node.childNodes[i].childNodes.length>0) {
                        setNode = node.childNodes[i].childNodes[0];
                    } else {
                        setNode = node.childNodes[i];
                    }
                    setPos = 0;
                    return true;
                }
                if (addPos(node.childNodes[i])) return true;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "BR") {
            } else if (node.childNodes[i].nodeName.toUpperCase() == "SPAN") {
                if (addPos(node.childNodes[i])) return true;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "#TEXT") {
                if (pos+node.childNodes[i].textContent.length>=absPos) {
                    setNode = node.childNodes[i];
                    setPos = absPos - pos;
                    return true;
                }
                pos += node.childNodes[i].textContent.length;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "A") {
                if (pos+node.childNodes[i].textContent.length>=absPos) {
                    setNode = node.childNodes[i];
                    setPos = absPos - pos;
                    return true;
                }
                pos += node.childNodes[i].textContent.length;
            }
        }
        return false;
    }
    addPos(this.c_edit);
    var range = document.createRange()
    var sel = window.getSelection()
    range.setStart(setNode, setPos);
    range.collapse(true)
    sel.removeAllRanges()
    sel.addRange(range)
}

sender.getPlanText = function() {
    var text = "";
    var addPos = function(node) {
        for (var i=0; i<node.childNodes.length; i++) {
            if (node.childNodes[i].nodeName.toUpperCase() == "DIV") {
                if (i>0) text += "\n";
                addPos(node.childNodes[i]);
            } else if (node.childNodes[i].nodeName.toUpperCase() == "BR") {
            } else if (node.childNodes[i].nodeName.toUpperCase() == "SPAN") {
                text += node.childNodes[i].textContent;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "#TEXT") {
                text += node.childNodes[i].textContent;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "A") {
                text += node.childNodes[i].textContent;
            } else {
                console.log("undefined node name: " + node.childNodes[i].nodeName);
            }
        }
        return false;
    }
    addPos(this.c_edit);
    return text;
}

e.onkeydown = function(event) {
    sender.lastCurPos = sender.getCurPos();
    sender.lastKey = {};
    sender.lastKey.key = event.key;
    sender.lastKey.keyCode = event.keyCode;
    sender.lastKey.shiftKey = event.shiftKey;
    sender.lastKey.ctrlKey = event.ctrlKey;
    sender.lastKey.altKey = event.altKey;
}

e.oninput = function(event) {
    sender.f_onChange();
}

e.onpaste = function() {
    //sender.f_onChange();
}

e.onfocus = function() {
    document.addEventListener("selectionchange", sender.f_onSelectionChange, false);
}

e.onblur = function() {
    document.removeEventListener("selectionchange", sender.f_onSelectionChange, false);
}

sender.f_onSelectionChange = function(event) {
    var oldPos = sender.currentCurPos;
    sender.currentCurPos = sender.getCurPosAbs();
    if (oldPos!=sender.currentCurPos) {
        if (sender.onCurPosChange) {
            sender.onCurPosChange(sender,oldPos,sender.currentCurPos);
        }
    }
}

sender.c_edit.addEventListener("compositionstart", function(event) {
    sender.v_isIme = true;
});

sender.c_edit.addEventListener("compositionupdate", function(event) {
    //console.log("ime update");
});

sender.c_edit.addEventListener("compositionend", function(event) {
    sender.v_isIme = false;
    sender.f_onChange();
});

sender.c_edit.addEventListener("touchstart", function(event) {
    window.event? window.event.cancelBubble = true : event.stopPropagation();
    return;
});

//user
sender.getUsername = function() {
    var newText = this.getEditText();
    var cp = this.getCurPosAbs();
    var i;
    for (i=cp-1; i>=0; i--) {
        if (newText.charAt(i)=="@") break;
    }
    if (i<0) return "";
    var pos = i;
    var userName = "";
    for (i=pos+1; i<=newText.length; i++) {
        var ch = newText.charAt(i);
        if ((ch>="a" &amp;&amp; ch<="z") ||
            (ch>="A" &amp;&amp; ch<="Z") ||
            (ch>="0" &amp;&amp; ch<="9") ||
            (ch=="_") || (ch=="-")) {
            userName += ch;
        } else break;
    }
    if (userName.length<2) return "";
    if (i<=cp-1) return "";
    userName = userName.substr(0,20);
    return userName;
}

sender.setUsername = function(username) {
    var cp = sender.getCurPosAbs();
    var newText = sender.getEditText();
    var i;
    for (i=cp-1; i>=0; i--) {
        if (newText.charAt(i)=="@") break;
    }
    if (i<0) return;
    var pos = i+1;
    for (i=pos; i<=newText.length; i++) {
        var ch = newText.charAt(i);
        if ((ch>="a" &amp;&amp; ch<="z") ||
            (ch>="A" &amp;&amp; ch<="Z") ||
            (ch>="0" &amp;&amp; ch<="9") ||
            (ch=="_") || (ch=="-")) {
        } else break;
    }
    if (i-pos<2) return;
    if (i<=cp-1) return;
    if (i-pos>20) i=20-pos;
    var s = newText.substr(0, pos);
    s += username;
    if (i>=newText.length) {
        s += " ";
    } else if (newText.charAt(i)=="\n") {
        s += " " + newText.substr(i);
    } else {
        s += newText.substr(i);
    }
    
    var sTemp = sender.convertHtml(s);
    var ptn = /@([a-zA-Z0-9_\-]{2,20})/gim;
    sTemp = sTemp.replace(ptn, "<span style='color:#1da1f2'>@$1</span>")
    sender.c_edit.innerHTML = sTemp;
    sender.setCurPosAbs(i+1);
}

sender.processUserName = function() {
    var userName = this.getUsername();
    return;
    if (userName.length>0) {
        //g5.p2.p34.show(sender, userName, function(username) {
        //    sender.setUsername(username);
        //    sender.c_edit.blur();
        //});
    } else g5.p2.p34.close();
}
]]></onCreate>
      <sizeRatio>0.43010752688172</sizeRatio>
      <top>33</top>
      <topRatio>0.0414572864321608</topRatio>
      <userProperty>//#P:editFontFamily|多行文字录入V2|'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif|string||用户输入文字的字体样式
//#P:editFontColor|多行文字录入V2|404040|color||用户输入文字的字体颜色
//#P:editFontSize|多行文字录入V2|12pt|string||用户输入文字的大小
//#P:editMaxY|多行文字录入V2|300px|string||编辑框最大高度
//#P:onHeightChange(sender,oldH,newH)|多行文字录入V2||jsMix||由于用户的输入导致编辑框产生的高度变化。sender:触发事件的控件，oldH:旧的高度，newH:新的高度
//#P:onInputChange(sender,key,oldText,newText,oldHtml,newHtml)|多行文字录入V2||jsMix||由于用户的输入导致内容改变，返回false表示取消本次修改。sender:触发事件的控件，key:用户按键，oldText:旧的内容，newText:新的内容，oldHtml:旧内容html形式，newHtml:新内容html形式
//#P:onFocusChange(sender,isFocus)|多行文字录入V2||jsMix||焦点发生变化。sender:触发事件的控件，isFocus:是否触发了焦点
//#P:onCurPosChange(sender,oldPos,newPos)|多行文字录入V2||jsMix||光标位置发生变化。sender:触发事件的控件，oldPos:原来的光标位置；newPos:新的光标位置；



</userProperty>
      <width>279</width>
      <widthRatio>0.256669733210672</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel577/panel603">
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <fontColor>9197A3</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>16</fontSize>
      <hAlign>left</hAlign>
      <height>120</height>
      <heightRatio>1</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <note>c_label</note>
      <sizeRatio>0.43010752688172</sizeRatio>
      <text>有什么新鲜事？</text>
      <top>0</top>
      <vAlign>top</vAlign>
      <width>279</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel577/panel604">
      <backgroundColor>FFFFFF</backgroundColor>
      <fontColor>404040</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <hAlign>left</hAlign>
      <height>26</height>
      <heightRatio>0.216666666666667</heightRatio>
      <layerVisible>false</layerVisible>
      <left>16</left>
      <leftRatio>0.0573476702508961</leftRatio>
      <note>c_edit</note>
      <outerBottom>2</outerBottom>
      <outerLeft>5</outerLeft>
      <outerRight>2</outerRight>
      <outerTop>2</outerTop>
      <sizeRatio>0.257425742574257</sizeRatio>
      <top>15</top>
      <topRatio>0.125</topRatio>
      <v_color1>FFC0C0</v_color1>
      <v_Str>as223</v_Str>
      <vAlign>top</vAlign>
      <width>101</width>
      <widthRatio>0.362007168458781</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel2">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>25</left>
      <leftRatio>0.0229990800367985</leftRatio>
      <onClick>ee.getControl("divRoot").popBlack.a7.show(
    "提示", "修改您的用户信息完成",
    [new g5.BStyle("#1da1f2","#1a91da","#1781c2","确定","确定","确定","#ffffff","#ffffff","#ffffff","")],
    //[new g5.BStyle("","#e8f5fe","#d2ecfc","确定","确定","确定","#1da1f2","#1da1f2","#1da1f2","#1da1f2")],
    function() {}
);</onClick>
      <onCreate><![CDATA[var text = ee.getText(sender);
g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc",text,text+">热点",text+">按下","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";







]]></onCreate>
      <sizeRatio>0.146666666666667</sizeRatio>
      <text>通用提示窗口</text>
      <top>33</top>
      <topRatio>0.0414572864321608</topRatio>
      <width>225</width>
      <widthRatio>0.206991720331187</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel1">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>25</left>
      <leftRatio>0.0229990800367985</leftRatio>
      <onClick>ee.getControl("divRoot").popBlack.a6.show(
    "删除确认",
    "在没有保存之前，本操作将不会生效，确认删除本记录吗？",
    [new g5.BStyle("#e6ecf0","#cfd4d8","#b8bdc0","取消","取消","取消","#14171a","#14171a","#14171a","")],
    [new g5.BStyle("#e0245e","#ca2055","#b31d4b","删除","确认删除","删除","#ffffff","#ffffff","#ffffff","")],
    function() {
    }
);            </onClick>
      <onCreate>g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc","","","","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";







</onCreate>
      <sizeRatio>0.203703703703704</sizeRatio>
      <text>通用确认窗口</text>
      <top>84</top>
      <topRatio>0.105527638190955</topRatio>
      <width>162</width>
      <widthRatio>0.149034038638454</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel3">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>25</left>
      <leftRatio>0.0229990800367985</leftRatio>
      <onClick><![CDATA[ee.getControl("divRoot").popBlack.a10.show(
    "输入", "付款类型：", "请在这里输入付款类型，长度2-6", "",
    [new g5.BStyle("","#e8f5fe","#d2ecfc","取消","取消","取消","#1da1f2","#1da1f2","#1da1f2","#1da1f2")],
    [new g5.BStyle("#1da1f2","#1a91da","#1781c2","确定","确定","确定","#ffffff","#ffffff","#ffffff","")],
    function(text) {
        if ((text.length>6) || (text.length<2)) {
            alert("输入错误,付款类型的长度应该在2-6个汉字或英文字符之间");
            return;
        }
    },
    function() {
    }
);]]></onClick>
      <onCreate>g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc","","","","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";



</onCreate>
      <sizeRatio>0.203703703703704</sizeRatio>
      <text>通用输入窗口</text>
      <top>136</top>
      <topRatio>0.170854271356784</topRatio>
      <width>162</width>
      <widthRatio>0.149034038638454</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel104">
      <cursor>pointer</cursor>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>48</left>
      <leftRatio>0.0441582336706532</leftRatio>
      <onClick>g5.writeLog("==============click===============");
if (!sender.v_count) sender.v_count=0;
sender.v_count++;
g5.writeLog(sender.v_count, true);
window.event? window.event.cancelBubble = true : event.stopPropagation();</onClick>
      <onCreate><![CDATA[sender.innerHTML = "<svg viewBox=\"0 0 26 26\" style=\"font-size: 13px;height:2.0em;width:2.0em;margin:5px 0px 0px 4px;color:rgb(29,161,242);fill: currentcolor;vertical-align:middle;\">"+g5.icon.back+"</svg>";
sender.style.borderRadius = "50%";
ee.setOnMouseEnter(sender, function(sender,event) {
    g5.writeLog("mouse enter..");    
    sender.style.backgroundColor = "#dfeffa";
});    
ee.setOnMouseLeave(sender, function(sender,event) {
    g5.writeLog("mouse leave");    
    sender.style.backgroundColor = "";
});
sender.eeMouseDown = function(sender, event, x, y) {
    g5.writeLog("touch start");    
    sender.style.backgroundColor = "#cfdfea";
}
sender.eeMouseUp = function(sender, event, x, y) {
    g5.writeLog("touch end");    
    if ("ontouchstart" in window) {
        sender.style.backgroundColor = "";
        g5.writeLog("touch end confirm");    
    } else {
        sender.style.backgroundColor = "#dfeffa";
    }
}
if ("ontouchstart" in window) {
    eb.addEvent(sender, "touchcancel", function (event) {
        sender.style.backgroundColor = "";
        g5.writeLog("touch cancel");
    }, false);
}

eb.initMouseEvent(sender);]]></onCreate>
      <sizeRatio>1</sizeRatio>
      <text><![CDATA[<]]></text>
      <top>294</top>
      <topRatio>0.369346733668342</topRatio>
      <width>33</width>
      <widthRatio>0.0303587856485741</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel288">
      <backgroundSkin>button1003</backgroundSkin>
      <ee_LocalName>c_log</ee_LocalName>
      <fontColor>FFFFFF</fontColor>
      <hAlign>left</hAlign>
      <height>388</height>
      <heightRatio>0.487437185929648</heightRatio>
      <layerVisible>false</layerVisible>
      <left>42</left>
      <leftRatio>0.0386384544618215</leftRatio>
      <onCreate>sender.style.position="fixed";</onCreate>
      <sizeRatio>2.03141361256545</sizeRatio>
      <top>340</top>
      <topRatio>0.42713567839196</topRatio>
      <vAlign>bottom</vAlign>
      <width>191</width>
      <widthRatio>0.175712971481141</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel288/panel37">
      <backgroundColor>FFFFFF</backgroundColor>
      <dockX>fill</dockX>
      <dockY>bottom</dockY>
      <fontColor>FFFFFF</fontColor>
      <hAlign>left</hAlign>
      <height>111</height>
      <heightRatio>0.286082474226804</heightRatio>
      <layerVisible>false</layerVisible>
      <left>5</left>
      <leftRatio>0.0261780104712042</leftRatio>
      <onClick>sender.setText("时间；浪费时间；理发师阿道夫；路上看见；浪费空间撒旦飞洒；了烦死拉进来是否；拉萨；附件；老师");</onClick>
      <onCreate>sender.setText = function(text) {
    ee.setRect(this,null,null,null,1);
    ee.setText(this, text);
    var h = eb.getDivRect(this.label).h;
    ee.setRect(this,null,null,null,h);
}
</onCreate>
      <outerBottom>5</outerBottom>
      <outerLeft>5</outerLeft>
      <outerRight>5</outerRight>
      <sizeRatio>0.613259668508287</sizeRatio>
      <text>======Log======</text>
      <top>272</top>
      <topRatio>0.701030927835052</topRatio>
      <vAlign>top</vAlign>
      <width>181</width>
      <widthRatio>0.947643979057592</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel288/panel285">
      <backgroundColor>9E9E8C</backgroundColor>
      <bgColorEnabled>true</bgColorEnabled>
      <cursor>move</cursor>
      <height>21</height>
      <heightRatio>0.0541237113402062</heightRatio>
      <layerVisible>false</layerVisible>
      <left>99</left>
      <leftRatio>0.518324607329843</leftRatio>
      <onCreate><![CDATA[sender.v_down = false;
if (sender.style.backgroundColor == "") {
    sender.style.backgroundColor = "rgba(255,255,255,0.01)";
}
sender.onpointerdown = function(event) {
    var sender = event.target;
    sender.v_down = true;
    sender.v_x = event.clientX;
    sender.v_y = event.clientY;
    sender.setPointerCapture(event.pointerId);
}
sender.onpointerup = function(event) {
    var sender = event.target;
    sender.v_down = false;
    sender.releasePointerCapture(event.pointerId);
}
sender.onpointermove = function(event) {
    var sender = event.target;
    if (sender.v_down) {
        var dx = event.clientX - sender.v_x;
        var dy = event.clientY - sender.v_y;
        var rect = eb.getDivRect(sender.parentNode);
        var rectP = eb.getDivRect(sender.parentNode.parentNode);
        if (rect.x+dx<0) dx = null;
        if (rect.x+dx+rect.w>=rectP.w) dx = null;
        if (dx!=null) {
            sender.v_x = event.clientX;
            dx = rect.x+dx;
        }
        if (rect.y+dy<0) dy = null;
        if (rect.y+dy+rect.h>=rectP.h) dy = null;
        if (dy!=null) {
            sender.v_y = event.clientY;
            dy = rect.y+dy;
        }
        ee.setRect(sender.parentNode, dx, dy, null, null);
    }
}


]]></onCreate>
      <sizeRatio>0.228260869565217</sizeRatio>
      <top>0</top>
      <width>92</width>
      <widthRatio>0.481675392670157</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel288/panel113">
      <backgroundSkin>button3a</backgroundSkin>
      <dockX>fill</dockX>
      <hAlign>left</hAlign>
      <height>70</height>
      <heightRatio>0.180412371134021</heightRatio>
      <layerVisible>false</layerVisible>
      <left>7</left>
      <leftRatio>0.0366492146596859</leftRatio>
      <outerLeft>7</outerLeft>
      <outerRight>4</outerRight>
      <sizeRatio>0.388888888888889</sizeRatio>
      <text>status</text>
      <top>28</top>
      <topRatio>0.0721649484536082</topRatio>
      <width>180</width>
      <widthRatio>0.942408376963351</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel4">
      <height>342</height>
      <heightRatio>0.42964824120603</heightRatio>
      <left>317</left>
      <leftRatio>0.291628334866605</leftRatio>
      <onClick>var ctx = sender.c_canvas.getContext("2d");
ctx.fillStyle = "rgb(200, 0, 0)";
ctx.fillRect(10, 10, 50, 50);

ctx.fillStyle = "rgba(0, 0, 200, 0.5)";
ctx.fillRect(30, 30, 50, 50);
</onClick>
      <onCreate>var c;
c = document.createElement("canvas");
c.style.position = "absolute";
c.style.width = "100%";
c.style.height = "100%";
sender.appendChild(c);
sender.c_canvas = c;

</onCreate>
      <sizeRatio>0.870229007633588</sizeRatio>
      <top>162</top>
      <topRatio>0.203517587939698</topRatio>
      <width>393</width>
      <widthRatio>0.361545538178473</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel7">
      <__U_blockSize type="int">1024</__U_blockSize>
      <__U_multiSelect type="enum">true</__U_multiSelect>
      <__U_onComplete-sender-worker type="jsMix" />
      <__U_onNotSupportUpload-sender type="jsMix" />
      <__U_onStatusChange-sender type="jsMix"><![CDATA[/*
var s = "";
for (var i = 0; i < sender.workers.length; i++) {
    var w = sender.workers[i];
    w.percent = parseInt(w.bytesSent/w.fileBlob.size*1000)/10 + "%";
    s += 
        w.status + "," +
        w.bytesSent + "," +
        w.percent + "," +
        w.id + "," +
        w.url + "<br/>";
}

ee.setText(ee.getControl("panel8"), s);
*/
ee.getControl("panel5").refresh(sender.workers);]]></__U_onStatusChange-sender>
      <backgroundColor>008080</backgroundColor>
      <cursor>pointer</cursor>
      <height>60</height>
      <heightRatio>0.0753768844221105</heightRatio>
      <layerVisible>false</layerVisible>
      <left>238</left>
      <leftRatio>0.218951241950322</leftRatio>
      <onClick>if (event.target.tagName.toUpperCase() == "INPUT") return;
sender.c_file.blur();
sender.c_file.click();
</onClick>
      <onCreate><![CDATA[sender.style.borderRadius = "20%";

ee.setOnMouseEnter(sender, function(sender,event) {
    sender.style.backgroundColor = "#dfeffa";
});    
ee.setOnMouseLeave(sender, function(sender,event) {
    sender.style.backgroundColor = "";
});
sender.eeMouseDown = function(sender,event,x,y) {
    sender.style.backgroundColor = "#daeaf5";
}
sender.eeMouseUp = function(sender,event,x,y) {
    if ("ontouchstart" in window) {
        sender.style.backgroundColor = "";
    } else {
        sender.style.backgroundColor = "#dfeffa";
    }
}
sender.eeOnClickCancel = function(sender,event) {
    sender.style.backgroundColor = "";
}
eb.initMouseEvent(sender);




//implementation
sender.workers = new Array();
sender.TWorker = function() {
    this.id = "";
    this.fileBlob = "";
    this.url = "";
    this.status = "new";
    this.bytesSent = 0;
    this.currentBlockSize = 0;
}
sender.v_currentIndex = 0;
sender.v_timer = null;
sender.v_status = "idle";
sender.f_start = function() {
    this.f_stop();
    this.v_timer =  setInterval(this.timeFragment, 20);
}
sender.f_stop = function() {
    if (!this.v_timer) return;
    clearInterval(this.v_timer);
    this.v_timer = null;
}
sender.f_setStatus = function(status) {
    if (sender.v_status == status) return;
    sender.v_status = status;
    if (sender.onStatusChange) sender.onStatusChange(sender);
}
sender.f_complete = function(worker) {
    for (var i=0; i<sender.workers.length; i++) {
        if (sender.workers[i] != worker) continue;
        sender.workers.splice(i,1);
        if (sender.onStatusChange) sender.onStatusChange(sender);        
        if (sender.onComplete) {
            sender.onComplete(sender, worker);
        }
        break;
    }
}

sender.timeFragment = function() {
    if (sender.workers.length<=0) {
        sender.f_stop();
        return;
    }
    if (sender.v_status != "idle") return;
    sender.v_currentIndex = (sender.v_currentIndex + 1) % sender.workers.length;
    var w = sender.workers[sender.v_currentIndex];
    if (w.id.length<=0) {
        w.status = "start";
        sender.f_setStatus("start");
        sender.taskSet.status = "s";
        sender.taskSet.fileSize = w.fileBlob.size;
        sender.taskSet.fileName = w.fileBlob.name;
        sender.taskSet();
    } else {
        w.currentBlockSize = Math.min(w.fileBlob.size - w.bytesSent, sender.blockSize*1024);
        if (w.currentBlockSize<=0) {
            sender.f_complete(w);
            return;
        }
        var reader = new FileReader();
        reader.onload = function (event) {
            sender.taskSet.status = "p";
            sender.taskSet.id = w.id;
            sender.taskSet.data = event.target.result;
            sender.taskSet();
        }
        w.status = "send";
        sender.f_setStatus("send");
        reader.readAsDataURL(w.fileBlob.slice(w.bytesSent, w.bytesSent + w.currentBlockSize));
    }
}

var c = document.createElement("input");
c.setAttribute("type", "file");
c.setAttribute("accept", "*/*");
c.setAttribute("style", "position:absolute;width:1px;height:1px;left:-200px;top:-200px;");
if (sender.multiSelect == "true") {
    c.setAttribute("multiple", "multiple");
} else {
    c.removeAttribute("multiple");
}
c.value = null;
sender.insertBefore(c, sender.childNodes[0]);
sender.c_file = c;

c.addEventListener("change", function() {
    if (window.File &amp;&amp; window.FileReader &amp;&amp; window.FileList &amp;&amp; window.Blob) {
        for (var i = 0; i < sender.c_file.files.length; i++) {
            var w = new sender.TWorker();
            w.fileBlob = sender.c_file.files[i];
            sender.workers.push(w);
            sender.f_start();
        }
        sender.c_file.value = null;
    } else {
        if (sender.onNotSupportUpload) sender.onNotSupportUpload(sender);
    }
});

]]></onCreate>
      <sizeRatio>0.923076923076923</sizeRatio>
      <taskSet><![CDATA[//status(s),fileSize,fileName >> id,url
//status(p),id,data
eio.appendString8(sender.taskSet.status);
if (sender.taskSet.status == "s") {
    eio.appendString8(sender.taskSet.fileSize + "");
    eio.appendString8(sender.taskSet.fileName);
} else if (sender.taskSet.status == "p") {
    eio.appendString8(sender.taskSet.id);
    eio.appendString32(sender.taskSet.data);
}
]]></taskSet>
      <taskSetReturn>var w = sender.workers[sender.v_currentIndex];
if (sender.taskSet.status == "s") {
    w.id = eio.readString8();
    w.url = eio.readString8();
    w.status = "idle";
} else if (sender.taskSet.status == "p") {
    w.bytesSent += w.currentBlockSize;
    w.status = "idle";
}

sender.f_setStatus("idle");

</taskSetReturn>
      <taskSetServer><![CDATA[var status = eio.readString8();
if (status == "s") {
    var fileSize = parseInt(eio.readString8());
    var fileName = eio.readString8();
    var newFileName = "c:\\www\\incoming\\" + fileName;
    var id = es.getGuid();
    es.globalMemory.set(id + "fileName", newFileName);
    es.globalMemory.set(id + "fileSize", fileSize + "");
    eio.appendString8(id);
    eio.appendString8(newFileName);
    es.fileDelete(newFileName);
} else if (status == "p") {
    var id = eio.readString8();
    var newFileName = es.globalMemory.get(id + "fileName");
    var fileSize = parseInt(es.globalMemory.get(id + "fileSize"));
    var buff = eio.readString32();
    var pos = buff.indexOf("base64,",0);
    if (pos<0) return;
    pos += "base64,".length;
    buff = buff.substr(pos, buff.length - pos);
    var size = es.saveBase64AsFileEx(newFileName, buff, true);
    if (size >= fileSize) {
        es.globalMemory.set(id + "fileName", "");
        es.globalMemory.set(id + "fileSize", "");
    }
}
return;



var sql,sqlResult;  
var getFileName = function(sn, sep) {
    sn = parseInt(sn);
    var f1 = (sn &amp; 0xFF000000) >> 24;
    var f2 = (sn &amp; 0x00fff000) >> 12;
    f1 = f1 ^ 0x59AE;
    f2 = f2 ^ 0xA93;
    sn = ((sn >> 7) | ((sn &amp; 0x7f)<<24)) ^ 0x5BC3A96A;
    return "usrb" + sep + "usr" + f1 + sep + f2 + sep + "p" + sn + ".jpg";
}

//onUploadStart(): newFilePathName,newFileName
var newFilePathName, newFileName;
sql = "select next value for dbo.SEQImageSn as Sn";
sqlResult = db.executeQuery("DB", sql);
if (sqlResult == null) {
    return;
}
db.read(sqlResult);
var sn = db.getInt32(sqlResult, "Sn");
newFileName = getFileName(sn, "/");
newFilePathName = "c:\\www\\incoming\\"+ getFileName(sn, "\\");
es.logCommon("upload test 1 file:" + newFilePathName);

//implementation
var buff = eio.readString32();
var pos = buff.indexOf("base64,",0);
if (pos<0) return;
pos += "base64,".length;
buff = buff.substr(pos, buff.length - pos);
es.saveBase64AsFile(newFilePathName, buff);
es.logCommon("upload test file:" + newFilePathName);


eio.appendString8("T");
eio.appendString16(newFileName);

]]></taskSetServer>
      <text>文件</text>
      <top>238</top>
      <topRatio>0.298994974874372</topRatio>
      <userProperty>//#P:blockSize|文件分段上传|1024|int||上传文件的分块大小，单位KB(1024bytes)
//#P:multiSelect|文件分段上传|true|enum|true,false|是否允许一次选择多个文件
//#P:onNotSupportUpload(sender)|文件分段上传||jsMix||不支持文件上传,参数sender:控件自身
//#P:onStatusChange(sender)|文件分段上传||jsMix||状态发生了变化,参数sender:控件自身
//#P:onComplete(sender,worker)|文件分段上传||jsMix||完成了一个任务，sender:控件自身,worker:任务

//#P1:editFontColor|多行文字录入V2|404040|color||用户输入文字的字体颜色
//#P1:editFontSize|多行文字录入V2|12pt|string||用户输入文字的大小
//#P1:editMaxY|多行文字录入V2|300px|string||编辑框最大高度
//#P1:onHeightChange(sender,oldH,newH)|多行文字录入V2||jsMix||由于用户的输入导致编辑框产生的高度变化。sender:触发事件的控件，oldH:旧的高度，newH:新的高度
//#P1:onInputChange(sender,key,oldText,newText,oldHtml,newHtml)|多行文字录入V2||jsMix||由于用户的输入导致内容改变，返回false表示取消本次修改。sender:触发事件的控件，key:用户按键，oldText:旧的内容，newText:新的内容，oldHtml:旧内容html形式，newHtml:新内容html形式
//#P1:onFocusChange(sender,isFocus)|多行文字录入V2||jsMix||焦点发生变化。sender:触发事件的控件，isFocus:是否触发了焦点
//#P1:onCurPosChange(sender,oldPos,newPos)|多行文字录入V2||jsMix||光标位置发生变化。sender:触发事件的控件，oldPos:原来的光标位置；newPos:新的光标位置；

</userProperty>
      <width>65</width>
      <widthRatio>0.0597976080956762</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel5">
      <backgroundColor>E0E0E0</backgroundColor>
      <height>189</height>
      <heightRatio>0.237437185929648</heightRatio>
      <left>252</left>
      <leftRatio>0.231830726770929</leftRatio>
      <onClick>if (!sender.workers) {
    sender.workers = new Array();
}
sender.workers.push(100);
sender.refresh(sender.workers);</onClick>
      <onCreate><![CDATA[sender.v_items = new Array();

sender.showBytes = function(bytes) {
    bytes = parseInt(bytes);
    var len = (bytes+"").length;
    if (len<=3) {
        return bytes + "B";
    }
    var b = ""; bytes = bytes + "";
    for (var i=0; i<bytes.length; i++) {
        if (i<3) {
            b += bytes.charAt(i);
        } else {
            b += "0";
        }
    }
    b = parseInt(b);
    if (len<=6) {
        return (b/1000) + "K";
    } else if (len<=9) {
        return (b/1000000) + "M";
    } else if (len<=12) {
        return (b/1000000000) + "G";
    } else return (b/1000000000000) + "T";
}


sender.refresh = function(workers) {
    while (sender.v_items.length<workers.length) {
        sender.appendItem();
    }
    while (sender.v_items.length>workers.length) {
        ee.removeControl(sender.v_items[sender.v_items.length-1]);
        sender.v_items.splice(sender.v_items.length-1, 1);
    }
    for (var i=0; i<workers.length; i++) {
        var w = workers[i];
        w.percent = w.bytesSent/w.fileBlob.size;
        eb.setDivRect(sender.v_items[i].c_p1,null,null,parseInt(sender.v_items[i].c_p1.v_w*w.percent),null);
        var s =
            parseInt(w.percent * 1000)/10 + "%" +
            "(" + sender.showBytes(w.bytesSent) + "/" + sender.showBytes(w.fileBlob.size) + ")" +
            " " + w.fileBlob.name;
        sender.v_items[i].c_text.innerText = s;
    }
    ee.tiledV(sender, 5, 0, 0);
    ee.tiledResizeV(sender,1);
}

sender.appendItem = function() {
    var w = eb.getDivRectSetting(sender).w;
    var c,root,cx=0;

    //root
    root = createPanel(sender, sender.id+"_root"+sender.v_items.length, "f0f3f8", 0, 0, w, 39);
    root.style.borderRadius = "5px";
    root.style.borderWidth = "1px";
    root.style.borderColor = "rgb(100,180,190)";
    root.style.borderStyle = "solid";
    root.style.boxSizing = "border-box";
    sender.v_items.push(root);
    
    //progress letter
    cx+=5;
    c = createPanel(root, root.id+"_txt1", "", 10, 5, w-20, 32);
    c.style.fontFamily = "'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif";
    c.style.fontSize = "12pt";
    c.style.color = "#000000";
    c.style.whiteSpace = "nowrap";
    c.style.cursor="pointer";
    c.innerHTML = "<div style='vertical-align:text-top;text-overflow:ellipsis;overflow:hidden;display:inline-block;max-width:"+(w-20)+"px'>...</div>";
    root.c_text = c.childNodes[0];

    //progress bar
    c = createPanel(root, root.id+"_p1", "#e0e0f0", 0, 32, w, 7);
    c = createPanel(c, root.id+"_p2", "rgb(29,161,242)", 0, 0, 1, 7);
    root.c_p1 = c;
    root.c_p1.v_w = w;
}


]]></onCreate>
      <sizeRatio>0.555882352941176</sizeRatio>
      <top>292</top>
      <topRatio>0.366834170854271</topRatio>
      <width>340</width>
      <widthRatio>0.31278748850046</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel6">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>25</left>
      <leftRatio>0.0229990800367985</leftRatio>
      <onClick><![CDATA[var xml = "";
xml += "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n";
xml += "<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n";

xml += "  <url>\n";
xml += "    <loc>https://fistalk.com/msg/67688</loc>\n";
xml += "    <lastmod>2023-01-13</lastmod>\n";
xml += "  </url>\n";

xml += "</urlset>\n";

var filename = "file.xml";
var aLink = document.createElement("a");
var bb = new Blob([xml], {type: "text/plain"});
aLink.setAttribute("href", window.URL.createObjectURL(bb));
aLink.setAttribute("download", filename);
aLink.dataset.downloadurl = ["text/plain", aLink.download, aLink.href].join(":");
aLink.draggable = true; 
aLink.classList.add("dragout");

aLink.click();]]></onClick>
      <onCreate>g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc","","","","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";



</onCreate>
      <sizeRatio>0.203703703703704</sizeRatio>
      <text>XML File</text>
      <top>187</top>
      <topRatio>0.234924623115578</topRatio>
      <width>162</width>
      <widthRatio>0.149034038638454</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel9">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>271</left>
      <leftRatio>0.249310027598896</leftRatio>
      <onClick><![CDATA[(async () => {
    try {
        g5.db = new g5.Database("DBA", "tableA");
        let exists = await g5.db.tableExists();
        if (exists) await g5.db.deleteTable();
        await g5.db.createTable("id",["f1","f2"]);
    } catch (error) {
        console.error(error);
    }
})();

]]></onClick>
      <onCreate>g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc","","","","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";



</onCreate>
      <sizeRatio>0.203703703703704</sizeRatio>
      <text>创建表</text>
      <top>612</top>
      <topRatio>0.768844221105528</topRatio>
      <width>162</width>
      <widthRatio>0.149034038638454</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/panel10">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>271</left>
      <leftRatio>0.249310027598896</leftRatio>
      <onClick><![CDATA[// 使用示例

(async () => {
    try {
        let db = new g5.Database("DBA", "tableA");
        let exists = await db.tableExists();
        if (exists) await db.deleteTable();
        await db.createTable("id",["f1","f2"]);
    } catch (error) {
        console.error(error);
    }
})();
]]></onClick>
      <onCreate>g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc","","","","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";



</onCreate>
      <sizeRatio>0.203703703703704</sizeRatio>
      <text>插入数据和搜索</text>
      <top>664</top>
      <topRatio>0.834170854271357</topRatio>
      <width>162</width>
      <widthRatio>0.149034038638454</widthRatio>
    </control>
    <control type="DivRoot" pathname="/divRoot/divroot1">
      <backgroundColor>FAFCFF</backgroundColor>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <height>796</height>
      <heightRatio>1</heightRatio>
      <left>0</left>
      <leftRatio>0.495860165593376</leftRatio>
      <onControlLoad>document.body.style.webkitTapHighlightColor = "rgba(0,0,0,0)";</onControlLoad>
      <onPageCreate><![CDATA[ee.setText = function (panel, text) {
        if (panel.label) {
            panel.label.rows[0].cells[0].innerHTML = text;
        } else {
            addText(panel, text, "center", "middle", "宋体", 9, "#000000", "normal");
        }
        //if (panel._input) panel._inputHint = text;
    }



ee.setOnClick = function (div, func) {
        div.eeOnClick = func;
        if ("ontouchstart" in window) {
            eb.addEvent(div, "touchstart", function (event) {
                div.eeMouseDownX = event.changedTouches[0].screenX;
                div.eeMouseDownY = event.changedTouches[0].screenY;
                div.i_clickCanceled = false;
                div.eeTouchStartTime = new Date();
            }, false);
            eb.addEvent(div, "touchend", function (event) {
                var d = Math.pow(Math.abs(event.changedTouches[0].screenX - div.eeMouseDownX),2);
                d += Math.pow(Math.abs(event.changedTouches[0].screenY - div.eeMouseDownY),2);
                d = Math.sqrt(d);
                if ((d < 20) &amp;&amp; ((new Date()).getTime() - div.eeTouchStartTime.getTime() < 600) &amp;&amp; (!div.i_clickCanceled)) {
                    if (div.eeOnClick) {
                        if (div.eeOnClick(div, event) == false) {
                            var d = div.parentNode;
                            while (d) {
                                if (d.eeOnClickCancel) {
                                    d.eeOnClickCancel(d, event);
                                }
                                d = d.parentNode;
                            }
                            window.event? window.event.cancelBubble = true : event.stopPropagation();
                            event.returnValue = false;
                            return false;
                        }
                    }
                }
            }, false);
            eb.addEvent(div, "touchmove", function (event) {
                var d = Math.pow(Math.abs(event.changedTouches[0].screenX - div.eeMouseDownX),2);
                d += Math.pow(Math.abs(event.changedTouches[0].screenY - div.eeMouseDownY),2);
                d = Math.sqrt(d);
                if ((d>20) &amp;&amp; (!div.i_clickCanceled)) {
                    div.i_clickCanceled = true;
                    if (div.eeOnClickCancel) {
                        div.eeOnClickCancel(div, event);
                    }
                }
            }, false);
        } else {
            eb.addEvent(div, "click", function (event) {
                if (div.eeOnClick) {
                    if (div.eeOnClick(div, event) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }
            }, false);
        }
    }

ee.setOnMouseEnter = function (div, func) {
        div.eeOnMouseEnter = func;
        if (!("ontouchstart" in window)) {
            eb.addEvent(div, "mouseenter", function (e) {
                div.eeOnMouseEnter(div, e);
            }, false);
            eb.addEvent(div, "mouseover", function (e) {
                div.eeOnMouseEnter(div, e);
            }, false);
        }
    }
ee.setOnMouseLeave = function (div, func) {
        div.eeOnMouseLeave = func;
        if (!("ontouchstart" in window)) {
            eb.addEvent(div, "mouseleave", function (e) {
                div.eeOnMouseLeave(div, e);
            }, false);
            eb.addEvent(div, "mouseout", function (e) {
                div.eeOnMouseLeave(div, e);
            }, false);
        }
    }


eb.initMouseEvent = function (div) {
        if ("ontouchstart" in window) {
            if (div.eeMouseDown) {
                eb.addEvent(div, "touchstart", function (event) {
                    if (div.eeMouseDown(div, event, event.changedTouches[0].clientX, event.changedTouches[0].clientY) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }, false);
            }
            if (div.eeMouseUp) {
                eb.addEvent(div, "touchend", function (event) {
                    if (div.eeMouseUp(div, event, event.changedTouches[0].clientX, event.changedTouches[0].clientY) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }, false);
            }
            if (div.eeMouseMove) {
                eb.addEvent(div, "touchmove", function (event) {
                    if (div.eeMouseMove(div, event, event.changedTouches[0].clientX, event.changedTouches[0].clientY) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }, false);
            }
        } else {
            if (div.eeMouseDown) {
                eb.addEvent(div, "mousedown", function (event) {
                    if (div.eeMouseDown(div, event, event.x, event.y) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }, false);
            }
            if (div.eeMouseUp) {
                eb.addEvent(div, "mouseup", function (event) {
                    if (div.eeMouseUp(div, event, event.x, event.y) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }, false);
            }
            if (div.eeMouseMove) {
                eb.addEvent(div, "mousemove", function (event) {
                    if (div.eeMouseMove(div, event, event.x, event.y) == false) {
                        window.event? window.event.cancelBubble = true : event.stopPropagation();
                        event.returnValue = false;
                        return false;
                    }
                }, false);
            }
        }
    }

function createPanel(parent, name, bgColor, left, top, width, height) {
    var result = eb.createDiv(parent);
    result.id = name;
    eb.setDivRect(result, left, top, width, height);
    if (bgColor.length == 6) {
        result.style.backgroundColor = "#" + bgColor;
    } else if (bgColor.length>0) {
        result.style.backgroundColor = bgColor;
    }
    //if (name.length > 3) {
    //    eval("parent." + name.substr(3, name.length) + "=result");
    //}
    if (parent.eeChildren == undefined) {
        parent.eeChildren = new Array();
    }
    parent.eeChildren.push(result);
    result.eeChildren = new Array();
    return result;
}]]></onPageCreate>
      <pageHead><![CDATA[<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no" />

<style>
body {
  touch-action: pan-y;
}

.aniAll3 {
    transition: all 0.3s;
}

</style>]]></pageHead>
      <sizeRatio>0.732290708371665</sizeRatio>
      <top>0</top>
      <topRatio>0.797738693467337</topRatio>
      <width>1087</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11">
      <autoScroll>true</autoScroll>
      <backgroundColor>FFFFFF</backgroundColor>
      <backgroundImg>dark1.png</backgroundImg>
      <backgroundImgMode>stretch</backgroundImgMode>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <ee_LocalName>popBlack</ee_LocalName>
      <height>796</height>
      <heightRatio>1</heightRatio>
      <layerName>主界面黑背景弹窗合辑</layerName>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <onClick>if (!ee.isInternalNode(sender, event.target)) {
    return;
}
if (sender.a7 &amp;&amp; (sender.a7.style.visibility != "hidden")) return;
sender.close();
</onClick>
      <onCreate><![CDATA[sender.style.position = "fixed";
sender.style.zIndex=100;
sender.v_canScroll = false;

sender.addEventListener("mousewheel", function(e) {
    if (!sender.v_canScroll) {
        window.event? window.event.cancelBubble = true : e.stopPropagation();
        e.returnValue = false;
        return false;
    }
    sender.v_canScroll = false;
});

sender.close = function() {
    for (var i=0; i<sender.eeChildren.length; i++) {
        if (sender.eeChildren[i].style.visibility != "hidden") {
            if (sender.eeChildren[i].close) {
                sender.eeChildren[i].close();
                ee.setVisible(this, false);
            } else {
                ee.showAni(sender.eeChildren[i], 1);
            }
        }
    }
}

if ("ontouchstart" in window) {
    if (g5.isIos) {
        //1.touch down drag page bug
        //2.touch down context menu
        //eb.addEvent(sender, "touchstart", function (event) {
        //    event.preventDefault();
        //    window.event? window.event.cancelBubble = true : event.stopPropagation();
        //    return false;
        //}, false);
        eb.addEvent(sender, "touchend", function (event) {
            event.preventDefault();
            window.event? window.event.cancelBubble = true : event.stopPropagation();
            return false;
        }, false);
        eb.addEvent(sender, "touchmove", function (event) {
            event.preventDefault();
            window.event? window.event.cancelBubble = true : event.stopPropagation();
            return false;
        }, false);
    }
}
]]></onCreate>
      <sizeRatio>0.732290708371665</sizeRatio>
      <top>0</top>
      <width>1087</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel12">
      <ani2Alpha>disappear:渐变消失</ani2Alpha>
      <aniAlpha>appear:渐变出现</aniAlpha>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <ee_LocalName>a2</ee_LocalName>
      <height>796</height>
      <heightRatio>1</heightRatio>
      <layerName>图片展示</layerName>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <onAni2End>sender.close();
</onAni2End>
      <onClick>return;
if (!ee.isInternalNode(sender, event.target)) {
    return;
}
sender.parentNode.close();</onClick>
      <onCreate><![CDATA[sender.c_photoRoot = ee.getControl("panel145");
sender.c_photo = ee.getControl("panel75");
sender.c_video = ee.getControl("panel76");
sender.c_button1 = ee.getControl("panel8");
sender.c_button2 = ee.getControl("panel52");
sender.c_mobileBg = ee.getControl("panel607");
sender.c_BtnConfirm = ee.getControl("panel613");
sender.c_iosCover = ee.getControl("panel619");

sender.show = function(photos, photo) {
    ee.setVisible(this.c_mobileBg, g5.isMobile);
    ee.setVisible(this.c_button1, true);
    ee.setVisible(this.c_button2, true);
    ee.setVisible(this.c_BtnConfirm, false);
    if (g5.isMobile) {
        this.setHammer();
        
        eb.setOuter(sender.c_photoRoot,0,0,0,0);
        sender.c_button1.dockX = "disabled";
        sender.c_button1.dockY = "bottom";
        sender.c_button2.dockX = "disabled";
        sender.c_button2.dockY = "bottom";
        var w = eb.getClientSize().w;
        w = parseInt(w - 100*2)/3;
        ee.setRect(sender.c_button1, w,null,100,50);
        ee.setRect(sender.c_button2, w+100+w,null,100,50);
        sender.c_button1.style.borderRadius = "25px 0px 0px 25px";
        sender.c_button2.style.borderRadius = "0px 25px 25px 0px";
        sender.c_button1.style.backgroundColor = "";
        sender.c_button2.style.backgroundColor = "";
        eb.processDock();
        var r = eb.getDivRectSetting(sender.c_photoRoot);
        ee.setRect(sender.c_photo, 0,0,r.w, r.h);
        ee.setRect(sender.c_iosCover, 0,0,r.w, r.h);
    }
    sender.v_photos = photos;
    sender.v_index = -1;
    for (var i = 0; i < photos.length; i++) {
        if (photos[i]==photo) {
            sender.v_index = i;
            break;
        }    
    }
    if (sender.v_index<0) return;
    sender.refresh();    
    document.addEventListener("keydown", this.onKeyDown);
    ee.setVisible(this, true);
    ee.setVisible(this.parentNode, true);
}

sender.showConfirm = function(photo, onConfirm) {
    ee.setVisible(this.c_mobileBg, g5.isMobile);
    ee.setVisible(this.c_button1, false);
    ee.setVisible(this.c_button2, false);
    ee.setVisible(this.c_BtnConfirm, true);
    this.f_onConfirm = onConfirm;
    if (g5.isMobile) {
        this.setHammer();
        
        eb.setOuter(sender.c_photoRoot,0,0,0,0);
        sender.c_button1.dockX = "disabled";
        sender.c_button1.dockY = "bottom";
        sender.c_button2.dockX = "disabled";
        sender.c_button2.dockY = "bottom";
        var w = eb.getClientSize().w;
        w = parseInt(w - 100*2)/3;
        ee.setRect(sender.c_button1, w,null,100,50);
        ee.setRect(sender.c_button2, w+100+w,null,100,50);
        sender.c_button1.style.borderRadius = "25px 0px 0px 25px";
        sender.c_button2.style.borderRadius = "0px 25px 25px 0px";
        sender.c_button1.style.backgroundColor = "";
        sender.c_button2.style.backgroundColor = "";
        eb.processDock();
        var r = eb.getDivRectSetting(sender.c_photoRoot);
        ee.setRect(sender.c_photo, 0,0,r.w, r.h);
        ee.setRect(sender.c_iosCover, 0,0,r.w, r.h);
    }
    this.v_photos = new Array();
    this.v_photos.push(photo);
    this.v_index = 0;
    sender.refresh();    
    document.addEventListener("keydown", this.onKeyDown);
    ee.setVisible(this, true);
    ee.setVisible(this.parentNode, true);
}

sender.setHammer = function() {
    if (!g5.isMobile) return;
    sender.c_photo.dockX = "disabled";
    sender.c_photo.dockY = "disabled";
    sender.v_touchEnd = true;
    sender.v_r = eb.getDivRectSetting(sender);
    sender.v_startP = new Point(0,0);
    if (sender.hammer) sender.hammer.destroy();
    sender.hammer = new Hammer(sender.c_photoRoot);
    
    /*
    ee.getControl("panel75").addEventListener("touchstart", function(ev) {
        console.log("touchStart Received");
    });
    ee.getControl("panel75").addEventListener("touchend", function() {
        console.log("touchEnd Received");
    });
    ee.getControl("panel75").addEventListener("touchmove", function() {
        console.log("touchmove Received");
    });
    */
    
    sender.hammer.get("pinch").set({ enable: true });
    sender.hammer.get("pan").set({ direction: Hammer.DIRECTION_ALL });
    sender.hammer.on("pan", function(ev) {
        if (sender.v_touchEnd) {
            sender.v_r = eb.getDivRectSetting(sender.c_photo);
            sender.v_startP.x = ev.deltaX;
            sender.v_startP.y = ev.deltaY;
            sender.v_touchEnd = false;
        }
        if (ev.eventType == 4) {
            sender.v_touchEnd = true;
        }
        var r0 = eb.getDivRectSetting(sender.c_photoRoot);
        var r = new Rect();
        r.x = sender.v_r.x + ev.deltaX - sender.v_startP.x;
        r.y = sender.v_r.y + ev.deltaY - sender.v_startP.y;
        r.w = sender.v_r.w;
        r.h = sender.v_r.h;
        r.x = Math.min(0, r.x);
        r.y = Math.min(0, r.y);
        if (r.x+r.w<r0.w) r.x = r0.w-r.w;
        if (r.y+r.h<r0.h) r.y = r0.h-r.h;
        ee.setRect(sender.c_photo, r.x,r.y, null, null);
        if (sender.c_iosCover.style.visibility == "visible") {
            ee.setRect(sender.c_iosCover, r.x,r.y, null, null);
        }
    });
    
    sender.hammer.on("pinchstart", function(ev) {
        sender.v_r = eb.getDivRectSetting(sender.c_photo);
        sender.v_scale = ev.scale;
        sender.v_ri = new Rect();
        sender.v_ri.w = sender.c_photo.img.width;
        sender.v_ri.h = sender.c_photo.img.height;
    });
    sender.hammer.on("pinchmove",  function(ev) {
        var r0 = eb.getDivRectSetting(sender.c_photoRoot);
        var r = new Rect();
        var sc = Math.min(ev.scale/sender.v_scale, Math.max(r0.w*2/sender.v_ri.w, r0.h*2/sender.v_ri.h));
        r.w = parseInt(sender.v_r.w * sc);
        r.h = parseInt(sender.v_r.h * sc);
        r.w = Math.max(r.w, r0.w);
        r.h = Math.max(r.h, r0.h);
        r.x = parseInt((sender.v_r.x + sender.v_r.w/2) - r.w/2 + ev.deltaX);
        r.y = parseInt((sender.v_r.y + sender.v_r.h/2) - r.h/2 + ev.deltaY);
        r.x = Math.min(0, r.x);
        r.y = Math.min(0, r.y);
        if (r.x+r.w<r0.w) r.x = r0.w-r.w;
        if (r.y+r.h<r0.h) r.y = r0.h-r.h;
        ee.setRect(sender.c_photo, r.x,r.y,r.w,r.h);
        ee.setVisible(sender.c_iosCover, false);
        //if (sender.c_iosCover.style.visibility == "visible") {
        //    ee.setRect(sender.c_iosCover, r.x,r.y,r.w,r.h);
        //}
    });
    sender.hammer.on("pinchend",  function(ev) {
        sender.v_touchEnd = true;
    });
    sender.hammer.on("swipeleft",  function(ev) {
        var r0 = eb.getDivRectSetting(sender.c_photoRoot);
        var r1 = eb.getDivRectSetting(sender.c_photo);
        if (r0.w!=r1.w) return;
        sender.clickRight();
    });
    sender.hammer.on("swiperight",  function(ev) {
        var r0 = eb.getDivRectSetting(sender.c_photoRoot);
        var r1 = eb.getDivRectSetting(sender.c_photo);
        if (r0.w!=r1.w) return;
        //g5.writeLog(ev.type);
        sender.clickLeft();
    });
    /*
    var c = document.getElementById("divRoot");
    c.style.overflow = "hidden";
    var c = document.getElementById("ee_divRoot");
    c.style.overflow = "hidden";
    var c = ee.getControl("panel134");
    c.style.overflow = "hidden";    
    */
}

sender.onKeyDown = function(event) {
    event = event || window.event;
    if (event.keyCode == 37) {
        ee.getControl("panel8").click();
    } else if (event.keyCode == 39) {
        ee.getControl("panel52").click();
    } else if (event.keyCode == 27) {
        sender.parentNode.click();
    }
}

sender.refresh = function() {
    if (this.v_index<0) return;
    if (this.v_index>=this.v_photos.length) return;
    var v_photo = this.v_photos[this.v_index];
    var rect = eb.getDivRect(this.c_photo);
    this.c_video.innerHTML = "";
    ee.setVisible(this.c_video, false);
    if (v_photo.substr(0,4) == "?YTB") {
        ee.setVisible(this.c_photo, false);
        this.c_video.innerHTML =
            "<iframe width='" + rect.w + "' height='" + rect.h + "' src='https://www.youtube.com/embed/" +
            v_photo.substr(4, v_photo.length) + 
            "' frameborder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>";
        ee.setVisible(this.c_video, true);
        ee.setVisible(this.c_iosCover, false);
    } else {
        this.c_photo.imgUrl = g5.getUserTitleBgUrl(v_photo)[1];
        ee.setImage(this.c_photo, this.c_photo.imgUrl,"fill","","");
        ee.setVisible(this.c_photo, true);
        ee.setVisible(this.c_iosCover, g5.isIos);
        if (g5.isIos) ee.setImage(this.c_iosCover, this.c_photo.imgUrl,"fill","","");
    }
}

sender.clear = function() {
    ee.setImage(this.c_photo,"","fill","","");
    this.c_video.innerHTML = "";
    ee.setVisible(this.c_photo, false);
    ee.setVisible(this.c_video, false);
}

sender.close = function() {
    ee.setVisible(this.parentNode, false);
    ee.setVisible(this, false);
    document.removeEventListener("keydown", this.onKeyDown);
    this.clear();
}

sender.clickLeft = function() {
    if (sender.v_photos.length<=1) return;
    this.c_photoRoot.className = "aniAll3";
    this.c_photoRoot.id = "";
    this.c_photo.id = "";
    this.c_video.id= "";
    var r = eb.getDivRectSetting(this);
    var delCon = this.c_photoRoot;
    ee.setRect(delCon,r.w,null,null,null);
    setTimeout(function() {
        ee.removeControl(delCon);
    }, 500);
    
    this.c_photoRoot = createPanel(this, "panel145", "",-r.w,0,r.w,r.h);
    ee.setOnClick(this.c_photoRoot, function(senderP, event) {
        senderP.parentNode.parentNode.close();
    }); 
    ee.changeParent(this.c_photoRoot,this,1);
    this.c_photoRoot.className = "aniAll3";
    this.c_photo = createPanel(this.c_photoRoot, "panel75", "",0,0,r.w,r.h);    
    this.c_video = createPanel(this.c_photoRoot, "panel76", "",0,0,r.w,r.h);
    this.setHammer();    
    if (this.v_index==0) {
        this.v_index = this.v_photos.length-1;
    } else {
        this.v_index--;
    }
    this.refresh();
    eb.setDivRect(this.c_photoRoot,0,null,null,null);
}

sender.clickRight = function() {
    if (sender.v_photos.length<=1) return;
    this.c_photoRoot.className = "aniAll3";
    this.c_photoRoot.id = "";
    this.c_photo.id = "";
    this.c_video.id= "";
    var r = eb.getDivRectSetting(this);
    var delCon = this.c_photoRoot;
    ee.setRect(delCon,-r.w,null,null,null);
    setTimeout(function() {
        ee.removeControl(delCon);
    }, 500);

    this.c_photoRoot = createPanel(this, "panel145", "",r.w,0,r.w,r.h);
    ee.setOnClick(this.c_photoRoot, function(senderP, event) {
        senderP.parentNode.parentNode.close();
    }); 
    ee.changeParent(this.c_photoRoot,this,1);
    this.c_photoRoot.className = "aniAll3";
    this.c_photo = createPanel(this.c_photoRoot, "panel75", "",0,0,r.w,r.h);    
    this.c_video = createPanel(this.c_photoRoot, "panel76", "",0,0,r.w,r.h);    
    this.setHammer(); 
    if (this.v_index >= this.v_photos.length-1) {
        this.v_index = 0;
    } else {
        this.v_index++;
    }
    this.refresh();
    eb.setDivRect(this.c_photoRoot,0,null,null,null);
}
]]></onCreate>
      <sizeRatio>0.732290708371665</sizeRatio>
      <top>0</top>
      <width>1087</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel12/panel13">
      <backgroundColor>403534</backgroundColor>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <height>796</height>
      <heightRatio>1</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <note>c_mobileBg</note>
      <sizeRatio>0.732290708371665</sizeRatio>
      <top>0</top>
      <width>1087</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel12/panel14">
      <backgroundImgMode>fill</backgroundImgMode>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <height>696</height>
      <heightRatio>0.874371859296482</heightRatio>
      <layerVisible>false</layerVisible>
      <left>80</left>
      <leftRatio>0.0735970561177553</leftRatio>
      <note>c_photoRoot</note>
      <onClick>sender.parentNode.parentNode.close();</onClick>
      <outerBottom>50</outerBottom>
      <outerLeft>80</outerLeft>
      <outerRight>80</outerRight>
      <outerTop>50</outerTop>
      <sizeRatio>0.750809061488673</sizeRatio>
      <top>50</top>
      <topRatio>0.0628140703517588</topRatio>
      <width>927</width>
      <widthRatio>0.852805887764489</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel12/panel14/panel15">
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <height>696</height>
      <heightRatio>1</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <note>c_photo</note>
      <sizeRatio>0.750809061488673</sizeRatio>
      <top>0</top>
      <width>927</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel12/panel14/panel16">
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <height>696</height>
      <heightRatio>1</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <note>c_video</note>
      <sizeRatio>0.750809061488673</sizeRatio>
      <top>0</top>
      <width>927</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel12/panel17">
      <height>49</height>
      <heightRatio>0.0615577889447236</heightRatio>
      <layerVisible>false</layerVisible>
      <left>10</left>
      <leftRatio>0.00919963201471941</leftRatio>
      <sizeRatio>0.844827586206897</sizeRatio>
      <top>10</top>
      <topRatio>0.0125628140703518</topRatio>
      <width>58</width>
      <widthRatio>0.0533578656853726</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel12/panel17/panel18">
      <backgroundImg>i087_01.png</backgroundImg>
      <backgroundImgMode>fill</backgroundImgMode>
      <cursor>pointer</cursor>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <height>39</height>
      <heightRatio>0.795918367346939</heightRatio>
      <layerVisible>false</layerVisible>
      <left>5</left>
      <leftRatio>0.0862068965517241</leftRatio>
      <onClick>sender.parentNode.parentNode.close();</onClick>
      <outerBottom>5</outerBottom>
      <outerLeft>5</outerLeft>
      <outerRight>5</outerRight>
      <outerTop>5</outerTop>
      <sizeRatio>0.8125</sizeRatio>
      <top>5</top>
      <topRatio>0.102040816326531</topRatio>
      <width>48</width>
      <widthRatio>0.827586206896552</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel12/panel19">
      <cursor>pointer</cursor>
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <fontBold>true</fontBold>
      <fontColor>1E90FF</fontColor>
      <fontSize>14</fontSize>
      <height>796</height>
      <heightRatio>1</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <note>c_iosCover</note>
      <onCreate>eb.setAlpha(sender, 1);
sender.addEventListener("touchstart", function(ev) {
    var newEv = new TouchEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
    //ev.preventDefault();
});

sender.addEventListener("touchmove", function(ev) {
    var newEv = new TouchEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("touchend", function(ev) {
    var newEv = new TouchEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("touchcanceled", function(ev) {
    var newEv = new TouchEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("touchenter", function(ev) {
    console.log("touchenter");
    var newEv = new TouchEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("touchleave", function(ev) {
    console.log("touchleave");
    var newEv = new TouchEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("pointerdown", function(ev) {
    var newEv = new PointerEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("pointerup", function(ev) {
    var newEv = new PointerEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});

sender.addEventListener("pointermove", function(ev) {
    var newEv = new PointerEvent(ev.type, ev);
    sender.parentNode.c_photoRoot.dispatchEvent(newEv);
});



</onCreate>
      <sizeRatio>0.732290708371665</sizeRatio>
      <top>0</top>
      <width>1087</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel12/panel20">
      <backgroundImgMode>fill</backgroundImgMode>
      <cursor>pointer</cursor>
      <dockX>left</dockX>
      <dockY>center</dockY>
      <fontBold>true</fontBold>
      <fontColor>1E90FF</fontColor>
      <fontSize>14</fontSize>
      <height>176</height>
      <heightRatio>0.221105527638191</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <onCreate><![CDATA[sender.style.borderRadius = "0px 25px 25px 0px";
sender.baseColor = "rgba(0,0,0,0.2)";
sender.style.backgroundColor = sender.baseColor;
ee.setText(sender,"<svg viewBox=\"0 0 800 800\" style=\"display:inline;height:1.9em;width:1.9em;margin:0px 0px 0px 0px;fill:#ffffff;vertical-align:middle;\">"+g5.iconLeft+"</svg>");
ee.setOnMouseEnter(sender, function(sender,event) { 
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = "rgba(0,0,0,0.5)";
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = sender.baseColor;
});
sender.eeMouseDown = function(sender,event,x,y) {
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = "rgba(0,0,0,0.8)";
}
sender.eeMouseUp = function(sender,event,x,y) {
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = "rgba(0,0,0,0.5)";
}
ee.setOnClick(sender, function(sender, event) {
    sender.parentNode.clickLeft();
    window.event? window.event.cancelBubble = true : event.stopPropagation();
});
eb.initMouseEvent(sender);

]]></onCreate>
      <sizeRatio>3.2</sizeRatio>
      <text><![CDATA[<]]></text>
      <top>310</top>
      <topRatio>0.389447236180905</topRatio>
      <width>55</width>
      <widthRatio>0.0505979760809568</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel12/panel21">
      <backgroundImgMode>fill</backgroundImgMode>
      <cursor>pointer</cursor>
      <dockX>right</dockX>
      <dockY>center</dockY>
      <fontBold>true</fontBold>
      <fontColor>1E90FF</fontColor>
      <fontSize>14</fontSize>
      <height>176</height>
      <heightRatio>0.221105527638191</heightRatio>
      <layerVisible>false</layerVisible>
      <left>1032</left>
      <leftRatio>0.949402023919043</leftRatio>
      <onCreate><![CDATA[sender.style.borderRadius = "25px 0px 0px 25px";
sender.baseColor = "rgba(0,0,0,0.2)";
sender.style.backgroundColor = sender.baseColor;
ee.setText(sender,"<svg viewBox=\"0 0 800 800\" style=\"display:inline;height:1.9em;width:1.9em;margin:0px 0px 0px 0px;fill:#ffffff;vertical-align:middle;\">"+g5.iconRight+"</svg>");
ee.setOnMouseEnter(sender, function(sender,event) { 
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = "rgba(0,0,0,0.5)";
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = sender.baseColor;
});
sender.eeMouseDown = function(sender,event,x,y) {
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = "rgba(0,0,0,0.8)";
    window.event? window.event.cancelBubble = true : event.stopPropagation();
}
sender.eeMouseUp = function(sender,event,x,y) {
    if (sender.style.backgroundColor.length>0) sender.style.backgroundColor = "rgba(0,0,0,0.5)";
    window.event? window.event.cancelBubble = true : event.stopPropagation();
}
ee.setOnClick(sender, function(sender, event) {
    sender.parentNode.clickRight();
    window.event? window.event.cancelBubble = true : event.stopPropagation();
});
eb.initMouseEvent(sender);

]]></onCreate>
      <sizeRatio>3.2</sizeRatio>
      <text><![CDATA[>]]></text>
      <top>310</top>
      <topRatio>0.389447236180905</topRatio>
      <width>55</width>
      <widthRatio>0.0505979760809568</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel12/panel22">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <dockX>center</dockX>
      <dockY>bottom</dockY>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <height>40</height>
      <heightRatio>0.050251256281407</heightRatio>
      <layerVisible>false</layerVisible>
      <left>463</left>
      <leftRatio>0.425942962281509</leftRatio>
      <note>c_BtnConfirm</note>
      <onClick>sender.parentNode.f_onConfirm();
sender.parentNode.parentNode.close();
window.event? window.event.cancelBubble = true : event.stopPropagation();
</onClick>
      <onCreate>sender.BStyle = function(color1,color2,color3,text1,text2,text3,tColor1,tColor2,tColor3,bdColor) {
    this.color1 = color1;
    this.color2 = color2
    this.color3 = color3;
    this.text1 = text1;
    this.text2 = text2;
    this.text3 = text3;
    this.tColor1 = tColor1;
    this.tColor2 = tColor2;
    this.tColor3 = tColor3;
    this.bdColor = bdColor;
}
sender.v_style = [
    new sender.BStyle("#20b020","#20c020","#30a030","发送","发送","发送","#ffffff","#ffffff","#ffffff","")
];

sender.init = function(index) {
    this.v_index = index;
    this.style.backgroundColor = this.v_style[index].color1;
    ee.setText(this, this.v_style[index].text1);
    ee.setTextColor(this, this.v_style[index].tColor1);
    if (this.v_style[index].bdColor=="") {
        this.style.borderWidth = "0px";
    } else {
        this.style.boxSizing="border-box";
        this.style.borderWidth = "1px";
        this.style.borderColor = this.v_style[index].bdColor;
        this.style.borderStyle = "solid";
    }
    this.style.borderRadius = parseInt(eb.getDivRect(this).h/2) + "px";
}

ee.setOnMouseEnter(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    ee.setText(sender, s.text2);
    ee.setTextColor(sender, s.tColor2);
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    ee.setText(sender, s.text1);
    ee.setTextColor(sender, s.tColor1);
});
sender.eeMouseDown = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color3;
    setTimeout(function() {
        ee.setText(sender, s.text3);
    }, 1000); 
    ee.setTextColor(sender, s.tColor3);
}
sender.eeMouseUp = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    setTimeout(function() {
        ee.setText(sender, s.text2);
    }, 1000); 
    ee.setTextColor(sender, s.tColor2);
}
eb.initMouseEvent(sender);

sender.init(0);







</onCreate>
      <outerBottom>30</outerBottom>
      <sizeRatio>0.25</sizeRatio>
      <text>发送</text>
      <top>726</top>
      <topRatio>0.912060301507538</topRatio>
      <width>160</width>
      <widthRatio>0.147194112235511</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel23">
      <ani2Alpha>disappear:渐变消失</ani2Alpha>
      <ani2Size>pointDisappear:收缩消失成点</ani2Size>
      <aniAlpha>appear:渐变出现</aniAlpha>
      <backgroundColor>FFFFFF</backgroundColor>
      <backgroundImgMode>fill</backgroundImgMode>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>center</dockX>
      <dockY>center</dockY>
      <ee_LocalName>a6</ee_LocalName>
      <height>255</height>
      <heightRatio>0.32035175879397</heightRatio>
      <layerName>通用确认窗口</layerName>
      <layerVisible>false</layerVisible>
      <left>358</left>
      <leftRatio>0.329346826126955</leftRatio>
      <onAni2End>ee.setVisible(ee.getControl("panel112"), false);
</onAni2End>
      <onClick>        window.event? window.event.cancelBubble = true : event.stopPropagation();
</onClick>
      <onCreate>sender.style.boxSizing="border-box";
sender.style.borderWidth = "1px";
sender.style.borderColor = "#a0a0a0";
sender.style.borderStyle = "solid";
sender.style.borderRadius = "10px";
sender.style.boxShadow = "5px 5px 15px #808080";

sender.show = function(title,text,bStyle1,bStyle2,onComplete,onButton1) {
    ee.setText(this.c_title,title);
    ee.setText(this.c_text,text);
    this.c_btnCancel.v_style = bStyle1;
    this.c_btnCancel.init(0);
    this.c_btnOK.v_style = bStyle2;
    this.c_btnOK.init(0);
    this.onComplete = onComplete;
    this.onButton1 = onButton1;
    ee.setVisible(this.parentNode, true);
    ee.setVisible(this, true);
    document.addEventListener("keydown", this.onKeyDown);
}

sender.close = function() {
    ee.setVisible(this, false);
    ee.setVisible(this.parentNode, false);
    document.removeEventListener("keydown", this.onKeyDown);
}

sender.onKeyDown = function(event) {
    event = event || window.event;
    if (event.keyCode == 13) {
        sender.close();
        if (sender.onComplete) sender.onComplete();
    } else if (event.keyCode == 27) {
        sender.parentNode.close();
        if (!eb.isEmpty(sender.onButton1)) {
            sender.onButton1();
            sender.onButton1 = null;
        }
    }
}

if ("ontouchstart" in window) {
    sender.addEventListener("touchstart", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchend", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchmove", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
}




</onCreate>
      <sizeRatio>0.689189189189189</sizeRatio>
      <top>270</top>
      <topRatio>0.339195979899498</topRatio>
      <width>370</width>
      <widthRatio>0.340386384544618</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel23/panel24">
      <ee_LocalName>c_text</ee_LocalName>
      <fontColor>657786</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <height>116</height>
      <heightRatio>0.454901960784314</heightRatio>
      <layerVisible>false</layerVisible>
      <left>26</left>
      <leftRatio>0.0702702702702703</leftRatio>
      <sizeRatio>0.361370716510903</sizeRatio>
      <text>此操作不可撤消，并且将从你的个人资料、关注你的任何账号的时间线以及 GET搜索结果中移除。</text>
      <top>58</top>
      <topRatio>0.227450980392157</topRatio>
      <width>321</width>
      <widthRatio>0.867567567567568</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel23/panel25">
      <dockX>center</dockX>
      <ee_LocalName>c_title</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>202326</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>14</fontSize>
      <height>39</height>
      <heightRatio>0.152941176470588</heightRatio>
      <layerVisible>false</layerVisible>
      <left>57</left>
      <leftRatio>0.154054054054054</leftRatio>
      <onCreate>sender.label.style.tableLayout = "fixed";
sender.label.rows[0].cells[0].style.overflow = "hidden";
sender.label.rows[0].cells[0].style.textOverflow = "ellipsis";
sender.label.rows[0].cells[0].style.whiteSpace = "nowrap";
</onCreate>
      <sizeRatio>0.152941176470588</sizeRatio>
      <text>删除发言</text>
      <top>18</top>
      <topRatio>0.0705882352941176</topRatio>
      <width>255</width>
      <widthRatio>0.689189189189189</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel23/panel26">
      <backgroundColor>00C0C0</backgroundColor>
      <cursor>move</cursor>
      <dockX>fill</dockX>
      <dockY>top</dockY>
      <height>65</height>
      <heightRatio>0.254901960784314</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <onCreate><![CDATA[sender.v_down = false;
sender.style.backgroundColor = "rgba(255,255,255,0.01)";
if ("ontouchstart" in window) {
    sender.addEventListener("touchstart", function(event) {
        var sender = event.target;
        sender.v_down = true;
        sender.v_x = event.changedTouches[0].screenX;
        sender.v_y = event.changedTouches[0].screenY;
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchend", function(event) {
        var sender = event.target;
        sender.v_down = false;
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchmove", function(event) {
        var sender = event.target;
        if (sender.v_down) {
            var dx = event.changedTouches[0].screenX - sender.v_x;
            var dy = event.changedTouches[0].screenY - sender.v_y;
            var rect = eb.getDivRect(sender.parentNode);
            var rectP = eb.getDivRect(sender.parentNode.parentNode);
            if (rect.x+dx<0) dx = null;
            if (rect.x+dx+rect.w>=rectP.w) dx = null;
            if (dx!=null) {
                sender.v_x = event.changedTouches[0].screenX;
                dx = rect.x+dx;
            }
            if (rect.y+dy<0) dy = null;
            if (rect.y+dy+rect.h>=rectP.h) dy = null;
            if (dy!=null) {
                sender.v_y = event.changedTouches[0].screenY ;
                dy = rect.y+dy;
            }
            ee.setRect(sender.parentNode, dx, dy, null, null);
        }
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
} else {
    sender.onpointerdown = function(event) {
        var sender = event.target;
        sender.v_down = true;
        sender.v_x = event.clientX;
        sender.v_y = event.clientY;
        sender.setPointerCapture(event.pointerId);
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
    sender.onpointerup = function(event) {
        var sender = event.target;
        sender.v_down = false;
        sender.releasePointerCapture(event.pointerId);
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
    sender.onpointermove = function(event) {
        var sender = event.target;
        if (sender.v_down) {
            var dx = event.clientX - sender.v_x;
            var dy = event.clientY - sender.v_y;
            var rect = eb.getDivRect(sender.parentNode);
            var rectP = eb.getDivRect(sender.parentNode.parentNode);
            if (rect.x+dx<0) dx = null;
            if (rect.x+dx+rect.w>=rectP.w) dx = null;
            if (dx!=null) {
                sender.v_x = event.clientX;
                dx = rect.x+dx;
            }
            if (rect.y+dy<0) dy = null;
            if (rect.y+dy+rect.h>=rectP.h) dy = null;
            if (dy!=null) {
                sender.v_y = event.clientY;
                dy = rect.y+dy;
            }
            ee.setRect(sender.parentNode, dx, dy, null, null);
        }
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
}




]]></onCreate>
      <sizeRatio>0.175675675675676</sizeRatio>
      <top>0</top>
      <width>370</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel23/panel27">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <ee_LocalName>c_btnCancel</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <height>40</height>
      <heightRatio>0.156862745098039</heightRatio>
      <layerVisible>false</layerVisible>
      <left>56</left>
      <leftRatio>0.151351351351351</leftRatio>
      <onClick>sender.parentNode.close();
if (!eb.isEmpty(sender.parentNode.onButton1)) {
    sender.parentNode.onButton1();
    sender.parentNode.onButton1 = null;
}
</onClick>
      <onCreate>var text = ee.getText(sender);
sender.v_style = [
    new g5.BStyle("","#e8f5fe","#d2ecfc",text,text,text,"#1da1f2","#1da1f2","#1da1f2","#1da1f2"),
];

sender.init = function(index) {
    this.v_index = index;
    this.style.backgroundColor = this.v_style[index].color1;
    ee.setText(this, this.v_style[index].text1);
    ee.setTextColor(this, this.v_style[index].tColor1);
    if (this.v_style[index].bdColor=="") {
        this.style.borderWidth = "0px";
    } else {
        this.style.boxSizing="border-box";
        this.style.borderWidth = "1px";
        this.style.borderColor = this.v_style[index].bdColor;
        this.style.borderStyle = "solid";
        eb.setDivRect(this.label.parentNode,-1,-1,null,null);
    }
    this.style.borderRadius = parseInt(eb.getDivRect(this).h/2) + "px";
}

ee.setOnMouseEnter(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    ee.setText(sender, s.text2);
    ee.setTextColor(sender, s.tColor2);
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    ee.setText(sender, s.text1);
    ee.setTextColor(sender, s.tColor1);
});
sender.eeMouseDown = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color3;
    setTimeout(function() {
        ee.setText(sender, s.text3);
    }, 1000); 
    ee.setTextColor(sender, s.tColor3);
}
sender.eeMouseUp = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    setTimeout(function() {
        ee.setText(sender, s.text2);
    }, 1000); 
    ee.setTextColor(sender, s.tColor2);
}
eb.initMouseEvent(sender);

sender.init(0);







</onCreate>
      <sizeRatio>0.317460317460317</sizeRatio>
      <text>取消</text>
      <top>183</top>
      <topRatio>0.717647058823529</topRatio>
      <width>126</width>
      <widthRatio>0.340540540540541</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel23/panel28">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <ee_LocalName>c_btnOK</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <height>40</height>
      <heightRatio>0.156862745098039</heightRatio>
      <layerVisible>false</layerVisible>
      <left>205</left>
      <leftRatio>0.554054054054054</leftRatio>
      <onClick>sender.parentNode.close();
sender.parentNode.onComplete();</onClick>
      <onCreate>var text = ee.getText(sender);
sender.v_style = [
    new g5.BStyle("","#e8f5fe","#d2ecfc",text,text,text,"#1da1f2","#1da1f2","#1da1f2","#1da1f2"),
];

sender.init = function(index) {
    this.v_index = index;
    this.style.backgroundColor = this.v_style[index].color1;
    ee.setText(this, this.v_style[index].text1);
    ee.setTextColor(this, this.v_style[index].tColor1);
    if (this.v_style[index].bdColor=="") {
        this.style.borderWidth = "0px";
    } else {
        this.style.boxSizing="border-box";
        this.style.borderWidth = "1px";
        this.style.borderColor = this.v_style[index].bdColor;
        this.style.borderStyle = "solid";
        eb.setDivRect(this.label.parentNode,-1,-1,null,null);
    }
    this.style.borderRadius = parseInt(eb.getDivRect(this).h/2) + "px";
}

ee.setOnMouseEnter(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    ee.setText(sender, s.text2);
    ee.setTextColor(sender, s.tColor2);
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    ee.setText(sender, s.text1);
    ee.setTextColor(sender, s.tColor1);
});
sender.eeMouseDown = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color3;
    setTimeout(function() {
        ee.setText(sender, s.text3);
    }, 1000); 
    ee.setTextColor(sender, s.tColor3);
}
sender.eeMouseUp = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    setTimeout(function() {
        ee.setText(sender, s.text2);
    }, 1000); 
    ee.setTextColor(sender, s.tColor2);
}
eb.initMouseEvent(sender);

sender.init(0);







</onCreate>
      <sizeRatio>0.317460317460317</sizeRatio>
      <text>确认</text>
      <top>183</top>
      <topRatio>0.717647058823529</topRatio>
      <width>126</width>
      <widthRatio>0.340540540540541</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel23/panel29">
      <cursor>pointer</cursor>
      <dockX>right</dockX>
      <dockY>top</dockY>
      <height>36</height>
      <heightRatio>0.141176470588235</heightRatio>
      <layerVisible>false</layerVisible>
      <left>316</left>
      <leftRatio>0.854054054054054</leftRatio>
      <onClick>sender.parentNode.close();</onClick>
      <onCreate><![CDATA[ee.setText(sender,
    "<svg viewBox=\"0 0 24 24\" style=\"font-size: 13px;height:1.5em;width:1.5em;margin:5px 8px 8px 5px;fill:rgba(80,80,80,1);vertical-align:middle;\">" + g5.icon.close + "</svg>"
);
sender.style.borderRadius = "50%";
ee.setOnMouseEnter(sender, function(sender,event) {
    sender.style.backgroundColor = "#dfeffa";
});    
ee.setOnMouseLeave(sender, function(sender,event) {
    sender.style.backgroundColor = "";
});
]]></onCreate>
      <outerRight>18</outerRight>
      <outerTop>15</outerTop>
      <sizeRatio>1</sizeRatio>
      <top>15</top>
      <topRatio>0.0588235294117647</topRatio>
      <width>36</width>
      <widthRatio>0.0972972972972973</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel30">
      <ani2Alpha>disappear:渐变消失</ani2Alpha>
      <ani2Size>pointDisappear:收缩消失成点</ani2Size>
      <aniAlpha>appear:渐变出现</aniAlpha>
      <backgroundColor>FFFFFF</backgroundColor>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>center</dockX>
      <dockY>center</dockY>
      <ee_LocalName>a7</ee_LocalName>
      <height>211</height>
      <heightRatio>0.265075376884422</heightRatio>
      <layerName>通用提示窗口</layerName>
      <layerVisible>false</layerVisible>
      <left>364</left>
      <leftRatio>0.334866605335787</leftRatio>
      <onAni2End>ee.setVisible(sender.parentNode, false);
</onAni2End>
      <onClick>        window.event? window.event.cancelBubble = true : event.stopPropagation();
</onClick>
      <onCreate>//samples
/*
popBlack.a7.show(
        "提示", "修改您的用户信息完成",
        [new g5.BStyle("#1da1f2","#1a91da","#1781c2","确定","确定","确定","#ffffff","#ffffff","#ffffff","")],
        //[new g5.BStyle("","#e8f5fe","#d2ecfc","确定","确定","确定","#1da1f2","#1da1f2","#1da1f2","#1da1f2")],
        function() {}
    );
*/

//public
sender.style.boxSizing="border-box";
sender.style.borderWidth = "1px";
sender.style.borderColor = "#a0a0a0";
sender.style.borderStyle = "solid";
sender.style.borderRadius = "10px";
sender.style.boxShadow = "5px 5px 15px #808080";
//sender.className = "elementToFadeInAndOut";
   
   
//implementation
sender.show = function(title,text,bStyle,onComplete) {
    ee.setText(this.c_title,title);
    ee.setText(this.c_text,text);
    this.c_btnOk.v_style = bStyle;
    this.c_btnOk.init(0);
    this.onComplete = onComplete;
    ee.setVisible(this.parentNode, true);
    ee.setVisible(this, true);
    document.addEventListener("keydown", this.onKeyDown);
}

sender.close = function() {
    ee.setVisible(this, false);
    ee.setVisible(this.parentNode, false);
    document.removeEventListener("keydown", this.onKeyDown);
}

sender.onKeyDown = function(event) {
    event = event || window.event;
    if (event.keyCode == 13) {
        sender.close();
        sender.onComplete();        
    }
}


if ("ontouchstart" in window) {
    sender.addEventListener("touchstart", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchend", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchmove", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
}</onCreate>
      <sizeRatio>0.587743732590529</sizeRatio>
      <top>292</top>
      <topRatio>0.366834170854271</topRatio>
      <width>359</width>
      <widthRatio>0.330266789328427</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel30/panel31">
      <ee_LocalName>c_text</ee_LocalName>
      <fontColor>657786</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <height>78</height>
      <heightRatio>0.369668246445498</heightRatio>
      <layerVisible>false</layerVisible>
      <left>26</left>
      <leftRatio>0.0724233983286908</leftRatio>
      <sizeRatio>0.252427184466019</sizeRatio>
      <text>此操作不可撤消，并且将从你的个人资料、关注你的任何账号的时间线以及 GET搜索结果中移除。</text>
      <top>54</top>
      <topRatio>0.255924170616114</topRatio>
      <width>309</width>
      <widthRatio>0.860724233983287</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel30/panel32">
      <dockX>center</dockX>
      <ee_LocalName>c_title</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>202326</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>14</fontSize>
      <height>39</height>
      <heightRatio>0.184834123222749</heightRatio>
      <layerVisible>false</layerVisible>
      <left>25</left>
      <leftRatio>0.0696378830083565</leftRatio>
      <sizeRatio>0.12621359223301</sizeRatio>
      <text>删除发言</text>
      <top>18</top>
      <topRatio>0.0853080568720379</topRatio>
      <width>309</width>
      <widthRatio>0.860724233983287</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel30/panel33">
      <backgroundColor>00C0C0</backgroundColor>
      <cursor>move</cursor>
      <dockX>fill</dockX>
      <dockY>top</dockY>
      <height>65</height>
      <heightRatio>0.308056872037915</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <onCreate><![CDATA[sender.v_down = false;
sender.style.backgroundColor = "rgba(255,255,255,0.01)";
if ("ontouchstart" in window) {
    sender.addEventListener("touchstart", function(event) {
        var sender = event.target;
        sender.v_down = true;
        sender.v_x = event.changedTouches[0].screenX;
        sender.v_y = event.changedTouches[0].screenY;
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchend", function(event) {
        var sender = event.target;
        sender.v_down = false;
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchmove", function(event) {
        var sender = event.target;
        if (sender.v_down) {
            var dx = event.changedTouches[0].screenX - sender.v_x;
            var dy = event.changedTouches[0].screenY - sender.v_y;
            var rect = eb.getDivRect(sender.parentNode);
            var rectP = eb.getDivRect(sender.parentNode.parentNode);
            if (rect.x+dx<0) dx = null;
            if (rect.x+dx+rect.w>=rectP.w) dx = null;
            if (dx!=null) {
                sender.v_x = event.changedTouches[0].screenX;
                dx = rect.x+dx;
            }
            if (rect.y+dy<0) dy = null;
            if (rect.y+dy+rect.h>=rectP.h) dy = null;
            if (dy!=null) {
                sender.v_y = event.changedTouches[0].screenY ;
                dy = rect.y+dy;
            }
            ee.setRect(sender.parentNode, dx, dy, null, null);
        }
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
} else {
    sender.onpointerdown = function(event) {
        var sender = event.target;
        sender.v_down = true;
        sender.v_x = event.clientX;
        sender.v_y = event.clientY;
        sender.setPointerCapture(event.pointerId);
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
    sender.onpointerup = function(event) {
        var sender = event.target;
        sender.v_down = false;
        sender.releasePointerCapture(event.pointerId);
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
    sender.onpointermove = function(event) {
        var sender = event.target;
        if (sender.v_down) {
            var dx = event.clientX - sender.v_x;
            var dy = event.clientY - sender.v_y;
            var rect = eb.getDivRect(sender.parentNode);
            var rectP = eb.getDivRect(sender.parentNode.parentNode);
            if (rect.x+dx<0) dx = null;
            if (rect.x+dx+rect.w>=rectP.w) dx = null;
            if (dx!=null) {
                sender.v_x = event.clientX;
                dx = rect.x+dx;
            }
            if (rect.y+dy<0) dy = null;
            if (rect.y+dy+rect.h>=rectP.h) dy = null;
            if (dy!=null) {
                sender.v_y = event.clientY;
                dy = rect.y+dy;
            }
            ee.setRect(sender.parentNode, dx, dy, null, null);
        }
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
}




]]></onCreate>
      <sizeRatio>0.181058495821727</sizeRatio>
      <top>0</top>
      <width>359</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel30/panel34">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <dockX>center</dockX>
      <ee_LocalName>c_btnOk</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <height>40</height>
      <heightRatio>0.18957345971564</heightRatio>
      <layerVisible>false</layerVisible>
      <left>116</left>
      <leftRatio>0.323119777158774</leftRatio>
      <onClick>sender.parentNode.close();
sender.parentNode.onComplete();</onClick>
      <onCreate>var text = ee.getText(sender);
sender.v_style = [
    new g5.BStyle("","#e8f5fe","#d2ecfc",text,text,text,"#1da1f2","#1da1f2","#1da1f2","#1da1f2"),
];

sender.init = function(index) {
    this.v_index = index;
    this.style.backgroundColor = this.v_style[index].color1;
    ee.setText(this, this.v_style[index].text1);
    ee.setTextColor(this, this.v_style[index].tColor1);
    if (this.v_style[index].bdColor=="") {
        this.style.borderWidth = "0px";
    } else {
        this.style.boxSizing="border-box";
        this.style.borderWidth = "1px";
        this.style.borderColor = this.v_style[index].bdColor;
        this.style.borderStyle = "solid";
        eb.setDivRect(this.label.parentNode,-1,-1,null,null);
    }
    this.style.borderRadius = parseInt(eb.getDivRect(this).h/2) + "px";
}

ee.setOnMouseEnter(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    ee.setText(sender, s.text2);
    ee.setTextColor(sender, s.tColor2);
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    ee.setText(sender, s.text1);
    ee.setTextColor(sender, s.tColor1);
});
sender.eeMouseDown = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color3;
    setTimeout(function() {
        ee.setText(sender, s.text3);
    }, 1000); 
    ee.setTextColor(sender, s.tColor3);
}
sender.eeMouseUp = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    setTimeout(function() {
        ee.setText(sender, s.text2);
    }, 1000); 
    ee.setTextColor(sender, s.tColor2);
}
eb.initMouseEvent(sender);

sender.init(0);







</onCreate>
      <sizeRatio>0.317460317460317</sizeRatio>
      <text>确认</text>
      <top>142</top>
      <topRatio>0.672985781990521</topRatio>
      <width>126</width>
      <widthRatio>0.350974930362117</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel30/panel35">
      <cursor>pointer</cursor>
      <dockX>right</dockX>
      <dockY>top</dockY>
      <height>36</height>
      <heightRatio>0.170616113744076</heightRatio>
      <layerVisible>false</layerVisible>
      <left>305</left>
      <leftRatio>0.84958217270195</leftRatio>
      <onClick>sender.parentNode.close();</onClick>
      <onCreate><![CDATA[ee.setText(sender,
    "<svg viewBox=\"0 0 24 24\" style=\"font-size: 13px;height:1.5em;width:1.5em;margin:5px 8px 8px 5px;fill:rgba(80,80,80,1);vertical-align:middle;\">" + g5.icon.close + "</svg>"
);
sender.style.borderRadius = "50%";
ee.setOnMouseEnter(sender, function(sender,event) {
    sender.style.backgroundColor = "#dfeffa";
});    
ee.setOnMouseLeave(sender, function(sender,event) {
    sender.style.backgroundColor = "";
});
]]></onCreate>
      <outerRight>18</outerRight>
      <outerTop>15</outerTop>
      <sizeRatio>1</sizeRatio>
      <top>15</top>
      <topRatio>0.0710900473933649</topRatio>
      <width>36</width>
      <widthRatio>0.100278551532033</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel36">
      <ani2Alpha>disappear:渐变消失</ani2Alpha>
      <ani2Size>pointDisappear:收缩消失成点</ani2Size>
      <aniAlpha>appear:渐变出现</aniAlpha>
      <backgroundColor>FFFFFF</backgroundColor>
      <backgroundImgMode>fill</backgroundImgMode>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>center</dockX>
      <dockY>center</dockY>
      <ee_LocalName>a10</ee_LocalName>
      <height>209</height>
      <heightRatio>0.262562814070352</heightRatio>
      <layerName>通用字符串输入窗口</layerName>
      <layerVisible>false</layerVisible>
      <left>364</left>
      <leftRatio>0.334866605335787</leftRatio>
      <onAni2End>ee.setVisible(ee.getControl("panel112"), false);
</onAni2End>
      <onClick>        window.event? window.event.cancelBubble = true : event.stopPropagation();
</onClick>
      <onCreate>sender.style.boxSizing="border-box";
sender.style.borderWidth = "1px";
sender.style.borderColor = "#a0a0a0";
sender.style.borderStyle = "solid";
sender.style.borderRadius = "10px";
sender.style.boxShadow = "5px 5px 15px #808080";

sender.show = function(title,text,inputHint,defaultValue,bStyle1,bStyle2,onComplete,onButton1) {
    ee.setText(this.c_title,title);
    ee.setText(this.c_p1.c_text,text);
    this.c_btnCancel.v_style = bStyle1;
    this.c_btnCancel.init(0);
    this.c_btnOK.v_style = bStyle2;
    this.c_btnOK.init(0);
    ee.setText(this.c_p1.c_edit, inputHint);
    this.c_p1.c_edit._inputHint = inputHint;
    ee.setEditText(this.c_p1.c_edit, defaultValue);
    this.onComplete = onComplete;
    this.onButton1 = onButton1;
    ee.setVisible(this.parentNode, true);
    ee.setVisible(this, true);
    document.addEventListener("keydown", this.onKeyDown);
}

sender.close = function() {
    ee.setVisible(this, false);
    ee.setVisible(this.parentNode, false);
    document.removeEventListener("keydown", this.onKeyDown);
}

sender.onKeyDown = function(event) {
    event = event || window.event;
    if (event.keyCode == 13) {
        sender.close();
        if (sender.onComplete) sender.onComplete(ee.getEditText(ee.getControl("edit1")));
    } else if (event.keyCode == 27) {
        sender.parentNode.close();
        if (!eb.isEmpty(sender.onButton1)) {
            sender.onButton1();
            sender.onButton1 = null;
        }
    }
}

if ("ontouchstart" in window) {
    sender.addEventListener("touchmove", function(event) {
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
}

</onCreate>
      <sizeRatio>0.583798882681564</sizeRatio>
      <top>293</top>
      <topRatio>0.368090452261307</topRatio>
      <width>358</width>
      <widthRatio>0.329346826126955</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel36/panel38">
      <dockX>center</dockX>
      <ee_LocalName>c_title</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>202326</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>14</fontSize>
      <height>39</height>
      <heightRatio>0.186602870813397</heightRatio>
      <layerVisible>false</layerVisible>
      <left>50</left>
      <leftRatio>0.139664804469274</leftRatio>
      <onCreate>sender.label.style.tableLayout = "fixed";
sender.label.rows[0].cells[0].style.overflow = "hidden";
sender.label.rows[0].cells[0].style.textOverflow = "ellipsis";
sender.label.rows[0].cells[0].style.whiteSpace = "nowrap";
</onCreate>
      <sizeRatio>0.151750972762646</sizeRatio>
      <text>删除发言</text>
      <top>18</top>
      <topRatio>0.0861244019138756</topRatio>
      <width>257</width>
      <widthRatio>0.717877094972067</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel36/panel39">
      <backgroundColor>00C0C0</backgroundColor>
      <cursor>move</cursor>
      <dockX>fill</dockX>
      <dockY>top</dockY>
      <height>65</height>
      <heightRatio>0.311004784688995</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <onCreate><![CDATA[sender.v_down = false;
sender.style.backgroundColor = "rgba(255,255,255,0.01)";
if ("ontouchstart" in window) {
    sender.addEventListener("touchstart", function(event) {
        var sender = event.target;
        sender.v_down = true;
        sender.v_x = event.changedTouches[0].screenX;
        sender.v_y = event.changedTouches[0].screenY;
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchend", function(event) {
        var sender = event.target;
        sender.v_down = false;
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
    sender.addEventListener("touchmove", function(event) {
        var sender = event.target;
        if (sender.v_down) {
            var dx = event.changedTouches[0].screenX - sender.v_x;
            var dy = event.changedTouches[0].screenY - sender.v_y;
            var rect = eb.getDivRect(sender.parentNode);
            var rectP = eb.getDivRect(sender.parentNode.parentNode);
            if (rect.x+dx<0) dx = null;
            if (rect.x+dx+rect.w>=rectP.w) dx = null;
            if (dx!=null) {
                sender.v_x = event.changedTouches[0].screenX;
                dx = rect.x+dx;
            }
            if (rect.y+dy<0) dy = null;
            if (rect.y+dy+rect.h>=rectP.h) dy = null;
            if (dy!=null) {
                sender.v_y = event.changedTouches[0].screenY ;
                dy = rect.y+dy;
            }
            ee.setRect(sender.parentNode, dx, dy, null, null);
        }
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    });
} else {
    sender.onpointerdown = function(event) {
        var sender = event.target;
        sender.v_down = true;
        sender.v_x = event.clientX;
        sender.v_y = event.clientY;
        sender.setPointerCapture(event.pointerId);
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
    sender.onpointerup = function(event) {
        var sender = event.target;
        sender.v_down = false;
        sender.releasePointerCapture(event.pointerId);
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
    sender.onpointermove = function(event) {
        var sender = event.target;
        if (sender.v_down) {
            var dx = event.clientX - sender.v_x;
            var dy = event.clientY - sender.v_y;
            var rect = eb.getDivRect(sender.parentNode);
            var rectP = eb.getDivRect(sender.parentNode.parentNode);
            if (rect.x+dx<0) dx = null;
            if (rect.x+dx+rect.w>=rectP.w) dx = null;
            if (dx!=null) {
                sender.v_x = event.clientX;
                dx = rect.x+dx;
            }
            if (rect.y+dy<0) dy = null;
            if (rect.y+dy+rect.h>=rectP.h) dy = null;
            if (dy!=null) {
                sender.v_y = event.clientY;
                dy = rect.y+dy;
            }
            ee.setRect(sender.parentNode, dx, dy, null, null);
        }
        window.event? window.event.cancelBubble = true : event.stopPropagation();
        event.returnValue = false;
        return false;
    }
}




]]></onCreate>
      <sizeRatio>0.181564245810056</sizeRatio>
      <top>0</top>
      <width>358</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel36/panel40">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <ee_LocalName>c_btnCancel</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>35</height>
      <heightRatio>0.167464114832536</heightRatio>
      <layerVisible>false</layerVisible>
      <left>46</left>
      <leftRatio>0.128491620111732</leftRatio>
      <onClick>sender.parentNode.parentNode.close();
if (!eb.isEmpty(sender.parentNode.onButton1)) {
    sender.parentNode.onButton1();
    sender.parentNode.onButton1 = null;
}
</onClick>
      <onCreate>var text = ee.getText(sender);
sender.v_style = [
    new g5.BStyle("","#e8f5fe","#d2ecfc",text,text,text,"#1da1f2","#1da1f2","#1da1f2","#1da1f2"),
];

sender.init = function(index) {
    this.v_index = index;
    this.style.backgroundColor = this.v_style[index].color1;
    ee.setText(this, this.v_style[index].text1);
    ee.setTextColor(this, this.v_style[index].tColor1);
    if (this.v_style[index].bdColor=="") {
        this.style.borderWidth = "0px";
    } else {
        this.style.boxSizing="border-box";
        this.style.borderWidth = "1px";
        this.style.borderColor = this.v_style[index].bdColor;
        this.style.borderStyle = "solid";
        eb.setDivRect(this.label.parentNode,-1,-1,null,null);
    }
    this.style.borderRadius = parseInt(eb.getDivRect(this).h/2) + "px";
}

ee.setOnMouseEnter(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    ee.setText(sender, s.text2);
    ee.setTextColor(sender, s.tColor2);
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    ee.setText(sender, s.text1);
    ee.setTextColor(sender, s.tColor1);
});
sender.eeMouseDown = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color3;
    setTimeout(function() {
        ee.setText(sender, s.text3);
    }, 1000); 
    ee.setTextColor(sender, s.tColor3);
}
sender.eeMouseUp = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    setTimeout(function() {
        ee.setText(sender, s.text2);
    }, 1000); 
    ee.setTextColor(sender, s.tColor2);
}
eb.initMouseEvent(sender);

sender.init(0);







</onCreate>
      <sizeRatio>0.277777777777778</sizeRatio>
      <text>取消</text>
      <top>155</top>
      <topRatio>0.741626794258373</topRatio>
      <width>126</width>
      <widthRatio>0.35195530726257</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel36/panel41">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <ee_LocalName>c_btnOK</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>35</height>
      <heightRatio>0.167464114832536</heightRatio>
      <layerVisible>false</layerVisible>
      <left>195</left>
      <leftRatio>0.544692737430168</leftRatio>
      <onClick>sender.parentNode.parentNode.close();
sender.parentNode.onComplete(ee.getEditText(ee.getControl("edit1")));</onClick>
      <onCreate>var text = ee.getText(sender);
sender.v_style = [
    new g5.BStyle("","#e8f5fe","#d2ecfc",text,text,text,"#1da1f2","#1da1f2","#1da1f2","#1da1f2"),
];

sender.init = function(index) {
    this.v_index = index;
    this.style.backgroundColor = this.v_style[index].color1;
    ee.setText(this, this.v_style[index].text1);
    ee.setTextColor(this, this.v_style[index].tColor1);
    if (this.v_style[index].bdColor=="") {
        this.style.borderWidth = "0px";
    } else {
        this.style.boxSizing="border-box";
        this.style.borderWidth = "1px";
        this.style.borderColor = this.v_style[index].bdColor;
        this.style.borderStyle = "solid";
        eb.setDivRect(this.label.parentNode,-1,-1,null,null);
    }
    this.style.borderRadius = parseInt(eb.getDivRect(this).h/2) + "px";
}

ee.setOnMouseEnter(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    ee.setText(sender, s.text2);
    ee.setTextColor(sender, s.tColor2);
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    ee.setText(sender, s.text1);
    ee.setTextColor(sender, s.tColor1);
});
sender.eeMouseDown = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color3;
    setTimeout(function() {
        ee.setText(sender, s.text3);
    }, 1000); 
    ee.setTextColor(sender, s.tColor3);
}
sender.eeMouseUp = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    setTimeout(function() {
        ee.setText(sender, s.text2);
    }, 1000); 
    ee.setTextColor(sender, s.tColor2);
}
eb.initMouseEvent(sender);

sender.init(0);







</onCreate>
      <sizeRatio>0.277777777777778</sizeRatio>
      <text>确认</text>
      <top>155</top>
      <topRatio>0.741626794258373</topRatio>
      <width>126</width>
      <widthRatio>0.35195530726257</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel36/panel42">
      <cursor>pointer</cursor>
      <dockX>right</dockX>
      <dockY>top</dockY>
      <height>36</height>
      <heightRatio>0.172248803827751</heightRatio>
      <layerVisible>false</layerVisible>
      <left>304</left>
      <leftRatio>0.849162011173184</leftRatio>
      <onClick>sender.parentNode.parentNode.close();</onClick>
      <onCreate><![CDATA[ee.setText(sender,
    "<svg viewBox=\"0 0 24 24\" style=\"font-size: 13px;height:1.5em;width:1.5em;margin:5px 8px 8px 5px;fill:rgba(80,80,80,1);vertical-align:middle;\">" + g5.icon.close + "</svg>"
);
sender.style.borderRadius = "50%";
ee.setOnMouseEnter(sender, function(sender,event) {
    sender.style.backgroundColor = "#dfeffa";
});    
ee.setOnMouseLeave(sender, function(sender,event) {
    sender.style.backgroundColor = "";
});
]]></onCreate>
      <outerRight>18</outerRight>
      <outerTop>15</outerTop>
      <sizeRatio>1</sizeRatio>
      <top>15</top>
      <topRatio>0.0717703349282297</topRatio>
      <width>36</width>
      <widthRatio>0.100558659217877</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel36/panel43">
      <backgroundColor>F5F8FA</backgroundColor>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>fill</dockX>
      <ee_LocalName>c_p1</ee_LocalName>
      <height>66</height>
      <heightRatio>0.315789473684211</heightRatio>
      <layerVisible>false</layerVisible>
      <left>10</left>
      <leftRatio>0.0279329608938547</leftRatio>
      <onCreate>sender.style.borderRadius = "4px";
</onCreate>
      <outerLeft>10</outerLeft>
      <outerRight>10</outerRight>
      <outerTop>10</outerTop>
      <sizeRatio>0.195266272189349</sizeRatio>
      <top>75</top>
      <topRatio>0.358851674641148</topRatio>
      <width>338</width>
      <widthRatio>0.94413407821229</widthRatio>
    </control>
    <control type="Edit" pathname="/divRoot/divroot1/panel11/panel36/panel43/edit2">
      <backgroundSkin>empty</backgroundSkin>
      <dockX>fill</dockX>
      <ee_LocalName>c_edit</ee_LocalName>
      <fontColor>808080</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <hAlign>left</hAlign>
      <height>41</height>
      <heightRatio>0.621212121212121</heightRatio>
      <inputFont>微软雅黑</inputFont>
      <inputFontSize>14</inputFontSize>
      <layerVisible>false</layerVisible>
      <left>15</left>
      <leftRatio>0.0443786982248521</leftRatio>
      <outerLeft>15</outerLeft>
      <outerRight>15</outerRight>
      <sizeRatio>0.133116883116883</sizeRatio>
      <text>输入提示位置</text>
      <top>25</top>
      <topRatio>0.378787878787879</topRatio>
      <width>308</width>
      <widthRatio>0.911242603550296</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel36/panel43/panel44">
      <backgroundColor>657786</backgroundColor>
      <backgroundImgMode>fill</backgroundImgMode>
      <bgColorEnabled>true</bgColorEnabled>
      <dockX>fill</dockX>
      <dockY>bottom</dockY>
      <fontColor>808080</fontColor>
      <fontFamily>黑体</fontFamily>
      <fontSizeAuto>25</fontSizeAuto>
      <hAlign>left</hAlign>
      <height>2</height>
      <heightRatio>0.0303030303030303</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <sizeRatio>0.00591715976331361</sizeRatio>
      <top>64</top>
      <topRatio>0.96969696969697</topRatio>
      <width>338</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel11/panel36/panel43/panel45">
      <dockX>fill</dockX>
      <ee_LocalName>c_text</ee_LocalName>
      <fontBold>true</fontBold>
      <fontColor>657786</fontColor>
      <fontFamily>微软雅黑</fontFamily>
      <fontSize>12</fontSize>
      <hAlign>left</hAlign>
      <height>31</height>
      <heightRatio>0.46969696969697</heightRatio>
      <layerVisible>false</layerVisible>
      <left>18</left>
      <leftRatio>0.0532544378698225</leftRatio>
      <outerLeft>18</outerLeft>
      <outerRight>15</outerRight>
      <sizeRatio>0.101639344262295</sizeRatio>
      <text>输入字符串说明</text>
      <top>0</top>
      <width>305</width>
      <widthRatio>0.902366863905325</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel46">
      <__U_editFontColor type="string">000000</__U_editFontColor>
      <__U_editFontFamily type="string">'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</__U_editFontFamily>
      <__U_editFontSize type="string">16pt</__U_editFontSize>
      <__U_editMaxY type="string">300px</__U_editMaxY>
      <__U_onCurPosChange-sender-oldPos-newPos type="string">sender.processUserName();</__U_onCurPosChange-sender-oldPos-newPos>
      <__U_onFocusChange-sender-isFocus type="string" />
      <__U_onHeightChange-sender-oldH-newH type="string" />
      <__U_onInputChange-sender-key-oldText-newText-oldHtml-newHtml type="string"><![CDATA[var text = ee.getEditText(sender.c_edit);

if (newText.split("\n").length-1>20) {
    return false;
}

var cp = sender.getCurPosAbs();
var sTemp = sender.convertHtml(newText);
var ptn = /@([a-zA-Z0-9_\-]{2,20})/gim;
sTemp = sTemp.replace(ptn, "<span style='color:#1da1f2'>@$1</span>");
sender.c_edit.innerHTML = sTemp;
sender.setCurPosAbs(cp);

sender.processUserName();


]]></__U_onInputChange-sender-key-oldText-newText-oldHtml-newHtml>
      <backgroundColor>FFFFFF</backgroundColor>
      <bgColorEnabled>true</bgColorEnabled>
      <ee_LocalName>c_edit</ee_LocalName>
      <height>120</height>
      <heightRatio>0.150753768844221</heightRatio>
      <layerVisible>false</layerVisible>
      <left>263</left>
      <leftRatio>0.241950321987121</leftRatio>
      <note>富文本编辑框</note>
      <onCreate><![CDATA[//public
sender.style.boxSizing="border-box";
sender.style.borderWidth = "1px";
sender.style.borderColor = "#a0a0a0";
sender.style.borderStyle = "solid";
sender.style.borderRadius = "5px";
sender.style.boxShadow = "1px 1px 2px #b0b0b0";

sender.currentText = "";
sender.currentHtml = "";
sender.currentCurPos = 0;
sender.getEditText = function() {
    return this.getPlanText().replace(/\xA0/g, " ");
}
sender.setEditText = function(text, inOnChange) {
    this.c_edit.innerHTML = this.convertHtml(text);
    if (!inOnChange) this.f_onChange();
}

sender.setEditHtm = function(htmlText, inOnChange) {
    this.c_edit.innerHTML = text;
    if (!inOnChange) this.f_onChange();
}

sender.convertHtml = function(text) {
    var textS = text.replace(/ /g, "\xA0").split("\n");
    text = "";
    for (var i=0; i<textS.length; i++) {
        if (textS[i].length<=0) {
            text += "<div><br\></div>";
        } else {
            text += "<div>" + textS[i] + "</div>";
        }
    }
    return text;
}


//protected
sender.c_label = sender.eeChildren[0];
sender.c_edit = sender.eeChildren[1];

//private
var e = sender.c_edit;
e.contentEditable = true;
e.style.border = "none";
e.style.outline = "none";
e.style.height = "";
e.style.minHeight = (eb.getDivRectSetting(sender).h - e.outerTop - e.outerBottom) + "px";
e.style.maxHeight = sender.editMaxY;
e.style.overflowY = "auto";
e.style.fontFamily = sender.editFontFamily;
e.style.fontSize = sender.editFontSize;
e.style.color = "#" + sender.editFontColor;
e.style.wordBreak = "break-all";
e.style.wordWrap = "break-word";
e.style.whiteSpace = "normal";
e.innerHTML = "";
eb.setDivRect(e, e.outerLeft, e.outerTop, eb.getDivRectSetting(sender).w - e.outerLeft - e.outerRight, null);
sender.v_lastH = eb.getDivRectSetting(sender).h;

sender.refreshH = function() {
    if (this.v_lastH!=eb.getDivRect(sender.c_edit).h+e.outerTop+e.outerBottom) {
        var lastH = this.v_lastH;
        this.v_lastH = eb.getDivRect(sender.c_edit).h+e.outerTop+e.outerBottom;
        ee.setRect(this,null,null,null,this.v_lastH);
        sender.onHeightChange(this, lastH, this.v_lastH);
    }
}

sender.onSizeChange = function(sender, rectOld, rectNew) {
    eb.setDivRect(sender.c_edit, sender.c_edit.outerLeft, sender.c_edit.outerTop,
        rectNew.w - sender.c_edit.outerLeft - sender.c_edit.outerRight, null);
}

sender.f_onChange = function() {
    if (sender.v_isIme) {
        ee.setVisible(this.c_label, this.getPlanText().length<=0); 
        return;
    }
    this.refreshH();
    var oldText = this.currentText;
    var oldHtml = this.currentHtml;
    this.currentText = this.getPlanText().replace(/\xA0/g, " ");
    this.currentHtml = this.c_edit.innerHTML;
    ee.setVisible(this.c_label, (!this.c_edit.innerText) || (this.c_edit.innerText.trim().length<=0)); 
    if (this.onInputChange(this, this.lastKey, oldText, this.currentText, oldHtml, this.currentHtml)==false) {
        this.setEditText(oldHtml, true);
        this.currentHtml = oldHtml;
        this.currentText = oldText;
        this.setCurPosAbs(this.currentCurPos);
    }
}

sender.CurPos = function() {
    this.elmIndex = new Array();
    this.curPos = 0;
}
   
sender.getCurPos = function() {
    var curPos = new this.CurPos();
    var sel, range;
    if (window.getSelection) {
        sel = window.getSelection();
        if (sel.rangeCount) {
            range = sel.getRangeAt(0);
            var node = range.commonAncestorContainer;
            while (node.parentNode) {
                var i;
                for (i=0; i<node.parentNode.childNodes.length; i++) {
                    if (node.parentNode.childNodes[i] == node) {
                        curPos.elmIndex.push(i);
                        break;
                    }
                }
                node = node.parentNode;
                if (node == this.c_edit) break;
            }
            curPos.curPos = range.endOffset;
        }
    } else if (document.selection &amp;&amp; document.selection.createRange) {
        console.log("not perform");
        range = document.selection.createRange();
        if (range.parentElement() == this.c_edit) {
            var tempEl = document.createElement("span");
            this.c_edit.insertBefore(tempEl, this.c_edit.firstChild);
            var tempRange = range.duplicate();
            tempRange.moveToElementText(tempEl);
            tempRange.setEndPoint("EndToEnd", range);
            caretPos = tempRange.text.length;
        }
    }
    return curPos;
}

sender.setCurPos = function(curPos) {
    var range = document.createRange()
    var sel = window.getSelection()
    var node = this.c_edit;
    for (var i=curPos.elmIndex.length-1; i>=0; i--) {
        if (!node.childNodes[curPos.elmIndex[i]]) break;
        node = node.childNodes[curPos.elmIndex[i]];
    }
    range.setStart(node, curPos.curPos);
    range.collapse(true)
    sel.removeAllRanges()
    sel.addRange(range)
}

sender.getCurPosAbs = function() {
    var curPos = this.getCurPos();
    var nodeSel = this.c_edit;
    for (var i=curPos.elmIndex.length-1; i>=0; i--) {
        if (!nodeSel.childNodes[curPos.elmIndex[i]]) break;
        nodeSel = nodeSel.childNodes[curPos.elmIndex[i]];
    }
    var pos = 0;
    var addPos = function(node) {
        for (var i=0; i<node.childNodes.length; i++) {
            if (node.childNodes[i] == nodeSel) {
                if (nodeSel.nodeName.toUpperCase() =="DIV") pos++;
                pos += curPos.curPos;
                return true;
            }
            if (node.childNodes[i].nodeName.toUpperCase() == "DIV") {
                if (i>0) pos++;
                if (addPos(node.childNodes[i])) return true;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "BR") {
            } else if (node.childNodes[i].nodeName.toUpperCase() == "SPAN") {
                if (addPos(node.childNodes[i])) return true;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "#TEXT") {
                pos += node.childNodes[i].textContent.length;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "A") {
                pos += node.childNodes[i].textContent.length;
            }
        }
        return false;
    }
    addPos(this.c_edit);
    return pos;
}

sender.setCurPosAbs = function(absPos) {
    var pos = 0;
    var setNode, setPos;
    var addPos = function(node) {
        for (var i=0; i<node.childNodes.length; i++) {
            if (node.childNodes[i].nodeName.toUpperCase() == "DIV") {
                if (i>0) pos++;
                if (pos>=absPos) {
                    if (node.childNodes[i].childNodes.length>0) {
                        setNode = node.childNodes[i].childNodes[0];
                    } else {
                        setNode = node.childNodes[i];
                    }
                    setPos = 0;
                    return true;
                }
                if (addPos(node.childNodes[i])) return true;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "BR") {
            } else if (node.childNodes[i].nodeName.toUpperCase() == "SPAN") {
                if (addPos(node.childNodes[i])) return true;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "#TEXT") {
                if (pos+node.childNodes[i].textContent.length>=absPos) {
                    setNode = node.childNodes[i];
                    setPos = absPos - pos;
                    return true;
                }
                pos += node.childNodes[i].textContent.length;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "A") {
                if (pos+node.childNodes[i].textContent.length>=absPos) {
                    setNode = node.childNodes[i];
                    setPos = absPos - pos;
                    return true;
                }
                pos += node.childNodes[i].textContent.length;
            }
        }
        return false;
    }
    addPos(this.c_edit);
    var range = document.createRange()
    var sel = window.getSelection()
    range.setStart(setNode, setPos);
    range.collapse(true)
    sel.removeAllRanges()
    sel.addRange(range)
}

sender.getPlanText = function() {
    var text = "";
    var addPos = function(node) {
        for (var i=0; i<node.childNodes.length; i++) {
            if (node.childNodes[i].nodeName.toUpperCase() == "DIV") {
                if (i>0) text += "\n";
                addPos(node.childNodes[i]);
            } else if (node.childNodes[i].nodeName.toUpperCase() == "BR") {
            } else if (node.childNodes[i].nodeName.toUpperCase() == "SPAN") {
                text += node.childNodes[i].textContent;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "#TEXT") {
                text += node.childNodes[i].textContent;
            } else if (node.childNodes[i].nodeName.toUpperCase() == "A") {
                text += node.childNodes[i].textContent;
            } else {
                console.log("undefined node name: " + node.childNodes[i].nodeName);
            }
        }
        return false;
    }
    addPos(this.c_edit);
    return text;
}

e.onkeydown = function(event) {
    sender.lastCurPos = sender.getCurPos();
    sender.lastKey = {};
    sender.lastKey.key = event.key;
    sender.lastKey.keyCode = event.keyCode;
    sender.lastKey.shiftKey = event.shiftKey;
    sender.lastKey.ctrlKey = event.ctrlKey;
    sender.lastKey.altKey = event.altKey;
}

e.oninput = function(event) {
    sender.f_onChange();
}

e.onpaste = function() {
    //sender.f_onChange();
}

e.onfocus = function() {
    document.addEventListener("selectionchange", sender.f_onSelectionChange, false);
}

e.onblur = function() {
    document.removeEventListener("selectionchange", sender.f_onSelectionChange, false);
}

sender.f_onSelectionChange = function(event) {
    var oldPos = sender.currentCurPos;
    sender.currentCurPos = sender.getCurPosAbs();
    if (oldPos!=sender.currentCurPos) {
        if (sender.onCurPosChange) {
            sender.onCurPosChange(sender,oldPos,sender.currentCurPos);
        }
    }
}

sender.c_edit.addEventListener("compositionstart", function(event) {
    sender.v_isIme = true;
});

sender.c_edit.addEventListener("compositionupdate", function(event) {
    //console.log("ime update");
});

sender.c_edit.addEventListener("compositionend", function(event) {
    sender.v_isIme = false;
    sender.f_onChange();
});

sender.c_edit.addEventListener("touchstart", function(event) {
    window.event? window.event.cancelBubble = true : event.stopPropagation();
    return;
});

//user
sender.getUsername = function() {
    var newText = this.getEditText();
    var cp = this.getCurPosAbs();
    var i;
    for (i=cp-1; i>=0; i--) {
        if (newText.charAt(i)=="@") break;
    }
    if (i<0) return "";
    var pos = i;
    var userName = "";
    for (i=pos+1; i<=newText.length; i++) {
        var ch = newText.charAt(i);
        if ((ch>="a" &amp;&amp; ch<="z") ||
            (ch>="A" &amp;&amp; ch<="Z") ||
            (ch>="0" &amp;&amp; ch<="9") ||
            (ch=="_") || (ch=="-")) {
            userName += ch;
        } else break;
    }
    if (userName.length<2) return "";
    if (i<=cp-1) return "";
    userName = userName.substr(0,20);
    return userName;
}

sender.setUsername = function(username) {
    var cp = sender.getCurPosAbs();
    var newText = sender.getEditText();
    var i;
    for (i=cp-1; i>=0; i--) {
        if (newText.charAt(i)=="@") break;
    }
    if (i<0) return;
    var pos = i+1;
    for (i=pos; i<=newText.length; i++) {
        var ch = newText.charAt(i);
        if ((ch>="a" &amp;&amp; ch<="z") ||
            (ch>="A" &amp;&amp; ch<="Z") ||
            (ch>="0" &amp;&amp; ch<="9") ||
            (ch=="_") || (ch=="-")) {
        } else break;
    }
    if (i-pos<2) return;
    if (i<=cp-1) return;
    if (i-pos>20) i=20-pos;
    var s = newText.substr(0, pos);
    s += username;
    if (i>=newText.length) {
        s += " ";
    } else if (newText.charAt(i)=="\n") {
        s += " " + newText.substr(i);
    } else {
        s += newText.substr(i);
    }
    
    var sTemp = sender.convertHtml(s);
    var ptn = /@([a-zA-Z0-9_\-]{2,20})/gim;
    sTemp = sTemp.replace(ptn, "<span style='color:#1da1f2'>@$1</span>")
    sender.c_edit.innerHTML = sTemp;
    sender.setCurPosAbs(i+1);
}

sender.processUserName = function() {
    var userName = this.getUsername();
    return;
    if (userName.length>0) {
        //g5.p2.p34.show(sender, userName, function(username) {
        //    sender.setUsername(username);
        //    sender.c_edit.blur();
        //});
    } else g5.p2.p34.close();
}
]]></onCreate>
      <sizeRatio>0.43010752688172</sizeRatio>
      <top>33</top>
      <topRatio>0.0414572864321608</topRatio>
      <userProperty>//#P:editFontFamily|多行文字录入V2|'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif|string||用户输入文字的字体样式
//#P:editFontColor|多行文字录入V2|404040|color||用户输入文字的字体颜色
//#P:editFontSize|多行文字录入V2|12pt|string||用户输入文字的大小
//#P:editMaxY|多行文字录入V2|300px|string||编辑框最大高度
//#P:onHeightChange(sender,oldH,newH)|多行文字录入V2||jsMix||由于用户的输入导致编辑框产生的高度变化。sender:触发事件的控件，oldH:旧的高度，newH:新的高度
//#P:onInputChange(sender,key,oldText,newText,oldHtml,newHtml)|多行文字录入V2||jsMix||由于用户的输入导致内容改变，返回false表示取消本次修改。sender:触发事件的控件，key:用户按键，oldText:旧的内容，newText:新的内容，oldHtml:旧内容html形式，newHtml:新内容html形式
//#P:onFocusChange(sender,isFocus)|多行文字录入V2||jsMix||焦点发生变化。sender:触发事件的控件，isFocus:是否触发了焦点
//#P:onCurPosChange(sender,oldPos,newPos)|多行文字录入V2||jsMix||光标位置发生变化。sender:触发事件的控件，oldPos:原来的光标位置；newPos:新的光标位置；



</userProperty>
      <width>279</width>
      <widthRatio>0.256669733210672</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel46/panel47">
      <dockX>fill</dockX>
      <dockY>fill</dockY>
      <fontColor>9197A3</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>16</fontSize>
      <hAlign>left</hAlign>
      <height>120</height>
      <heightRatio>1</heightRatio>
      <layerVisible>false</layerVisible>
      <left>0</left>
      <note>c_label</note>
      <sizeRatio>0.43010752688172</sizeRatio>
      <text>有什么新鲜事？</text>
      <top>0</top>
      <vAlign>top</vAlign>
      <width>279</width>
      <widthRatio>1</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel46/panel48">
      <backgroundColor>FFFFFF</backgroundColor>
      <fontColor>404040</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <hAlign>left</hAlign>
      <height>26</height>
      <heightRatio>0.216666666666667</heightRatio>
      <layerVisible>false</layerVisible>
      <left>16</left>
      <leftRatio>0.0573476702508961</leftRatio>
      <note>c_edit</note>
      <outerBottom>2</outerBottom>
      <outerLeft>5</outerLeft>
      <outerRight>2</outerRight>
      <outerTop>2</outerTop>
      <sizeRatio>0.257425742574257</sizeRatio>
      <top>15</top>
      <topRatio>0.125</topRatio>
      <v_color1>FFC0C0</v_color1>
      <v_Str>as223</v_Str>
      <vAlign>top</vAlign>
      <width>101</width>
      <widthRatio>0.362007168458781</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel49">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>25</left>
      <leftRatio>0.0229990800367985</leftRatio>
      <onClick>ee.getControl("divRoot").popBlack.a7.show(
    "提示", "修改您的用户信息完成",
    [new g5.BStyle("#1da1f2","#1a91da","#1781c2","确定","确定","确定","#ffffff","#ffffff","#ffffff","")],
    //[new g5.BStyle("","#e8f5fe","#d2ecfc","确定","确定","确定","#1da1f2","#1da1f2","#1da1f2","#1da1f2")],
    function() {}
);</onClick>
      <onCreate><![CDATA[var text = ee.getText(sender);
g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc",text,text+">热点",text+">按下","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";







]]></onCreate>
      <sizeRatio>0.146666666666667</sizeRatio>
      <text>通用提示窗口</text>
      <top>33</top>
      <topRatio>0.0414572864321608</topRatio>
      <width>225</width>
      <widthRatio>0.206991720331187</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel50">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>25</left>
      <leftRatio>0.0229990800367985</leftRatio>
      <onClick>ee.getControl("divRoot").popBlack.a6.show(
    "删除确认",
    "在没有保存之前，本操作将不会生效，确认删除本记录吗？",
    [new g5.BStyle("#e6ecf0","#cfd4d8","#b8bdc0","取消","取消","取消","#14171a","#14171a","#14171a","")],
    [new g5.BStyle("#e0245e","#ca2055","#b31d4b","删除","确认删除","删除","#ffffff","#ffffff","#ffffff","")],
    function() {
    }
);            </onClick>
      <onCreate>g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc","","","","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";







</onCreate>
      <sizeRatio>0.203703703703704</sizeRatio>
      <text>通用确认窗口</text>
      <top>84</top>
      <topRatio>0.105527638190955</topRatio>
      <width>162</width>
      <widthRatio>0.149034038638454</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel51">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>25</left>
      <leftRatio>0.0229990800367985</leftRatio>
      <onClick><![CDATA[ee.getControl("divRoot").popBlack.a10.show(
    "输入", "付款类型：", "请在这里输入付款类型，长度2-6", "",
    [new g5.BStyle("","#e8f5fe","#d2ecfc","取消","取消","取消","#1da1f2","#1da1f2","#1da1f2","#1da1f2")],
    [new g5.BStyle("#1da1f2","#1a91da","#1781c2","确定","确定","确定","#ffffff","#ffffff","#ffffff","")],
    function(text) {
        if ((text.length>6) || (text.length<2)) {
            alert("输入错误,付款类型的长度应该在2-6个汉字或英文字符之间");
            return;
        }
    },
    function() {
    }
);]]></onClick>
      <onCreate>g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc","","","","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";



</onCreate>
      <sizeRatio>0.203703703703704</sizeRatio>
      <text>通用输入窗口</text>
      <top>136</top>
      <topRatio>0.170854271356784</topRatio>
      <width>162</width>
      <widthRatio>0.149034038638454</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel53">
      <cursor>pointer</cursor>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>48</left>
      <leftRatio>0.0441582336706532</leftRatio>
      <onClick>g5.writeLog("==============click===============");
if (!sender.v_count) sender.v_count=0;
sender.v_count++;
g5.writeLog(sender.v_count, true);
window.event? window.event.cancelBubble = true : event.stopPropagation();</onClick>
      <onCreate><![CDATA[sender.innerHTML = "<svg viewBox=\"0 0 26 26\" style=\"font-size: 13px;height:2.0em;width:2.0em;margin:5px 0px 0px 4px;color:rgb(29,161,242);fill: currentcolor;vertical-align:middle;\">"+g5.icon.back+"</svg>";
sender.style.borderRadius = "50%";
ee.setOnMouseEnter(sender, function(sender,event) {
    g5.writeLog("mouse enter..");    
    sender.style.backgroundColor = "#dfeffa";
});    
ee.setOnMouseLeave(sender, function(sender,event) {
    g5.writeLog("mouse leave");    
    sender.style.backgroundColor = "";
});
sender.eeMouseDown = function(sender, event, x, y) {
    g5.writeLog("touch start");    
    sender.style.backgroundColor = "#cfdfea";
}
sender.eeMouseUp = function(sender, event, x, y) {
    g5.writeLog("touch end");    
    if ("ontouchstart" in window) {
        sender.style.backgroundColor = "";
        g5.writeLog("touch end confirm");    
    } else {
        sender.style.backgroundColor = "#dfeffa";
    }
}
if ("ontouchstart" in window) {
    eb.addEvent(sender, "touchcancel", function (event) {
        sender.style.backgroundColor = "";
        g5.writeLog("touch cancel");
    }, false);
}

eb.initMouseEvent(sender);]]></onCreate>
      <sizeRatio>1</sizeRatio>
      <text><![CDATA[<]]></text>
      <top>294</top>
      <topRatio>0.369346733668342</topRatio>
      <width>33</width>
      <widthRatio>0.0303587856485741</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel54">
      <backgroundSkin>button1003</backgroundSkin>
      <ee_LocalName>c_log</ee_LocalName>
      <fontColor>FFFFFF</fontColor>
      <hAlign>left</hAlign>
      <height>388</height>
      <heightRatio>0.487437185929648</heightRatio>
      <layerVisible>false</layerVisible>
      <left>42</left>
      <leftRatio>0.0386384544618215</leftRatio>
      <onCreate>sender.style.position="fixed";</onCreate>
      <sizeRatio>2.03141361256545</sizeRatio>
      <top>340</top>
      <topRatio>0.42713567839196</topRatio>
      <vAlign>bottom</vAlign>
      <width>191</width>
      <widthRatio>0.175712971481141</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel54/panel55">
      <backgroundColor>FFFFFF</backgroundColor>
      <dockX>fill</dockX>
      <dockY>bottom</dockY>
      <fontColor>FFFFFF</fontColor>
      <hAlign>left</hAlign>
      <height>111</height>
      <heightRatio>0.286082474226804</heightRatio>
      <layerVisible>false</layerVisible>
      <left>5</left>
      <leftRatio>0.0261780104712042</leftRatio>
      <onClick>sender.setText("时间；浪费时间；理发师阿道夫；路上看见；浪费空间撒旦飞洒；了烦死拉进来是否；拉萨；附件；老师");</onClick>
      <onCreate>sender.setText = function(text) {
    ee.setRect(this,null,null,null,1);
    ee.setText(this, text);
    var h = eb.getDivRect(this.label).h;
    ee.setRect(this,null,null,null,h);
}
</onCreate>
      <outerBottom>5</outerBottom>
      <outerLeft>5</outerLeft>
      <outerRight>5</outerRight>
      <sizeRatio>0.613259668508287</sizeRatio>
      <text>======Log======</text>
      <top>272</top>
      <topRatio>0.701030927835052</topRatio>
      <vAlign>top</vAlign>
      <width>181</width>
      <widthRatio>0.947643979057592</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel54/panel56">
      <backgroundColor>9E9E8C</backgroundColor>
      <bgColorEnabled>true</bgColorEnabled>
      <cursor>move</cursor>
      <height>21</height>
      <heightRatio>0.0541237113402062</heightRatio>
      <layerVisible>false</layerVisible>
      <left>99</left>
      <leftRatio>0.518324607329843</leftRatio>
      <onCreate><![CDATA[sender.v_down = false;
if (sender.style.backgroundColor == "") {
    sender.style.backgroundColor = "rgba(255,255,255,0.01)";
}
sender.onpointerdown = function(event) {
    var sender = event.target;
    sender.v_down = true;
    sender.v_x = event.clientX;
    sender.v_y = event.clientY;
    sender.setPointerCapture(event.pointerId);
}
sender.onpointerup = function(event) {
    var sender = event.target;
    sender.v_down = false;
    sender.releasePointerCapture(event.pointerId);
}
sender.onpointermove = function(event) {
    var sender = event.target;
    if (sender.v_down) {
        var dx = event.clientX - sender.v_x;
        var dy = event.clientY - sender.v_y;
        var rect = eb.getDivRect(sender.parentNode);
        var rectP = eb.getDivRect(sender.parentNode.parentNode);
        if (rect.x+dx<0) dx = null;
        if (rect.x+dx+rect.w>=rectP.w) dx = null;
        if (dx!=null) {
            sender.v_x = event.clientX;
            dx = rect.x+dx;
        }
        if (rect.y+dy<0) dy = null;
        if (rect.y+dy+rect.h>=rectP.h) dy = null;
        if (dy!=null) {
            sender.v_y = event.clientY;
            dy = rect.y+dy;
        }
        ee.setRect(sender.parentNode, dx, dy, null, null);
    }
}


]]></onCreate>
      <sizeRatio>0.228260869565217</sizeRatio>
      <top>0</top>
      <width>92</width>
      <widthRatio>0.481675392670157</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel54/panel57">
      <backgroundSkin>button3a</backgroundSkin>
      <dockX>fill</dockX>
      <hAlign>left</hAlign>
      <height>70</height>
      <heightRatio>0.180412371134021</heightRatio>
      <layerVisible>false</layerVisible>
      <left>7</left>
      <leftRatio>0.0366492146596859</leftRatio>
      <outerLeft>7</outerLeft>
      <outerRight>4</outerRight>
      <sizeRatio>0.388888888888889</sizeRatio>
      <text>status</text>
      <top>28</top>
      <topRatio>0.0721649484536082</topRatio>
      <width>180</width>
      <widthRatio>0.942408376963351</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel58">
      <height>342</height>
      <heightRatio>0.42964824120603</heightRatio>
      <left>317</left>
      <leftRatio>0.291628334866605</leftRatio>
      <onClick>var ctx = sender.c_canvas.getContext("2d");
ctx.fillStyle = "rgb(200, 0, 0)";
ctx.fillRect(10, 10, 50, 50);

ctx.fillStyle = "rgba(0, 0, 200, 0.5)";
ctx.fillRect(30, 30, 50, 50);
</onClick>
      <onCreate>var c;
c = document.createElement("canvas");
c.style.position = "absolute";
c.style.width = "100%";
c.style.height = "100%";
sender.appendChild(c);
sender.c_canvas = c;

</onCreate>
      <sizeRatio>0.870229007633588</sizeRatio>
      <top>162</top>
      <topRatio>0.203517587939698</topRatio>
      <width>393</width>
      <widthRatio>0.361545538178473</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel59">
      <__U_blockSize type="string">1024</__U_blockSize>
      <__U_multiSelect type="string">true</__U_multiSelect>
      <__U_onComplete-sender-worker type="string" />
      <__U_onNotSupportUpload-sender type="string" />
      <__U_onStatusChange-sender type="string"><![CDATA[/*
var s = "";
for (var i = 0; i < sender.workers.length; i++) {
    var w = sender.workers[i];
    w.percent = parseInt(w.bytesSent/w.fileBlob.size*1000)/10 + "%";
    s += 
        w.status + "," +
        w.bytesSent + "," +
        w.percent + "," +
        w.id + "," +
        w.url + "<br/>";
}

ee.setText(ee.getControl("panel8"), s);
*/
ee.getControl("panel5").refresh(sender.workers);]]></__U_onStatusChange-sender>
      <backgroundColor>008080</backgroundColor>
      <cursor>pointer</cursor>
      <height>60</height>
      <heightRatio>0.0753768844221105</heightRatio>
      <layerVisible>false</layerVisible>
      <left>238</left>
      <leftRatio>0.218951241950322</leftRatio>
      <onClick>if (event.target.tagName.toUpperCase() == "INPUT") return;
sender.c_file.blur();
sender.c_file.click();
</onClick>
      <onCreate><![CDATA[sender.style.borderRadius = "20%";

ee.setOnMouseEnter(sender, function(sender,event) {
    sender.style.backgroundColor = "#dfeffa";
});    
ee.setOnMouseLeave(sender, function(sender,event) {
    sender.style.backgroundColor = "";
});
sender.eeMouseDown = function(sender,event,x,y) {
    sender.style.backgroundColor = "#daeaf5";
}
sender.eeMouseUp = function(sender,event,x,y) {
    if ("ontouchstart" in window) {
        sender.style.backgroundColor = "";
    } else {
        sender.style.backgroundColor = "#dfeffa";
    }
}
sender.eeOnClickCancel = function(sender,event) {
    sender.style.backgroundColor = "";
}
eb.initMouseEvent(sender);




//implementation
sender.workers = new Array();
sender.TWorker = function() {
    this.id = "";
    this.fileBlob = "";
    this.url = "";
    this.status = "new";
    this.bytesSent = 0;
    this.currentBlockSize = 0;
}
sender.v_currentIndex = 0;
sender.v_timer = null;
sender.v_status = "idle";
sender.f_start = function() {
    this.f_stop();
    this.v_timer =  setInterval(this.timeFragment, 20);
}
sender.f_stop = function() {
    if (!this.v_timer) return;
    clearInterval(this.v_timer);
    this.v_timer = null;
}
sender.f_setStatus = function(status) {
    if (sender.v_status == status) return;
    sender.v_status = status;
    if (sender.onStatusChange) sender.onStatusChange(sender);
}
sender.f_complete = function(worker) {
    for (var i=0; i<sender.workers.length; i++) {
        if (sender.workers[i] != worker) continue;
        sender.workers.splice(i,1);
        if (sender.onStatusChange) sender.onStatusChange(sender);        
        if (sender.onComplete) {
            sender.onComplete(sender, worker);
        }
        break;
    }
}

sender.timeFragment = function() {
    if (sender.workers.length<=0) {
        sender.f_stop();
        return;
    }
    if (sender.v_status != "idle") return;
    sender.v_currentIndex = (sender.v_currentIndex + 1) % sender.workers.length;
    var w = sender.workers[sender.v_currentIndex];
    if (w.id.length<=0) {
        w.status = "start";
        sender.f_setStatus("start");
        sender.taskSet.status = "s";
        sender.taskSet.fileSize = w.fileBlob.size;
        sender.taskSet.fileName = w.fileBlob.name;
        sender.taskSet();
    } else {
        w.currentBlockSize = Math.min(w.fileBlob.size - w.bytesSent, sender.blockSize*1024);
        if (w.currentBlockSize<=0) {
            sender.f_complete(w);
            return;
        }
        var reader = new FileReader();
        reader.onload = function (event) {
            sender.taskSet.status = "p";
            sender.taskSet.id = w.id;
            sender.taskSet.data = event.target.result;
            sender.taskSet();
        }
        w.status = "send";
        sender.f_setStatus("send");
        reader.readAsDataURL(w.fileBlob.slice(w.bytesSent, w.bytesSent + w.currentBlockSize));
    }
}

var c = document.createElement("input");
c.setAttribute("type", "file");
c.setAttribute("accept", "*/*");
c.setAttribute("style", "position:absolute;width:1px;height:1px;left:-200px;top:-200px;");
if (sender.multiSelect == "true") {
    c.setAttribute("multiple", "multiple");
} else {
    c.removeAttribute("multiple");
}
c.value = null;
sender.insertBefore(c, sender.childNodes[0]);
sender.c_file = c;

c.addEventListener("change", function() {
    if (window.File &amp;&amp; window.FileReader &amp;&amp; window.FileList &amp;&amp; window.Blob) {
        for (var i = 0; i < sender.c_file.files.length; i++) {
            var w = new sender.TWorker();
            w.fileBlob = sender.c_file.files[i];
            sender.workers.push(w);
            sender.f_start();
        }
        sender.c_file.value = null;
    } else {
        if (sender.onNotSupportUpload) sender.onNotSupportUpload(sender);
    }
});

]]></onCreate>
      <sizeRatio>0.923076923076923</sizeRatio>
      <taskSet><![CDATA[//status(s),fileSize,fileName >> id,url
//status(p),id,data
eio.appendString8(sender.taskSet.status);
if (sender.taskSet.status == "s") {
    eio.appendString8(sender.taskSet.fileSize + "");
    eio.appendString8(sender.taskSet.fileName);
} else if (sender.taskSet.status == "p") {
    eio.appendString8(sender.taskSet.id);
    eio.appendString32(sender.taskSet.data);
}
]]></taskSet>
      <taskSetReturn>var w = sender.workers[sender.v_currentIndex];
if (sender.taskSet.status == "s") {
    w.id = eio.readString8();
    w.url = eio.readString8();
    w.status = "idle";
} else if (sender.taskSet.status == "p") {
    w.bytesSent += w.currentBlockSize;
    w.status = "idle";
}

sender.f_setStatus("idle");

</taskSetReturn>
      <taskSetServer><![CDATA[var status = eio.readString8();
if (status == "s") {
    var fileSize = parseInt(eio.readString8());
    var fileName = eio.readString8();
    var newFileName = "c:\\www\\incoming\\" + fileName;
    var id = es.getGuid();
    es.globalMemory.set(id + "fileName", newFileName);
    es.globalMemory.set(id + "fileSize", fileSize + "");
    eio.appendString8(id);
    eio.appendString8(newFileName);
    es.fileDelete(newFileName);
} else if (status == "p") {
    var id = eio.readString8();
    var newFileName = es.globalMemory.get(id + "fileName");
    var fileSize = parseInt(es.globalMemory.get(id + "fileSize"));
    var buff = eio.readString32();
    var pos = buff.indexOf("base64,",0);
    if (pos<0) return;
    pos += "base64,".length;
    buff = buff.substr(pos, buff.length - pos);
    var size = es.saveBase64AsFileEx(newFileName, buff, true);
    if (size >= fileSize) {
        es.globalMemory.set(id + "fileName", "");
        es.globalMemory.set(id + "fileSize", "");
    }
}
return;



var sql,sqlResult;  
var getFileName = function(sn, sep) {
    sn = parseInt(sn);
    var f1 = (sn &amp; 0xFF000000) >> 24;
    var f2 = (sn &amp; 0x00fff000) >> 12;
    f1 = f1 ^ 0x59AE;
    f2 = f2 ^ 0xA93;
    sn = ((sn >> 7) | ((sn &amp; 0x7f)<<24)) ^ 0x5BC3A96A;
    return "usrb" + sep + "usr" + f1 + sep + f2 + sep + "p" + sn + ".jpg";
}

//onUploadStart(): newFilePathName,newFileName
var newFilePathName, newFileName;
sql = "select next value for dbo.SEQImageSn as Sn";
sqlResult = db.executeQuery("DB", sql);
if (sqlResult == null) {
    return;
}
db.read(sqlResult);
var sn = db.getInt32(sqlResult, "Sn");
newFileName = getFileName(sn, "/");
newFilePathName = "c:\\www\\incoming\\"+ getFileName(sn, "\\");
es.logCommon("upload test 1 file:" + newFilePathName);

//implementation
var buff = eio.readString32();
var pos = buff.indexOf("base64,",0);
if (pos<0) return;
pos += "base64,".length;
buff = buff.substr(pos, buff.length - pos);
es.saveBase64AsFile(newFilePathName, buff);
es.logCommon("upload test file:" + newFilePathName);


eio.appendString8("T");
eio.appendString16(newFileName);

]]></taskSetServer>
      <text>文件</text>
      <top>238</top>
      <topRatio>0.298994974874372</topRatio>
      <userProperty>//#P:blockSize|文件分段上传|1024|int||上传文件的分块大小，单位KB(1024bytes)
//#P:multiSelect|文件分段上传|true|enum|true,false|是否允许一次选择多个文件
//#P:onNotSupportUpload(sender)|文件分段上传||jsMix||不支持文件上传,参数sender:控件自身
//#P:onStatusChange(sender)|文件分段上传||jsMix||状态发生了变化,参数sender:控件自身
//#P:onComplete(sender,worker)|文件分段上传||jsMix||完成了一个任务，sender:控件自身,worker:任务

//#P1:editFontColor|多行文字录入V2|404040|color||用户输入文字的字体颜色
//#P1:editFontSize|多行文字录入V2|12pt|string||用户输入文字的大小
//#P1:editMaxY|多行文字录入V2|300px|string||编辑框最大高度
//#P1:onHeightChange(sender,oldH,newH)|多行文字录入V2||jsMix||由于用户的输入导致编辑框产生的高度变化。sender:触发事件的控件，oldH:旧的高度，newH:新的高度
//#P1:onInputChange(sender,key,oldText,newText,oldHtml,newHtml)|多行文字录入V2||jsMix||由于用户的输入导致内容改变，返回false表示取消本次修改。sender:触发事件的控件，key:用户按键，oldText:旧的内容，newText:新的内容，oldHtml:旧内容html形式，newHtml:新内容html形式
//#P1:onFocusChange(sender,isFocus)|多行文字录入V2||jsMix||焦点发生变化。sender:触发事件的控件，isFocus:是否触发了焦点
//#P1:onCurPosChange(sender,oldPos,newPos)|多行文字录入V2||jsMix||光标位置发生变化。sender:触发事件的控件，oldPos:原来的光标位置；newPos:新的光标位置；

</userProperty>
      <width>65</width>
      <widthRatio>0.0597976080956762</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel60">
      <backgroundColor>E0E0E0</backgroundColor>
      <height>189</height>
      <heightRatio>0.237437185929648</heightRatio>
      <left>252</left>
      <leftRatio>0.231830726770929</leftRatio>
      <onClick>if (!sender.workers) {
    sender.workers = new Array();
}
sender.workers.push(100);
sender.refresh(sender.workers);</onClick>
      <onCreate><![CDATA[sender.v_items = new Array();

sender.showBytes = function(bytes) {
    bytes = parseInt(bytes);
    var len = (bytes+"").length;
    if (len<=3) {
        return bytes + "B";
    }
    var b = ""; bytes = bytes + "";
    for (var i=0; i<bytes.length; i++) {
        if (i<3) {
            b += bytes.charAt(i);
        } else {
            b += "0";
        }
    }
    b = parseInt(b);
    if (len<=6) {
        return (b/1000) + "K";
    } else if (len<=9) {
        return (b/1000000) + "M";
    } else if (len<=12) {
        return (b/1000000000) + "G";
    } else return (b/1000000000000) + "T";
}


sender.refresh = function(workers) {
    while (sender.v_items.length<workers.length) {
        sender.appendItem();
    }
    while (sender.v_items.length>workers.length) {
        ee.removeControl(sender.v_items[sender.v_items.length-1]);
        sender.v_items.splice(sender.v_items.length-1, 1);
    }
    for (var i=0; i<workers.length; i++) {
        var w = workers[i];
        w.percent = w.bytesSent/w.fileBlob.size;
        eb.setDivRect(sender.v_items[i].c_p1,null,null,parseInt(sender.v_items[i].c_p1.v_w*w.percent),null);
        var s =
            parseInt(w.percent * 1000)/10 + "%" +
            "(" + sender.showBytes(w.bytesSent) + "/" + sender.showBytes(w.fileBlob.size) + ")" +
            " " + w.fileBlob.name;
        sender.v_items[i].c_text.innerText = s;
    }
    ee.tiledV(sender, 5, 0, 0);
    ee.tiledResizeV(sender,1);
}

sender.appendItem = function() {
    var w = eb.getDivRectSetting(sender).w;
    var c,root,cx=0;

    //root
    root = createPanel(sender, sender.id+"_root"+sender.v_items.length, "f0f3f8", 0, 0, w, 39);
    root.style.borderRadius = "5px";
    root.style.borderWidth = "1px";
    root.style.borderColor = "rgb(100,180,190)";
    root.style.borderStyle = "solid";
    root.style.boxSizing = "border-box";
    sender.v_items.push(root);
    
    //progress letter
    cx+=5;
    c = createPanel(root, root.id+"_txt1", "", 10, 5, w-20, 32);
    c.style.fontFamily = "'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif";
    c.style.fontSize = "12pt";
    c.style.color = "#000000";
    c.style.whiteSpace = "nowrap";
    c.style.cursor="pointer";
    c.innerHTML = "<div style='vertical-align:text-top;text-overflow:ellipsis;overflow:hidden;display:inline-block;max-width:"+(w-20)+"px'>...</div>";
    root.c_text = c.childNodes[0];

    //progress bar
    c = createPanel(root, root.id+"_p1", "#e0e0f0", 0, 32, w, 7);
    c = createPanel(c, root.id+"_p2", "rgb(29,161,242)", 0, 0, 1, 7);
    root.c_p1 = c;
    root.c_p1.v_w = w;
}


]]></onCreate>
      <sizeRatio>0.555882352941176</sizeRatio>
      <top>292</top>
      <topRatio>0.366834170854271</topRatio>
      <width>340</width>
      <widthRatio>0.31278748850046</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel61">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>25</left>
      <leftRatio>0.0229990800367985</leftRatio>
      <onClick><![CDATA[var xml = "";
xml += "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n";
xml += "<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n";

xml += "  <url>\n";
xml += "    <loc>https://fistalk.com/msg/67688</loc>\n";
xml += "    <lastmod>2023-01-13</lastmod>\n";
xml += "  </url>\n";

xml += "</urlset>\n";

var filename = "file.xml";
var aLink = document.createElement("a");
var bb = new Blob([xml], {type: "text/plain"});
aLink.setAttribute("href", window.URL.createObjectURL(bb));
aLink.setAttribute("download", filename);
aLink.dataset.downloadurl = ["text/plain", aLink.download, aLink.href].join(":");
aLink.draggable = true; 
aLink.classList.add("dragout");

aLink.click();]]></onClick>
      <onCreate>g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc","","","","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";



</onCreate>
      <sizeRatio>0.203703703703704</sizeRatio>
      <text>XML File</text>
      <top>187</top>
      <topRatio>0.234924623115578</topRatio>
      <width>162</width>
      <widthRatio>0.149034038638454</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel62">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>271</left>
      <leftRatio>0.249310027598896</leftRatio>
      <onClick><![CDATA[(async () => {
    try {
        g5.db = new g5.Database("DBA", "tableA");
        let exists = await g5.db.tableExists();
        if (exists) await g5.db.deleteTable();
        await g5.db.createTable("id",["f1","f2"]);
    } catch (error) {
        console.error(error);
    }
})();

]]></onClick>
      <onCreate>g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc","","","","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";



</onCreate>
      <sizeRatio>0.203703703703704</sizeRatio>
      <text>创建表</text>
      <top>612</top>
      <topRatio>0.768844221105528</topRatio>
      <width>162</width>
      <widthRatio>0.149034038638454</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel63">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>271</left>
      <leftRatio>0.249310027598896</leftRatio>
      <onClick><![CDATA[// 使用示例

(async () => {
    try {
        let db = new g5.Database("DBA", "tableA");
        let exists = await db.tableExists();
        if (exists) await db.deleteTable();
        await db.createTable("id",["f1","f2"]);
    } catch (error) {
        console.error(error);
    }
})();
]]></onClick>
      <onCreate>g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc","","","","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";



</onCreate>
      <sizeRatio>0.203703703703704</sizeRatio>
      <text>插入数据和搜索</text>
      <top>664</top>
      <topRatio>0.834170854271357</topRatio>
      <width>162</width>
      <widthRatio>0.149034038638454</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel64">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>495</left>
      <leftRatio>0.455381784728611</leftRatio>
      <onClick>g5.alertTest = new g5.PushNotificationManager();



</onClick>
      <onCreate>g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc","","","","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";



</onCreate>
      <sizeRatio>0.203703703703704</sizeRatio>
      <text>push alert 1</text>
      <top>610</top>
      <topRatio>0.766331658291457</topRatio>
      <width>162</width>
      <widthRatio>0.149034038638454</widthRatio>
    </control>
    <control type="Panel" pathname="/divRoot/divroot1/panel65">
      <backgroundColor>8ED0F9</backgroundColor>
      <cursor>pointer</cursor>
      <fontBold>true</fontBold>
      <fontColor>1DA1F2</fontColor>
      <fontFamily>'Segoe UI', Meiryo, system-ui, -apple-system, BlinkMacSystemFont, sans-serif</fontFamily>
      <fontSize>12</fontSize>
      <height>33</height>
      <heightRatio>0.0414572864321608</heightRatio>
      <layerVisible>false</layerVisible>
      <left>495</left>
      <leftRatio>0.455381784728611</leftRatio>
      <onClick><![CDATA[g5.alertTest.askPermission().then(() => g5.alertTest.subscribeUser());

]]></onClick>
      <onCreate>g5.initButtonV3(sender,[
    new g5.BStyle("#ffffff","#e8f5fe","#d2ecfc","","","","#1da1f2","#1da1f2","#1da1f2","#1da1f2")
]);
sender.style.borderRadius = parseInt(eb.getDivRect(sender).h/2) + "px";
sender.style.boxShadow = "2px 2px 4px #a0a0a0";



</onCreate>
      <sizeRatio>0.203703703703704</sizeRatio>
      <text>ask permission</text>
      <top>665</top>
      <topRatio>0.835427135678392</topRatio>
      <width>162</width>
      <widthRatio>0.149034038638454</widthRatio>
    </control>
  </controls>
  <taskSet count="2">
    <taskSetItem name="uploadImage">
      <script1>//data,controlName,onComplete
//newFileName
 
eio.appendString16(uploadImage.controlName);
eio.appendString32(uploadImage.data);</script1>
      <script2><![CDATA[var controlName = eio.readString16();

var sql,sqlResult;  
var getFileName = function(sn, sep) {
    sn = parseInt(sn);
    var f1 = (sn &amp; 0xFF000000) >> 24;
    var f2 = (sn &amp; 0x00fff000) >> 12;
    f1 = f1 ^ 0x59AE;
    f2 = f2 ^ 0xA93;
    sn = ((sn >> 7) | ((sn &amp; 0x7f)<<24)) ^ 0x5BC3A96A;
    return "usrb" + sep + "usr" + f1 + sep + f2 + sep + "p" + sn + ".jpg";
}

//onUploadStart(): newFilePathName,newFileName
var newFilePathName, newFileName;
sql = "select next value for dbo.SEQImageSn as Sn";
sqlResult = db.executeQuery("DB", sql);
if (sqlResult == null) {
    return;
}
db.read(sqlResult);
var sn = db.getInt32(sqlResult, "Sn");
newFileName = getFileName(sn, "/");
newFilePathName = "c:\\www\\incoming\\"+ getFileName(sn, "\\");
es.logCommon("upload test 1 file:" + newFilePathName);

//implementation
var buff = eio.readString32();
var pos = buff.indexOf("base64,",0);
if (pos<0) return;
pos += "base64,".length;
buff = buff.substr(pos, buff.length - pos);
es.saveBase64AsFile(newFilePathName, buff);
es.logCommon("upload test file:" + newFilePathName);

if (controlName == "ee_panel299") {
} else if (controlName == "ee_panel4") {
} else if (controlName == "ee_panel5") {
}

eio.appendString8("T");
eio.appendString16(newFileName);

]]></script2>
      <script3>if (eio.readString8()!="T") {
    return;
}

uploadImage.newFileName = eio.readString16();  

if (!eb.isEmpty(uploadImage.onComplete)) {
    uploadImage.onComplete(uploadImage.newFileName);
    uploadImage.onComplete = null;
}</script3>
    </taskSetItem>
    <taskSetItem name="uploadFile">
      <script1>//status(s),controlName,fileSize,fileName,onComplete
//status(p),controlName,/p),data,controlName,onComplete
//newFileName
eio.appendString8(uploadFile.status);
eio.appendString16(uploadFile.controlName);
eio.appendString32(uploadFile.data);</script1>
      <script2><![CDATA[var status = eio.readString8();
var controlName = eio.readString16();

var sql,sqlResult;  
var getFileName = function(sn, sep) {
    sn = parseInt(sn);
    var f1 = (sn &amp; 0xFF000000) >> 24;
    var f2 = (sn &amp; 0x00fff000) >> 12;
    f1 = f1 ^ 0x59AE;
    f2 = f2 ^ 0xA93;
    sn = ((sn >> 7) | ((sn &amp; 0x7f)<<24)) ^ 0x5BC3A96A;
    return "usrb" + sep + "usr" + f1 + sep + f2 + sep + "p" + sn + ".jpg";
}

//onUploadStart(): newFilePathName,newFileName
var newFilePathName, newFileName;
sql = "select next value for dbo.SEQImageSn as Sn";
sqlResult = db.executeQuery("DB", sql);
if (sqlResult == null) {
    return;
}
db.read(sqlResult);
var sn = db.getInt32(sqlResult, "Sn");
newFileName = getFileName(sn, "/");
newFilePathName = "c:\\www\\incoming\\"+ getFileName(sn, "\\");
es.logCommon("upload test 1 file:" + newFilePathName);

//implementation
var buff = eio.readString32();
var pos = buff.indexOf("base64,",0);
if (pos<0) return;
pos += "base64,".length;
buff = buff.substr(pos, buff.length - pos);
es.saveBase64AsFile(newFilePathName, buff);
es.logCommon("upload test file:" + newFilePathName);

if (controlName == "ee_panel299") {
} else if (controlName == "ee_panel4") {
} else if (controlName == "ee_panel5") {
}

eio.appendString8("T");
eio.appendString16(newFileName);

]]></script2>
      <script3>if (eio.readString8()!="T") {
    return;
}

uploadImage.newFileName = eio.readString16();  

if (!eb.isEmpty(uploadImage.onComplete)) {
    uploadImage.onComplete(uploadImage.newFileName);
    uploadImage.onComplete = null;
}</script3>
    </taskSetItem>
  </taskSet>
  <gridLines count="0" />
  <g5Items count="7">
    <item name="BStyle" type="20">
      <varValue />
      <functionParam>color1,color2,color3,text1,text2,text3,tColor1,tColor2,tColor3,bdColor</functionParam>
      <functionCode>this.color1 = color1;
this.color2 = color2
this.color3 = color3;
this.text1 = text1;
this.text2 = text2;
this.text3 = text3;
this.tColor1 = tColor1;
this.tColor2 = tColor2;
this.tColor3 = tColor3;
this.bdColor = bdColor;</functionCode>
    </item>
    <item name="icon" type="10">
      <varValue><![CDATA[{
heart1: "<g><path d=\"M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12zM7.354 4.225c-2.08 0-3.903 1.988-3.903 4.255 0 5.74 7.034 11.596 8.55 11.658 1.518-.062 8.55-5.917 8.55-11.658 0-2.267-1.823-4.255-3.903-4.255-2.528 0-3.94 2.936-3.952 2.965-.23.562-1.156.562-1.387 0-.014-.03-1.425-2.965-3.954-2.965z\"></path></g>",
heart2: "<g><path d=\"M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12z\"></path></g>",
unlike: "<g><path d=\"M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v1.91l.01.01L1 14c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z\"></path></g>",
forward: "<g><path d=\"M23.77 15.67c-.292-.293-.767-.293-1.06 0l-2.22 2.22V7.65c0-2.068-1.683-3.75-3.75-3.75h-5.85c-.414 0-.75.336-.75.75s.336.75.75.75h5.85c1.24 0 2.25 1.01 2.25 2.25v10.24l-2.22-2.22c-.293-.293-.768-.293-1.06 0s-.294.768 0 1.06l3.5 3.5c.145.147.337.22.53.22s.383-.072.53-.22l3.5-3.5c.294-.292.294-.767 0-1.06zm-10.66 3.28H7.26c-1.24 0-2.25-1.01-2.25-2.25V6.46l2.22 2.22c.148.147.34.22.532.22s.384-.073.53-.22c.293-.293.293-.768 0-1.06l-3.5-3.5c-.293-.294-.768-.294-1.06 0l-3.5 3.5c-.294.292-.294.767 0 1.06s.767.293 1.06 0l2.22-2.22V16.7c0 2.068 1.683 3.75 3.75 3.75h5.85c.414 0 .75-.336.75-.75s-.337-.75-.75-.75z\"></path></g>",
trash: "<g><path d=\"M20.746 5.236h-3.75V4.25c0-1.24-1.01-2.25-2.25-2.25h-5.5c-1.24 0-2.25 1.01-2.25 2.25v.986h-3.75c-.414 0-.75.336-.75.75s.336.75.75.75h.368l1.583 13.262c.216 1.193 1.31 2.027 2.658 2.027h8.282c1.35 0 2.442-.834 2.664-2.072l1.577-13.217h.368c.414 0 .75-.336.75-.75s-.335-.75-.75-.75zM8.496 4.25c0-.413.337-.75.75-.75h5.5c.413 0 .75.337.75.75v.986h-7V4.25zm8.822 15.48c-.1.55-.664.795-1.18.795H7.854c-.517 0-1.083-.246-1.175-.75L5.126 6.735h13.74L17.32 19.732z\"></path><path d=\"M10 17.75c.414 0 .75-.336.75-.75v-7c0-.414-.336-.75-.75-.75s-.75.336-.75.75v7c0 .414.336.75.75.75zm4 0c.414 0 .75-.336.75-.75v-7c0-.414-.336-.75-.75-.75s-.75.336-.75.75v7c0 .414.336.75.75.75z\"></path></g>",
pin: "<g><path d=\"M20.472 14.738c-.388-1.808-2.24-3.517-3.908-4.246l-.474-4.307 1.344-2.016c.258-.387.28-.88.062-1.286-.218-.406-.64-.66-1.102-.66H7.54c-.46 0-.884.254-1.1.66-.22.407-.197.9.06 1.284l1.35 2.025-.42 4.3c-1.667.732-3.515 2.44-3.896 4.222-.066.267-.043.672.222 1.01.14.178.46.474 1.06.474h3.858l2.638 6.1c.12.273.39.45.688.45s.57-.177.688-.45l2.638-6.1h3.86c.6 0 .92-.297 1.058-.474.265-.34.288-.745.228-.988zM12 20.11l-1.692-3.912h3.384L12 20.11zm-6.896-5.413c.456-1.166 1.904-2.506 3.265-2.96l.46-.153.566-5.777-1.39-2.082h7.922l-1.39 2.08.637 5.78.456.153c1.355.45 2.796 1.78 3.264 2.96H5.104z\"></path></g>",
bookMark: "<g><path d=\"M23.074 3.35H20.65V.927c0-.414-.337-.75-.75-.75s-.75.336-.75.75V3.35h-2.426c-.414 0-.75.337-.75.75s.336.75.75.75h2.425v2.426c0 .414.335.75.75.75s.75-.336.75-.75V4.85h2.424c.414 0 .75-.335.75-.75s-.336-.75-.75-.75zM19.9 10.744c-.415 0-.75.336-.75.75v9.782l-6.71-4.883c-.13-.095-.285-.143-.44-.143s-.31.048-.44.144l-6.71 4.883V5.6c0-.412.337-.75.75-.75h6.902c.414 0 .75-.335.75-.75s-.336-.75-.75-.75h-6.9c-1.242 0-2.25 1.01-2.25 2.25v17.15c0 .282.157.54.41.668.25.13.553.104.78-.062L12 17.928l7.458 5.43c.13.094.286.143.44.143.117 0 .234-.026.34-.08.252-.13.41-.387.41-.67V11.495c0-.414-.335-.75-.75-.75z\"></path></g>",
back: "<g><path d=\"M20 11H7.414l4.293-4.293c.39-.39.39-1.023 0-1.414s-1.023-.39-1.414 0l-6 6c-.39.39-.39 1.023 0 1.414l6 6c.195.195.45.293.707.293s.512-.098.707-.293c.39-.39.39-1.023 0-1.414L7.414 13H20c.553 0 1-.447 1-1s-.447-1-1-1z\"></path></g>",
youtube: "<g><path d=\"M1995 3219 c-231 -3 -472 -9 -535 -13 -203 -13 -428 -36 -501 -51 -151 -32 -305 -145 -372 -272 -77 -149 -110 -450 -110 -1028 0 -559 32 -879 101 -1025 60 -125 232 -254 379 -285 219 -46 663 -65 1483 -65 995 0 1443 26 1609 93 184 74 290 205 331 408 83 407 82 1318 -1 1733 -27 134 -65 213 -139 290 -68 71 -145 117 -235 139 -240 60 -1028 90 -2010 76z m618 -1084 c251 -154 456 -282 456 -285 0 -4 -774 -483 -946 -586 l-43 -25 0 611 0 611 39 -23 c21 -13 244 -149 494 -303z\"/></g>",
dot3: "<g><circle cx='5' cy='12' r='2'></circle><circle cx='12' cy='12' r='2'></circle><circle cx='19' cy='12' r='2'></circle></g>",
mute: "<g><path d=\"M1.75 22.354c-.192 0-.384-.073-.53-.22-.293-.293-.293-.768 0-1.06L20.395 1.898c.293-.294.768-.294 1.06 0s.294.767 0 1.06L2.28 22.135c-.146.146-.338.22-.53.22zm1.716-5.577c-.134 0-.27-.036-.392-.11-.67-.413-1.07-1.13-1.07-1.917v-5.5c0-1.24 1.01-2.25 2.25-2.25H6.74l7.047-5.588c.225-.18.533-.215.792-.087.258.125.423.387.423.675v3.28c0 .415-.336.75-.75.75s-.75-.335-.75-.75V3.553L7.47 8.338c-.134.104-.298.162-.467.162h-2.75c-.413 0-.75.337-.75.75v5.5c0 .263.134.5.356.64.353.216.462.678.245 1.03-.14.23-.387.357-.64.357zm10.787 5.973c-.166 0-.33-.055-.466-.162l-4.795-3.803c-.325-.258-.38-.73-.122-1.054.258-.322.73-.38 1.054-.12l3.58 2.838v-7.013c0-.414.335-.75.75-.75s.75.336.75.75V22c0 .288-.166.55-.425.675-.104.05-.216.075-.327.075z\"></path></g>",
homePage: "<g><path d=\"M22.58 7.35L12.475 1.897c-.297-.16-.654-.16-.95 0L1.425 7.35c-.486.264-.667.87-.405 1.356.18.335.525.525.88.525.16 0 .324-.038.475-.12l.734-.396 1.59 11.25c.216 1.214 1.31 2.062 2.66 2.062h9.282c1.35 0 2.444-.848 2.662-2.088l1.588-11.225.737.398c.485.263 1.092.082 1.354-.404.263-.486.08-1.093-.404-1.355zM12 15.435c-1.795 0-3.25-1.455-3.25-3.25s1.455-3.25 3.25-3.25 3.25 1.455 3.25 3.25-1.455 3.25-3.25 3.25z\"></path></g>",
menu: "<g><path d=\"M19.98 1.775H4.02c-1.24 0-2.25 1.01-2.25 2.25v15.95c0 1.24 1.01 2.25 2.25 2.25h15.96c1.24 0 2.25-1.01 2.25-2.25V4.025c0-1.24-1.01-2.25-2.25-2.25zm.75 18.2c0 .42-.34.75-.75.75H4.02c-.41 0-.75-.33-.75-.75v-9.48h17.46v9.48zm0-10.23H3.27v-5.72c0-.42.34-.75.75-.75h15.96c.41 0 .75.33.75.75v5.72z\"></path><path d=\"M8.96 6.515v.09c0 .95-.78 1.72-1.73 1.72h-.08c-.95 0-1.73-.77-1.73-1.72v-.09c0-.95.78-1.73 1.73-1.73h.08c.95 0 1.73.78 1.73 1.73zm9.54.04c0 .42-.34.75-.75.75h-6.39c-.41 0-.75-.33-.75-.75 0-.41.34-.75.75-.75h6.39c.41 0 .75.34.75.75zm-9.54 7.17v.09c0 .95-.78 1.73-1.73 1.73h-.08c-.95 0-1.73-.78-1.73-1.73v-.09c0-.95.78-1.72 1.73-1.72h.08c.95 0 1.73.77 1.73 1.72zm9.54.05c0 .41-.34.75-.75.75h-6.39c-.41 0-.75-.34-.75-.75 0-.42.34-.75.75-.75h6.39c.41 0 .75.33.75.75zm0 3.6c0 .42-.34.75-.75.75h-6.39c-.41 0-.75-.33-.75-.75 0-.41.34-.75.75-.75h6.39c.41 0 .75.34.75.75z\"></path></g>",
speaker: "<g transform='translate(0.000000,300.000000) scale(0.100000,-0.12000)' stroke='none'> <path d='M1954 2476 c-37 -16 -64 -51 -64 -84 0 -51 27 -78 124 -126 222 -108 379 -295 448 -533 20 -67 23 -100 22 -238 0 -152 -2 -165 -32 -255 -78 -235 -230 -404 -463 -514 -76 -36 -99 -61 -99 -107 0 -50 49 -99 101 -99 11 0 49 14 86 30 211 96 412 295 509 505 66 144 86 233 91 410 6 184 -11 292 -66 430 -96 239 -288 445 -513 549 -96 45 -107 47 -144 32z'/> <path d='M1185 2215 l-260 -153 0 -562 0 -562 260 -154 c143 -84 270 -154 283 -154 33 0 76 25 98 57 18 27 19 61 22 797 2 752 2 770 -18 810 -21 45 -64 76 -102 75 -12 0 -140 -70 -283 -154z'/> <path d='M1812 2036 c-38 -18 -56 -57 -48 -105 7 -46 27 -65 96 -90 80 -29 151 -95 192 -179 30 -60 33 -75 33 -157 0 -82 -3 -97 -32 -156 -40 -81 -103 -141 -188 -180 -73 -33 -105 -68 -105 -115 0 -39 39 -90 75 -96 33 -7 127 26 190 66 76 49 122 93 164 155 157 235 130 520 -69 722 -111 113 -235 167 -308 135z'/> <path d='M384 1951 c-66 -40 -64 -27 -64 -444 0 -407 2 -420 53 -449 15 -9 85 -15 215 -18 l192 -5 0 468 0 467 -182 0 c-163 0 -187 -2 -214 -19z'/> </g>",
close: "<g><path d=\"M13.414 12l5.793-5.793c.39-.39.39-1.023 0-1.414s-1.023-.39-1.414 0L12 10.586 6.207 4.793c-.39-.39-1.023-.39-1.414 0s-.39 1.023 0 1.414L10.586 12l-5.793 5.793c-.39.39-.39 1.023 0 1.414.195.195.45.293.707.293s.512-.098.707-.293L12 13.414l5.793 5.793c.195.195.45.293.707.293s.512-.098.707-.293c.39-.39.39-1.023 0-1.414L13.414 12z\"></path></g>",
end:""
}]]></varValue>
      <functionParam />
      <functionCode />
    </item>
    <item name="writeLog" type="20">
      <varValue />
      <functionParam>text, status</functionParam>
      <functionCode><![CDATA[if (eb.isEmpty(status)) status = false;
ee.setVisible(ee.getControl("panel288"), true);
if (g5.isMobile) {
    ee.setRect(ee.getControl("panel288"), 0,null,null,null);
}
if (status) {
    ee.setText(ee.getControl("panel113"),text);
    return;
}
if (!g5.lastLogTime) g5.lastLogTime = new Date().getTime();
var c = ee.getControl("panel37");
c.setText(ee.getText(c) + "<br/>" + text + "(" + ((new Date().getTime())-g5.lastLogTime) + "ms)");
g5.lastLogTime = new Date().getTime();
eb.processDock();

]]></functionCode>
    </item>
    <item name="initButtonV3" type="20">
      <varValue />
      <functionParam>sender,v_style</functionParam>
      <functionCode><![CDATA[sender.v_style = v_style;

sender.init = function(index) {
    this.v_index = index;
    this.style.backgroundColor = this.v_style[index].color1;
    this.setTextCurrent(this.v_style[index].text1);
    this.setTextColor(this.v_style[index].tColor1);
    if (this.v_style[index].bdColor=="") {
        this.style.borderWidth = "0px";
        if (this.label) eb.setDivRect(this.label.parentNode,0,0,null,null);
    } else {
        this.style.boxSizing="border-box";
        this.style.borderWidth = "1px";
        this.style.borderColor = this.v_style[index].bdColor;
        this.style.borderStyle = "solid";
        if (this.label) eb.setDivRect(this.label.parentNode,-1,-1,null,null);
    }
    //this.style.borderRadius = parseInt(eb.getDivRect(this).h/2) + "px";
    if (this.c_cover) ee.removeControl(this.c_cover);
    this.c_cover = createPanel(this, "", "#00000001", 0, 0, 1, 1);
    eb.setDock(this.c_cover,"fill","fill");
}

sender.setText = function(text1, styleIndex, text2, text3) {
    if (!styleIndex) styleIndex = 0;
    if (!text2) text2 = text1;
    if (!text3) text3 = text2;
    this.v_style[styleIndex].text1 = text1;
    this.v_style[styleIndex].text2 = text2;
    this.v_style[styleIndex].text3 = text3;
    this.setTextCurrent(text1);
}

sender.setTextCurrent = function(text) {
    var index = this.v_index;
    if ((this.v_style[index].text1.length>0) || (this.v_style[index].text2.length>0) || (this.v_style[index].text3.length>0)) {
        ee.setText(this,text);
    }
}

sender.setTextColor = function(color) {
    var index = this.v_index;
    if ((this.v_style[index].tColor1.length>0) || (this.v_style[index].tColor2.length>0) || (this.v_style[index].tColor3.length>0)) {
        ee.setTextColor(this, color);
    }
}

ee.setOnMouseEnter(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color2;
    this.setTextCurrent(s.text2);
    this.setTextColor(s.tColor2);
});
ee.setOnMouseLeave(sender, function(sender,event) { 
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    this.setTextCurrent(s.text1);
    this.setTextColor(s.tColor1);
});
sender.eeMouseDown = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color3;
    this.setTextCurrent(s.text3);
    this.setTextColor(s.tColor3);
}
sender.eeMouseUp = function(sender,event,x,y) {
    var s =sender.v_style[sender.v_index];
    if ("ontouchstart" in window) {
        sender.style.backgroundColor = s.color1;
        this.setTextCurrent(s.text1);
        this.setTextColor(s.tColor1);
    } else {
        sender.style.backgroundColor = s.color2;
        this.setTextCurrent(s.text2);
        this.setTextColor(s.tColor2);
    }
}
sender.eeOnClickCancel = function(sender,event) {
    var s =sender.v_style[sender.v_index];
    sender.style.backgroundColor = s.color1;
    this.setTextCurrent(s.text1);
    this.setTextColor(s.tColor1);
}
eb.initMouseEvent(sender);

sender.init(0);]]></functionCode>
    </item>
    <item name="Database" type="10">
      <varValue><![CDATA[class DatabaseTable {
    constructor(dbName, tableName) {
        this.dbName = dbName;
        this.tableName = tableName;
        this.db = null;
        this.version = -1;
    }

    getVersion() {
        return new Promise((resolve, reject) => {
            let request = indexedDB.open(this.dbName);
    
            request.onsuccess = (event) => {
                let db = event.target.result;
                this.version = db.version;
                db.close(); // 关闭数据库连接
                resolve(this.version);
            };
    
            request.onerror = (event) => {
                reject(`Database error: ${event.target.error}`);
            };
        });
    }

    tableExists() {
        return new Promise((resolve, reject) => {
            let request = indexedDB.open(this.dbName);
    
            request.onsuccess = (event) => {
                let db = event.target.result;
                let exists = db.objectStoreNames.contains(this.tableName);
                db.close();
                resolve(exists);
            };
    
            request.onerror = (event) => {
                reject(`Database error: ${event.target.error}`);
            };
        });
    }

    async createTable(idName, fields) {
        this.idName = idName;
        this.fields = fields;
        if (this.version < 0) await this.getVersion();
        this.version++;
        return new Promise((resolve, reject) => {
            let request = indexedDB.open(this.dbName, this.version);

            request.onupgradeneeded = (event) => {
                this.db = event.target.result;
                let objectStore = this.db.createObjectStore(this.tableName, { keyPath: idName, autoIncrement: true });
                fields.forEach(function(field) {
                    objectStore.createIndex(field, field, { unique: false });
                });
            };

            request.onsuccess = (event) => {
                this.db = event.target.result;
                resolve();
            };

            request.onerror = (event) => {
                reject('Database error: ' + event.target.error);
            };
        });
    }

    async deleteTable() {
        if (this.version < 0) await this.getVersion();
        this.version++;
        return new Promise((resolve, reject) => {
            let request = indexedDB.open(this.dbName, this.version);
    
            request.onupgradeneeded = (event) => {
                let db = event.target.result;
                if (db.objectStoreNames.contains(this.tableName)) {
                    db.deleteObjectStore(this.tableName);
                    resolve(`Object store "${this.tableName}" deleted`);
                } else {
                    reject(`Object store "${this.tableName}" does not exist`);
                }
            };
    
            request.onsuccess = (event) => {
                let db = event.target.result;
                db.close();
            };
    
            request.onerror = (event) => {
                reject(`Database error: ${event.target.error}`);
            };
        });
    }
    
    append(record) {
        return new Promise((resolve, reject) => {
            let transaction = this.db.transaction([this.tableName], 'readwrite');
            let objectStore = transaction.objectStore(this.tableName);
            let r = {};
            for (let i = 0; i < this.fields.length; i++) {
                r[this.fields[i]] = record[i];
            }
            let request = objectStore.add(r);

            request.onsuccess = () => {
                resolve('Task added successfully');
            };

            request.onerror = (event) => {
                reject('Add task error: ' + event.target.error);
            };
        });
    }

    displayTasks() {
        return new Promise((resolve, reject) => {
            let transaction = this.db.transaction([this.tableName], 'readonly');
            let objectStore = transaction.objectStore(this.tableName);
            let request = objectStore.openCursor();
            let tasks = [];

            request.onsuccess = (event) => {
                let cursor = event.target.result;
                if (cursor) {
                    tasks.push(cursor.value);
                    cursor.continue();
                } else {
                    resolve(tasks);
                }
            };

            request.onerror = (event) => {
                reject('Cursor error: ' + event.target.error);
            };
        });
    }

    // 更新任务
    updateTask(id, newStatus) {
        return new Promise((resolve, reject) => {
            let transaction = this.db.transaction([this.tableName], 'readwrite');
            let objectStore = transaction.objectStore(this.tableName);
            let request = objectStore.get(id);

            request.onsuccess = (event) => {
                let task = event.target.result;
                task.status = newStatus;
                let updateRequest = objectStore.put(task);

                updateRequest.onsuccess = () => {
                    resolve('Task updated successfully');
                };

                updateRequest.onerror = (event) => {
                    reject('Update task error: ' + event.target.error);
                };
            };

            request.onerror = (event) => {
                reject('Get task error: ' + event.target.error);
            };
        });
    }

    // 删除任务
    deleteTask(id) {
        return new Promise((resolve, reject) => {
            let transaction = this.db.transaction([this.tableName], 'readwrite');
            let objectStore = transaction.objectStore(this.tableName);
            let request = objectStore.delete(id);

            request.onsuccess = () => {
                resolve('Task deleted successfully');
            };

            request.onerror = (event) => {
                reject('Delete task error: ' + event.target.error);
            };
        });
    }
}
]]></varValue>
      <functionParam />
      <functionCode />
    </item>
    <item name="askPermission" type="20">
      <varValue />
      <functionParam />
      <functionCode>return new Promise(function(resolve, reject) {
    const permissionResult = Notification.requestPermission(function(result) {
        resolve(result);
    });

    if (permissionResult) {
        permissionResult.then(resolve, reject);
    }
})
.then(function(permissionResult) {
    if (permissionResult !== "granted") {
        throw new Error("We weren't granted permission.");
    }
});

</functionCode>
    </item>
    <item name="PushNotificationManager" type="10">
      <varValue><![CDATA[class PushNotificationManager {
    constructor() {
        this.vapidPublicKey = "YOUR_PUBLIC_VAPID_KEY";
        this.registerServiceWorker();
    }

    registerServiceWorker() {
        if ("serviceWorker" in navigator &amp;&amp; "PushManager" in window) {
            navigator.serviceWorker.register("/service-worker.js")
                .then((swReg) => {
                    console.log("Service Worker is registered", swReg);
                    this.askPermission().then(() => this.subscribeUser());
                })
                .catch((error) => {
                    console.error("Service Worker Error", error);
                });
        } else {
            console.warn("Push messaging is not supported");
        }
    }

    askPermission() {
        return new Promise((resolve, reject) => {
            const permissionResult = Notification.requestPermission((result) => {
                resolve(result);
            });

            if (permissionResult) {
                permissionResult.then(resolve, reject);
            }
        })
        .then((permissionResult) => {
            if (permissionResult !== "granted") {
                throw new Error("Permission not granted for notifications");
            }
        });
    }

    urlB64ToUint8Array(base64String) {
        const padding = "=".repeat((4 - base64String.length % 4) % 4);
        const base64 = (base64String + padding)
            .replace(/-/g, "+")
            .replace(/_/g, "/");
        const rawData = window.atob(base64);
        const outputArray = new Uint8Array(rawData.length);
        for (let i = 0; i < rawData.length; ++i) {
            outputArray[i] = rawData.charCodeAt(i);
        }
        return outputArray;
    }

    subscribeUser() {
        navigator.serviceWorker.ready.then((registration) => {
            const applicationServerKey = this.urlB64ToUint8Array(this.vapidPublicKey);
            registration.pushManager.subscribe({
                userVisibleOnly: true,
                applicationServerKey: applicationServerKey
            })
            .then((subscription) => {
                console.log("User is subscribed:", subscription);
                this.sendSubscriptionToServer(subscription);
            })
            .catch((err) => {
                console.log("Failed to subscribe the user: ", err);
            });
        });
    }

    sendSubscriptionToServer(subscription) {
        return fetch("/api/subscribe", {
            method: "POST",
            body: JSON.stringify(subscription),
            headers: {
                "Content-Type": "application/json"
            }
        })
        .then((response) => {
            if (!response.ok) {
                throw new Error("Bad status code from server.");
            }
            return response.json();
        })
        .then((responseData) => {
            if (!(responseData &amp;&amp; responseData.success)) {
                throw new Error("Bad response from server.");
            }
        });
    }
}

]]></varValue>
      <functionParam />
      <functionCode />
    </item>
  </g5Items>
</page>